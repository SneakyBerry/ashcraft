syntax = "proto2";

import "bgs/low/pb/client/attribute_types.proto";
import "bgs/low/pb/client/entity_types.proto";
import "bgs/low/pb/client/game_utilities_types.proto";
import "bgs/low/pb/client/rpc_types.proto";
package bgs.protocol.game_utilities.v1;

option java_package = "bnet.protocol.game_utilities.v1";
option java_outer_classname = "GameUtilitiesServiceProto";
option optimize_for = SPEED;
option cc_generic_services = false;
option java_generic_services = true;

message ClientRequest {
  option (.bgs.protocol.message_options) = {
    custom_select_shard: true
  };
  repeated .bgs.protocol.Attribute attribute = 1;
  optional .bgs.protocol.ProcessId host = 2 [deprecated = true];
  optional .bgs.protocol.EntityId account_id = 3;
  optional .bgs.protocol.EntityId game_account_id = 4;
  optional fixed32 program = 5;
  optional .bgs.protocol.game_utilities.v1.ClientInfo client_info = 6;
}

message ClientResponse {
  repeated .bgs.protocol.Attribute attribute = 1;
}

message ServerRequest {
  repeated .bgs.protocol.Attribute attribute = 1;
  required fixed32 program = 2;
  optional .bgs.protocol.ProcessId host = 3 [deprecated = true];
}

message ServerResponse {
  repeated .bgs.protocol.Attribute attribute = 1;
}

message PresenceChannelCreatedRequest {
  required .bgs.protocol.EntityId id = 1;
  optional .bgs.protocol.EntityId game_account_id = 3;
  optional .bgs.protocol.EntityId account_id = 4;
  optional .bgs.protocol.ProcessId host = 5 [deprecated = true];
}

message GameAccountOnlineNotification {
  required .bgs.protocol.EntityId game_account_id = 1;
  optional .bgs.protocol.ProcessId host = 2 [deprecated = true];
  optional string session_id = 3;
}

message GameAccountOfflineNotification {
  required .bgs.protocol.EntityId game_account_id = 1;
  optional .bgs.protocol.ProcessId host = 2 [deprecated = true];
  optional string session_id = 3;
}

message GetAllValuesForAttributeRequest {
  option (.bgs.protocol.message_options) = {
    custom_select_shard: true
  };
  optional string attribute_key = 1 [(.bgs.protocol.valid) = {
    string {
      size {
        min: 1
        max: 256
      }
    }
  }];
  optional .bgs.protocol.EntityId agent_id = 2;
  optional fixed32 program = 5;
}

message GetAllValuesForAttributeResponse {
  repeated .bgs.protocol.Variant attribute_value = 1;
}

message RegisterUtilitiesRequest {
  repeated .bgs.protocol.Attribute attribute = 1;
  optional fixed32 program = 2 [(.bgs.protocol.valid) = {
    unsigned {
      exclude: 0
    }
  }];
}

message RegisterUtilitiesResponse {
  optional string client_id = 1;
}

message UnregisterUtilitiesRequest {
}

service GameUtilitiesService {
  option (.bgs.protocol.service_options) = {
    descriptor_name: "bnet.protocol.game_utilities.GameUtilities"
    shard_name: "game_utilities"
  };
  option (.bgs.protocol.sdk_service_options) = {
    inbound: true
    outbound: true
  };
  rpc ProcessClientRequest(.bgs.protocol.game_utilities.v1.ClientRequest) returns (.bgs.protocol.game_utilities.v1.ClientResponse) {
    option (.bgs.protocol.method_options) = {
      id: 1
    };
  }
  rpc PresenceChannelCreated(.bgs.protocol.game_utilities.v1.PresenceChannelCreatedRequest) returns (.bgs.protocol.NoData) {
    option (.bgs.protocol.method_options) = {
      id: 2
    };
  }
  rpc ProcessServerRequest(.bgs.protocol.game_utilities.v1.ServerRequest) returns (.bgs.protocol.game_utilities.v1.ServerResponse) {
    option (.bgs.protocol.method_options) = {
      id: 6
    };
  }
  rpc OnGameAccountOnline(.bgs.protocol.game_utilities.v1.GameAccountOnlineNotification) returns (.bgs.protocol.NO_RESPONSE) {
    option (.bgs.protocol.method_options) = {
      id: 7
    };
  }
  rpc OnGameAccountOffline(.bgs.protocol.game_utilities.v1.GameAccountOfflineNotification) returns (.bgs.protocol.NO_RESPONSE) {
    option (.bgs.protocol.method_options) = {
      id: 8
    };
  }
  rpc GetAllValuesForAttribute(.bgs.protocol.game_utilities.v1.GetAllValuesForAttributeRequest) returns (.bgs.protocol.game_utilities.v1.GetAllValuesForAttributeResponse) {
    option (.bgs.protocol.method_options) = {
      id: 10
    };
  }
  rpc RegisterUtilities(.bgs.protocol.game_utilities.v1.RegisterUtilitiesRequest) returns (.bgs.protocol.game_utilities.v1.RegisterUtilitiesResponse) {
    option (.bgs.protocol.method_options) = {
      id: 11
      client_identity_routing: CLIENT_IDENTITY_ROUTING_INSTANCE_ID
    };
  }
  rpc UnregisterUtilities(.bgs.protocol.game_utilities.v1.UnregisterUtilitiesRequest) returns (.bgs.protocol.NO_RESPONSE) {
    option (.bgs.protocol.method_options) = {
      id: 12
      client_identity_routing: CLIENT_IDENTITY_ROUTING_INSTANCE_ID
    };
  }
}


