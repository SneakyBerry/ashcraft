syntax = "proto2";

import "bgs/low/pb/client/presence_types.proto";
import "bgs/low/pb/client/account_types.proto";
import "bgs/low/pb/client/rpc_types.proto";
package bgs.protocol.presence.v1;

option optimize_for = SPEED;

message SubscribeNotification {
  optional .bgs.protocol.account.v1.AccountId subscriber_id = 1;
  repeated .bgs.protocol.presence.v1.PresenceState state = 2;
}

message StateChangedNotification {
  optional .bgs.protocol.account.v1.AccountId subscriber_id = 1;
  repeated .bgs.protocol.presence.v1.PresenceState state = 2;
}

service PresenceListener {
  option (.bgs.protocol.service_options) = {
    descriptor_name: "bnet.protocol.presence.v1.PresenceListener"
  };
  option (.bgs.protocol.sdk_service_options) = {
    inbound: true
  };
  rpc OnSubscribe(.bgs.protocol.presence.v1.SubscribeNotification) returns (.bgs.protocol.NO_RESPONSE) {
    option (.bgs.protocol.method_options) = {
      id: 1
      handle_destination_unreachable: true
    };
  }
  rpc OnStateChanged(.bgs.protocol.presence.v1.StateChangedNotification) returns (.bgs.protocol.NO_RESPONSE) {
    option (.bgs.protocol.method_options) = {
      id: 2
      handle_destination_unreachable: true
    };
  }
}


