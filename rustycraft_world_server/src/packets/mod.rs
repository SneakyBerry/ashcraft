use crate::opcodes::{OpcodeClient, OpcodeServer};
use bytes::Bytes;
use deku::bitvec::{BitVec, Msb0};
use deku::prelude::*;
use std::fmt::Debug;

pub mod auth;

fn write(output: &mut BitVec<Msb0, u8>, packet_size: u32) -> Result<(), DekuError> {
    packet_size.write(output, ())
}

#[derive(Debug, DekuWrite, DekuRead)]
#[deku(ctx = "packet_size: u32")]
pub struct PacketHeader {
    #[deku(writer = "write(deku::output, packet_size)")]
    pub size: u32,
    #[deku(count = "12")]
    pub tag: Vec<u8>,
}

#[derive(Debug, DekuWrite)]
pub struct ServerPacket {
    #[deku(ctx = "payload.len() as u32")] // 2 is size of opcode
    header: PacketHeader,
    payload: Vec<u8>,
}


impl ServerPacket {
    pub fn new(aes_tag: Vec<u8>, payload: Bytes) -> ServerPacket {
        assert_eq!(aes_tag.len(), 12);
        ServerPacket {
            header: PacketHeader {
                size: payload.len() as u32,
                tag: aes_tag,
            },
            payload: payload.to_vec(),
        }
    }
    pub fn serialize(&self) -> Result<Bytes, deku::DekuError> {
        self.to_bytes().map(Bytes::from)
    }
}

#[derive(Debug)]
pub struct RawClientPacket {
    pub header: PacketHeader,
    pub payload: Bytes,
}

#[derive(Debug)]
pub enum PacketClient {
    AbandonNpeResponse,
    AcceptGuildInvite,
    AcceptTrade,
    AcceptWargameInvite,
    AccountNotificationAcknowledged,
    ActivateSoulbind,
    ActivateTaxi,
    AddonList,
    AddAccountCosmetic,
    AddBattlenetFriend,
    AddFriend,
    AddIgnore,
    AddToy,
    AdventureJournalOpenQuest,
    AdventureJournalUpdateSuggestions,
    AdventureMapStartQuest,
    AlterAppearance,
    AreaSpiritHealerQuery,
    AreaSpiritHealerQueue,
    AreaTrigger,
    ArtifactAddPower,
    ArtifactSetAppearance,
    AssignEquipmentSetSpec,
    AttackStop,
    AttackSwing,
    AuctionableTokenSell,
    AuctionableTokenSellAtMarketPrice,
    AuctionBrowseQuery,
    AuctionCancelCommoditiesPurchase,
    AuctionConfirmCommoditiesPurchase,
    AuctionGetCommodityQuote,
    AuctionHelloRequest,
    AuctionListBiddedItems,
    AuctionListBucketsByBucketKeys,
    AuctionListItemsByBucketKey,
    AuctionListItemsByItemId,
    AuctionListOwnedItems,
    AuctionPlaceBid,
    AuctionRemoveItem,
    AuctionReplicateItems,
    AuctionSellCommodity,
    AuctionSellItem,
    AuctionSetFavoriteItem,
    AuthContinuedSession,
    AuthSession,
    AutobankItem,
    AutobankReagent,
    AutostoreBankItem,
    AutostoreBankReagent,
    AutoEquipItem,
    AutoEquipItemSlot,
    AutoGuildBankItem,
    AutoStoreBagItem,
    AutoStoreGuildBankItem,
    AzeriteEmpoweredItemSelectPower,
    AzeriteEmpoweredItemViewed,
    AzeriteEssenceActivateEssence,
    AzeriteEssenceUnlockMilestone,
    BankerActivate,
    BattlefieldLeave,
    BattlefieldList,
    BattlefieldPort,
    BattlemasterHello,
    BattlemasterJoin,
    BattlemasterJoinArena,
    BattlemasterJoinBrawl,
    BattlemasterJoinSkirmish,
    BattlenetChallengeResponse,
    BattlenetRequest,
    BattlePayAckFailedResponse,
    BattlePayCancelOpenCheckout,
    BattlePayConfirmPurchaseResponse,
    BattlePayDistributionAssignToTarget,
    BattlePayDistributionAssignVas,
    BattlePayGetProductList,
    BattlePayGetPurchaseList,
    BattlePayOpenCheckout,
    BattlePayRequestPriceInfo,
    BattlePayStartPurchase,
    BattlePayStartVasPurchase,
    BattlePetClearFanfare,
    BattlePetDeletePet,
    BattlePetDeletePetCheat,
    BattlePetModifyName,
    BattlePetRequestJournal,
    BattlePetRequestJournalLock,
    BattlePetSetBattleSlot,
    BattlePetSetFlags,
    BattlePetSummon,
    BattlePetUpdateDisplayNotify,
    BattlePetUpdateNotify,
    BeginTrade,
    BinderActivate,
    BlackMarketBidOnItem,
    BlackMarketOpen,
    BlackMarketRequestItems,
    BonusRoll,
    BugReport,
    BusyTrade,
    BuyBackItem,
    BuyBankSlot,
    BuyItem,
    BuyReagentBank,
    CageBattlePet,
    CalendarAddEvent,
    CalendarCommunityInvite,
    CalendarComplain,
    CalendarCopyEvent,
    CalendarEventSignUp,
    CalendarGet,
    CalendarGetEvent,
    CalendarGetNumPending,
    CalendarInvite,
    CalendarModeratorStatus,
    CalendarRemoveEvent,
    CalendarRemoveInvite,
    CalendarRsvp,
    CalendarStatus,
    CalendarUpdateEvent,
    CancelAura,
    CancelAutoRepeatSpell,
    CancelCast,
    CancelChannelling,
    CancelGrowthAura,
    CancelMasterLootRoll,
    CancelModSpeedNoControlAuras,
    CancelMountAura,
    CancelQueuedSpell,
    CancelTempEnchantment,
    CancelTrade,
    CanDuel,
    CanRedeemTokenForBalance,
    CastSpell,
    ChallengeModeRequestLeaders,
    ChangeBagSlotFlag,
    ChangeBankBagSlotFlag,
    ChangeMonumentAppearance,
    ChangeRealmTicket,
    ChangeSubGroup,
    CharacterCheckUpgrade,
    CharacterRenameRequest,
    CharacterUpgradeManualUnrevokeRequest,
    CharacterUpgradeStart,
    CharCustomize,
    CharDelete,
    CharRaceOrFactionChange,
    ChatAddonMessage,
    ChatAddonMessageTargeted,
    ChatChannelAnnouncements,
    ChatChannelBan,
    ChatChannelDeclineInvite,
    ChatChannelDisplayList,
    ChatChannelInvite,
    ChatChannelKick,
    ChatChannelList,
    ChatChannelModerator,
    ChatChannelOwner,
    ChatChannelPassword,
    ChatChannelSetOwner,
    ChatChannelSilenceAll,
    ChatChannelUnban,
    ChatChannelUnmoderator,
    ChatChannelUnsilenceAll,
    ChatJoinChannel,
    ChatLeaveChannel,
    ChatMessageAfk,
    ChatMessageChannel,
    ChatMessageDnd,
    ChatMessageEmote,
    ChatMessageGuild,
    ChatMessageInstanceChat,
    ChatMessageOfficer,
    ChatMessageParty,
    ChatMessageRaid,
    ChatMessageRaidWarning,
    ChatMessageSay,
    ChatMessageWhisper,
    ChatMessageYell,
    ChatRegisterAddonPrefixes,
    ChatReportFiltered,
    ChatReportIgnored,
    ChatUnregisterAllAddonPrefixes,
    CheckCharacterNameAvailability,
    CheckIsAdventureMapPoiValid,
    ChoiceResponse,
    ChromieTimeSelectExpansion,
    ClaimWeeklyReward,
    ClearNewAppearance,
    ClearRaidMarker,
    ClearTradeItem,
    ClientPortGraveyard,
    CloseInteraction,
    CloseQuestChoice,
    CloseRuneforgeInteraction,
    ClubFinderApplicationResponse,
    ClubFinderGetApplicantsList,
    ClubFinderPost,
    ClubFinderRequestClubsData,
    ClubFinderRequestClubsList,
    ClubFinderRequestMembershipToClub,
    ClubFinderRequestPendingClubsList,
    ClubFinderRequestSubscribedClubPostingIds,
    ClubFinderRespondToApplicant,
    ClubPresenceSubscribe,
    CollectionItemSetFavorite,
    CommentatorEnable,
    CommentatorEnterInstance,
    CommentatorExitInstance,
    CommentatorGetMapInfo,
    CommentatorGetPlayerCooldowns,
    CommentatorGetPlayerInfo,
    CommentatorSpectate,
    CommentatorStartWargame,
    CommerceTokenGetCount,
    CommerceTokenGetLog,
    CommerceTokenGetMarketPrice,
    Complaint,
    CompleteCinematic,
    CompleteMovie,
    ConfirmArtifactRespec,
    ConfirmRespecWipe,
    ConnectToFailed,
    ConsumableTokenBuy,
    ConsumableTokenBuyAtMarketPrice,
    ConsumableTokenCanVeteranBuy,
    ConsumableTokenRedeem,
    ConsumableTokenRedeemConfirmation,
    ContributionContribute,
    ContributionLastUpdateRequest,
    ConversationCinematicReady,
    ConversationLineStarted,
    ConvertRaid,
    CovenantRenownRequestCatchupState,
    CreateCharacter,
    CreateShipment,
    DbQueryBulk,
    DeclineGuildInvites,
    DeclinePetition,
    DeleteEquipmentSet,
    DelFriend,
    DelIgnore,
    DepositReagentBank,
    DestroyItem,
    DfBootPlayerVote,
    DfConfirmExpandSearch,
    DfGetJoinStatus,
    DfGetSystemInfo,
    DfJoin,
    DfLeave,
    DfProposalResponse,
    DfReadyCheckResponse,
    DfSetRoles,
    DfTeleport,
    DiscardedTimeSyncAcks,
    DismissCritter,
    DoCountdown,
    DoMasterLootRoll,
    DoReadyCheck,
    DuelResponse,
    EjectPassenger,
    Emote,
    EnableNagle,
    EnableTaxiNode,
    EngineSurvey,
    EnterEncryptedModeAck,
    EnumCharacters,
    EnumCharactersDeletedByClient,
    FarSight,
    GameEventDebugDisable,
    GameEventDebugEnable,
    GameObjReportUse,
    GameObjUse,
    GarrisonAddFollowerHealth,
    GarrisonAssignFollowerToBuilding,
    GarrisonCancelConstruction,
    GarrisonCheckUpgradeable,
    GarrisonCompleteMission,
    GarrisonFullyHealAllFollowers,
    GarrisonGenerateRecruits,
    GarrisonGetClassSpecCategoryInfo,
    GarrisonGetMapData,
    GarrisonGetMissionReward,
    GarrisonLearnTalent,
    GarrisonMissionBonusRoll,
    GarrisonPurchaseBuilding,
    GarrisonRecruitFollower,
    GarrisonRemoveFollower,
    GarrisonRemoveFollowerFromBuilding,
    GarrisonRenameFollower,
    GarrisonRequestBlueprintAndSpecializationData,
    GarrisonRequestShipmentInfo,
    GarrisonResearchTalent,
    GarrisonSetBuildingActive,
    GarrisonSetFollowerFavorite,
    GarrisonSetFollowerInactive,
    GarrisonSetRecruitmentPreferences,
    GarrisonSocketTalent,
    GarrisonStartMission,
    GarrisonSwapBuildings,
    GenerateRandomCharacterName,
    GetAccountCharacterList,
    GetAccountNotifications,
    GetGarrisonInfo,
    GetItemPurchaseData,
    GetLandingPageShipments,
    GetMirrorImageData,
    GetPvpOptionsEnabled,
    GetRafAccountInfo,
    GetRemainingGameTime,
    GetTrophyList,
    GetUndeleteCharacterCooldownStatus,
    GetVasAccountCharacterList,
    GetVasTransferTargetRealmList,
    GmTicketAcknowledgeSurvey,
    GmTicketGetCaseStatus,
    GmTicketGetSystemStatus,
    GossipRefreshOptions,
    GossipSelectOption,
    GuildAddBattlenetFriend,
    GuildAddRank,
    GuildAssignMemberRank,
    GuildAutoDeclineInvitation,
    GuildBankActivate,
    GuildBankBuyTab,
    GuildBankDepositMoney,
    GuildBankLogQuery,
    GuildBankQueryTab,
    GuildBankRemainingWithdrawMoneyQuery,
    GuildBankSetTabText,
    GuildBankTextQuery,
    GuildBankUpdateTab,
    GuildBankWithdrawMoney,
    GuildChallengeUpdateRequest,
    GuildChangeNameRequest,
    GuildDeclineInvitation,
    GuildDelete,
    GuildDeleteRank,
    GuildDemoteMember,
    GuildEventLogQuery,
    GuildGetAchievementMembers,
    GuildGetRanks,
    GuildGetRoster,
    GuildInviteByName,
    GuildLeave,
    GuildNewsUpdateSticky,
    GuildOfficerRemoveMember,
    GuildPermissionsQuery,
    GuildPromoteMember,
    GuildQueryMembersForRecipe,
    GuildQueryMemberRecipes,
    GuildQueryNews,
    GuildQueryRecipes,
    GuildReplaceGuildMaster,
    GuildSetAchievementTracking,
    GuildSetFocusedAchievement,
    GuildSetGuildMaster,
    GuildSetMemberNote,
    GuildSetRankPermissions,
    GuildShiftRank,
    GuildUpdateInfoText,
    GuildUpdateMotdText,
    HearthAndResurrect,
    HideQuestChoice,
    HotfixRequest,
    IgnoreTrade,
    InitiateRolePoll,
    InitiateTrade,
    Inspect,
    InstanceLockResponse,
    IslandQueue,
    ItemPurchaseRefund,
    ItemTextQuery,
    JoinPetBattleQueue,
    JoinRatedBattleground,
    KeepAlive,
    KeyboundOverride,
    LatencyReport,
    LearnPvpTalents,
    LearnTalents,
    LeaveGroup,
    LeavePetBattleQueue,
    LfgListApplyToGroup,
    LfgListCancelApplication,
    LfgListDeclineApplicant,
    LfgListGetStatus,
    LfgListInviteApplicant,
    LfgListInviteResponse,
    LfgListJoin,
    LfgListLeave,
    LfgListSearch,
    LfgListUpdateRequest,
    ListInventory,
    LiveRegionAccountRestore,
    LiveRegionCharacterCopy,
    LiveRegionGetAccountCharacterList,
    LiveRegionKeyBindingsCopy,
    LoadingScreenNotify,
    LoadSelectedTrophy,
    LogoutCancel,
    LogoutInstant,
    LogoutRequest,
    LogDisconnect,
    LogStreamingError,
    LootItem,
    LootMoney,
    LootRelease,
    LootRoll,
    LootUnit,
    LowLevelRaid1,
    LowLevelRaid2,
    MailCreateTextItem,
    MailDelete,
    MailGetList,
    MailMarkAsRead,
    MailReturnToSender,
    MailTakeItem,
    MailTakeMoney,
    MakeContitionalAppearancePermanent,
    MasterLootItem,
    MergeGuildBankItemWithGuildBankItem,
    MergeGuildBankItemWithItem,
    MergeItemWithGuildBankItem,
    MinimapPing,
    MissileTrajectoryCollision,
    MountClearFanfare,
    MountSetFavorite,
    MountSpecialAnim,
    MoveApplyInertiaAck,
    MoveApplyMovementForceAck,
    MoveChangeTransport,
    MoveChangeVehicleSeats,
    MoveCollisionDisableAck,
    MoveCollisionEnableAck,
    MoveDismissVehicle,
    MoveDoubleJump,
    MoveEnableDoubleJumpAck,
    MoveEnableSwimToFlyTransAck,
    MoveFallLand,
    MoveFallReset,
    MoveFeatherFallAck,
    MoveForceFlightBackSpeedChangeAck,
    MoveForceFlightSpeedChangeAck,
    MoveForcePitchRateChangeAck,
    MoveForceRootAck,
    MoveForceRunBackSpeedChangeAck,
    MoveForceRunSpeedChangeAck,
    MoveForceSwimBackSpeedChangeAck,
    MoveForceSwimSpeedChangeAck,
    MoveForceTurnRateChangeAck,
    MoveForceUnrootAck,
    MoveForceWalkSpeedChangeAck,
    MoveGravityDisableAck,
    MoveGravityEnableAck,
    MoveGuildBankItem,
    MoveHeartbeat,
    MoveHoverAck,
    MoveInertiaDisableAck,
    MoveInertiaEnableAck,
    MoveInitActiveMoverComplete,
    MoveJump,
    MoveKnockBackAck,
    MoveRemoveInertiaAck,
    MoveRemoveMovementForces,
    MoveRemoveMovementForceAck,
    MoveSeamlessTransferComplete,
    MoveSetCanFlyAck,
    MoveSetCanTurnWhileFallingAck,
    MoveSetCollisionHeightAck,
    MoveSetFacing,
    MoveSetFacingHeartbeat,
    MoveSetFly,
    MoveSetIgnoreMovementForcesAck,
    MoveSetModMovementForceMagnitudeAck,
    MoveSetPitch,
    MoveSetRunMode,
    MoveSetTurnRateCheat,
    MoveSetVehicleRecIdAck,
    MoveSetWalkMode,
    MoveSplineDone,
    MoveStartAscend,
    MoveStartBackward,
    MoveStartDescend,
    MoveStartForward,
    MoveStartPitchDown,
    MoveStartPitchUp,
    MoveStartStrafeLeft,
    MoveStartStrafeRight,
    MoveStartSwim,
    MoveStartTurnLeft,
    MoveStartTurnRight,
    MoveStop,
    MoveStopAscend,
    MoveStopPitch,
    MoveStopStrafe,
    MoveStopSwim,
    MoveStopTurn,
    MoveTeleportAck,
    MoveTimeSkipped,
    MoveUpdateFallSpeed,
    MoveWaterWalkAck,
    MythicPlusRequestMapStats,
    NeutralPlayerSelectFaction,
    NextCinematicCamera,
    ObjectUpdateFailed,
    ObjectUpdateRescued,
    OfferPetition,
    OpeningCinematic,
    OpenItem,
    OpenMissionNpc,
    OpenShipmentNpc,
    OpenTradeskillNpc,
    OptOutOfLoot,
    OverrideScreenFlash,
    PartyInvite,
    PartyInviteResponse,
    PartyUninvite,
    PerformItemInteraction,
    PetitionBuy,
    PetitionRenameGuild,
    PetitionShowList,
    PetitionShowSignatures,
    PetAbandon,
    PetAction,
    PetBattleFinalNotify,
    PetBattleInput,
    PetBattleQueueProposeMatchResult,
    PetBattleQuitNotify,
    PetBattleReplaceFrontPet,
    PetBattleRequestPvp,
    PetBattleRequestUpdate,
    PetBattleRequestWild,
    PetBattleScriptErrorNotify,
    PetBattleWildLocationFail,
    PetCancelAura,
    PetCastSpell,
    PetRename,
    PetSetAction,
    PetSpellAutocast,
    PetStopAttack,
    Ping,
    PlayerLogin,
    PushQuestToParty,
    PvpLogData,
    QueryBattlePetName,
    QueryCorpseLocationFromClient,
    QueryCorpseTransport,
    QueryCountdownTimer,
    QueryCreature,
    QueryGameObject,
    QueryGarrisonPetName,
    QueryGuildInfo,
    QueryInspectAchievements,
    QueryNextMailTime,
    QueryNpcText,
    QueryPageText,
    QueryPetition,
    QueryPetName,
    QueryPlayerNames,
    QueryPlayerNamesForCommunity,
    QueryPlayerNameByCommunityId,
    QueryQuestCompletionNpcs,
    QueryQuestInfo,
    QueryRealmName,
    QueryScenarioPoi,
    QueryTime,
    QueryTreasurePicker,
    QueryVoidStorage,
    QuestConfirmAccept,
    QuestGiverAcceptQuest,
    QuestGiverChooseReward,
    QuestGiverCloseQuest,
    QuestGiverCompleteQuest,
    QuestGiverHello,
    QuestGiverQueryQuest,
    QuestGiverRequestReward,
    QuestGiverStatusMultipleQuery,
    QuestGiverStatusQuery,
    QuestLogRemoveQuest,
    QuestPoiQuery,
    QuestPushResult,
    QuestSessionBeginResponse,
    QuestSessionRequestStart,
    QuestSessionRequestStop,
    QueuedMessagesEnd,
    QuickJoinAutoAcceptRequests,
    QuickJoinRequestInvite,
    QuickJoinRequestInviteWithConfirmation,
    QuickJoinRespondToInvite,
    QuickJoinSignalToastDisplayed,
    RafClaimActivityReward,
    RafClaimNextReward,
    RafGenerateRecruitmentLink,
    RafUpdateRecruitmentInfo,
    RandomRoll,
    ReadyCheckResponse,
    ReadItem,
    ReclaimCorpse,
    RemoveNewItem,
    RemoveRafRecruit,
    ReorderCharacters,
    RepairItem,
    ReplaceTrophy,
    RepopRequest,
    ReportClientVariables,
    ReportEnabledAddons,
    ReportKeybindingExecutionCounts,
    ReportPvpPlayerAfk,
    ReportServerLag,
    ReportStuckInCombat,
    RequestAccountData,
    RequestAreaPoiUpdate,
    RequestBattlefieldStatus,
    RequestCategoryCooldowns,
    RequestCemeteryList,
    RequestCharacterGuildFollowInfo,
    RequestConquestFormulaConstants,
    RequestCovenantCallings,
    RequestCrowdControlSpell,
    RequestForcedReactions,
    RequestGarrisonTalentWorldQuestUnlocks,
    RequestGuildPartyState,
    RequestGuildRewardsList,
    RequestLatestSplashScreen,
    RequestLfgListBlacklist,
    RequestMythicPlusAffixes,
    RequestMythicPlusSeasonData,
    RequestPartyJoinUpdates,
    RequestPartyMemberStats,
    RequestPetInfo,
    RequestPlayedTime,
    RequestPvpRewards,
    RequestRaidInfo,
    RequestRatedPvpInfo,
    RequestRealmGuildMasterInfo,
    RequestResearchHistory,
    RequestScheduledPvpInfo,
    RequestStabledPets,
    RequestVehicleExit,
    RequestVehicleNextSeat,
    RequestVehiclePrevSeat,
    RequestVehicleSwitchSeat,
    RequestWeeklyRewards,
    RequestWorldQuestUpdate,
    ResetChallengeMode,
    ResetChallengeModeCheat,
    ResetInstances,
    ResurrectResponse,
    RevertMonumentAppearance,
    RideVehicleInteract,
    SaveCufProfiles,
    SaveEquipmentSet,
    SaveGuildEmblem,
    ScenePlaybackCanceled,
    ScenePlaybackComplete,
    SceneTriggerEvent,
    SelfRes,
    SellItem,
    SendCharacterClubInvitation,
    SendContactList,
    SendMail,
    SendTextEmote,
    ServerTimeOffsetRequest,
    SetAchievementsHidden,
    SetActionBarToggles,
    SetActionButton,
    SetActiveMover,
    SetAdvancedCombatLogging,
    SetAssistantLeader,
    SetBackpackAutosortDisabled,
    SetBankAutosortDisabled,
    SetChatDisabled,
    SetContactNotes,
    SetCurrencyFlags,
    SetDifficultyId,
    SetDungeonDifficulty,
    SetEveryoneIsAssistant,
    SetFactionAtWar,
    SetFactionInactive,
    SetFactionNotAtWar,
    SetGameEventDebugViewState,
    SetInsertItemsLeftToRight,
    SetLootMethod,
    SetLootSpecialization,
    SetPartyAssignment,
    SetPartyLeader,
    SetPetSlot,
    SetPlayerDeclinedNames,
    SetPreferredCemetery,
    SetPvp,
    SetRaidDifficulty,
    SetRole,
    SetSavedInstanceExtend,
    SetSelection,
    SetSheathed,
    SetSortBagsRightToLeft,
    SetTaxiBenchmarkMode,
    SetTitle,
    SetTradeCurrency,
    SetTradeGold,
    SetTradeItem,
    SetUsingPartyGarrison,
    SetWarMode,
    SetWatchedFaction,
    ShowTradeSkill,
    SignPetition,
    SilencePartyTalker,
    SocketGems,
    SortBags,
    SortBankBags,
    SortReagentBankBags,
    SpellClick,
    SpiritHealerActivate,
    SplitGuildBankItem,
    SplitGuildBankItemToInventory,
    SplitItem,
    SplitItemToGuildBank,
    StandStateChange,
    StartChallengeMode,
    StartSpectatorWarGame,
    StartWarGame,
    StoreGuildBankItem,
    SubmitUserFeedback,
    SubscriptionInterstitialResponse,
    SummonResponse,
    SupportTicketSubmitComplaint,
    SurrenderArena,
    SuspendCommsAck,
    SuspendTokenResponse,
    SwapGuildBankItemWithGuildBankItem,
    SwapInvItem,
    SwapItem,
    SwapItemWithGuildBankItem,
    SwapSubGroups,
    SwapVoidItem,
    TabardVendorActivate,
    TalkToGossip,
    TaxiNodeStatusQuery,
    TaxiQueryAvailableNodes,
    TaxiRequestEarlyLanding,
    TimeAdjustmentResponse,
    TimeSyncResponse,
    TimeSyncResponseDropped,
    TimeSyncResponseFailed,
    ToggleDifficulty,
    TogglePvp,
    TotemDestroyed,
    ToyClearFanfare,
    TradeSkillSetFavorite,
    TrainerBuySpell,
    TrainerList,
    TransmogrifyItems,
    TurnInPetition,
    Tutorial,
    TwitterCheckStatus,
    TwitterConnect,
    TwitterDisconnect,
    UiMapQuestLinesRequest,
    UnacceptTrade,
    UndeleteCharacter,
    UnlearnSkill,
    UnlearnSpecialization,
    UnlockVoidStorage,
    UpdateAccountData,
    UpdateAreaTriggerVisual,
    UpdateClientSettings,
    UpdateMissileTrajectory,
    UpdateRaidTarget,
    UpdateSpellVisual,
    UpdateVasPurchaseStates,
    UpgradeGarrison,
    UpgradeRuneforgeLegendary,
    UsedFollow,
    UseCritterItem,
    UseEquipmentSet,
    UseItem,
    UseToy,
    VasCheckTransferOk,
    VasGetQueueMinutes,
    VasGetServiceStatus,
    ViolenceLevel,
    VoiceChannelSttTokenRequest,
    VoiceChatJoinChannel,
    VoiceChatLogin,
    VoidStorageTransfer,
    Warden3Data,
    Who,
    WhoIs,
    WorldPortResponse,
    WrapItem,
}

#[derive(Debug)]
pub enum PacketServer {
    AbortNewWorld,
    AccountCosmeticAdded,
    AccountCriteriaUpdate,
    AccountDataTimes,
    AccountMountUpdate,
    AccountNotificationsResponse,
    AccountToyUpdate,
    AccountTransmogSetFavoritesUpdate,
    AccountTransmogUpdate,
    AchievementDeleted,
    AchievementEarned,
    ActivateEssenceFailed,
    ActivateSoulbindFailed,
    ActivateTaxiReply,
    ActiveGlyphs,
    AddonListRequest,
    AddBattlenetFriendResponse,
    AddItemPassive,
    AddLossOfControl,
    AddRunePower,
    AdjustSplineDuration,
    AdvancedCombatLog,
    AdventureJournalDataResponse,
    AdventureMapOpenNpc,
    AeLootTargets,
    AeLootTargetAck,
    AiReaction,
    AlliedRaceDetails,
    AllAccountCriteria,
    AllAchievementData,
    AllGuildAchievements,
    ApplyMountEquipmentResult,
    ArchaeologySurveryCast,
    AreaPoiUpdateResponse,
    AreaSpiritHealerTime,
    AreaTriggerDenied,
    AreaTriggerForceSetPositionAndFacing,
    AreaTriggerNoCorpse,
    AreaTriggerPlaySpellVisual,
    AreaTriggerRePath,
    AreaTriggerReShape,
    AreaTriggerUnattach,
    ArenaClearOpponents,
    ArenaCrowdControlSpellResult,
    ArenaPrepOpponentSpecializations,
    ArtifactEndgamePowersRefunded,
    ArtifactForgeError,
    ArtifactRespecPrompt,
    ArtifactXpGain,
    AttackerStateUpdate,
    AttackStart,
    AttackStop,
    AttackSwingError,
    AttackSwingLandedLog,
    AuctionableTokenAuctionSold,
    AuctionableTokenSellAtMarketPriceResponse,
    AuctionableTokenSellConfirmRequired,
    AuctionClosedNotification,
    AuctionCommandResult,
    AuctionFavoriteList,
    AuctionGetCommodityQuoteResult,
    AuctionHelloResponse,
    AuctionListBiddedItemsResult,
    AuctionListBucketsResult,
    AuctionListItemsResult,
    AuctionListOwnedItemsResult,
    AuctionOutbidNotification,
    AuctionOwnerBidNotification,
    AuctionReplicateResponse,
    AuctionWonNotification,
    AuraPointsDepleted,
    AuraUpdate,
    AuthChallenge,
    AuthFailed,
    AuthResponse,
    AvailableHotfixes,
    AzeriteRespecNpc,
    BagCleanupFinished,
    BarberShopResult,
    BatchPresenceSubscription,
    BattlefieldList,
    BattlefieldPortDenied,
    BattlefieldStatusActive,
    BattlefieldStatusFailed,
    BattlefieldStatusGroupProposalFailed,
    BattlefieldStatusNeedConfirmation,
    BattlefieldStatusNone,
    BattlefieldStatusQueued,
    BattlefieldStatusWaitForGroups,
    BattlegroundInfoThrottled,
    BattlegroundInit,
    BattlegroundPlayerJoined,
    BattlegroundPlayerLeft,
    BattlegroundPlayerPositions,
    BattlegroundPoints,
    BattlenetChallengeAbort,
    BattlenetChallengeStart,
    BattlenetNotification,
    BattlenetResponse,
    BattleNetConnectionStatus,
    BattlePayAckFailed,
    BattlePayBattlePetDelivered,
    BattlePayCollectionItemDelivered,
    BattlePayConfirmPurchase,
    BattlePayDeliveryEnded,
    BattlePayDeliveryStarted,
    BattlePayDistributionAssignVasResponse,
    BattlePayDistributionUnrevoked,
    BattlePayDistributionUpdate,
    BattlePayGetDistributionListResponse,
    BattlePayGetProductListResponse,
    BattlePayGetPurchaseListResponse,
    BattlePayMountDelivered,
    BattlePayPurchaseUpdate,
    BattlePayStartCheckout,
    BattlePayStartDistributionAssignToTargetResponse,
    BattlePayStartPurchaseResponse,
    BattlePayValidatePurchaseResponse,
    BattlePetsHealed,
    BattlePetCageDateError,
    BattlePetDeleted,
    BattlePetError,
    BattlePetJournal,
    BattlePetJournalLockAcquired,
    BattlePetJournalLockDenied,
    BattlePetLicenseChanged,
    BattlePetRestored,
    BattlePetRevoked,
    BattlePetTrapLevel,
    BattlePetUpdates,
    BinderConfirm,
    BindPointUpdate,
    BlackMarketBidOnItemResult,
    BlackMarketOpenResult,
    BlackMarketOutbid,
    BlackMarketRequestItemsResult,
    BlackMarketWon,
    BonusRollEmpty,
    BossKill,
    BreakTarget,
    BroadcastAchievement,
    BroadcastSummonCast,
    BroadcastSummonResponse,
    BuyFailed,
    BuySucceeded,
    CacheInfo,
    CacheVersion,
    CalendarClearPendingAction,
    CalendarCommandResult,
    CalendarCommunityInvite,
    CalendarEventRemovedAlert,
    CalendarEventUpdatedAlert,
    CalendarInviteAdded,
    CalendarInviteAlert,
    CalendarInviteNotes,
    CalendarInviteNotesAlert,
    CalendarInviteRemoved,
    CalendarInviteRemovedAlert,
    CalendarInviteStatus,
    CalendarInviteStatusAlert,
    CalendarModeratorStatus,
    CalendarRaidLockoutAdded,
    CalendarRaidLockoutRemoved,
    CalendarRaidLockoutUpdated,
    CalendarSendCalendar,
    CalendarSendEvent,
    CalendarSendNumPending,
    CameraEffect,
    CancelAutoRepeat,
    CancelCombat,
    CancelOrphanSpellVisual,
    CancelScene,
    CancelSpellVisual,
    CancelSpellVisualKit,
    CanDuelResult,
    CanRedeemTokenForBalanceResponse,
    CapturePointRemoved,
    CastFailed,
    CategoryCooldown,
    ChainMissileBounce,
    ChallengeModeComplete,
    ChallengeModeRequestLeadersResult,
    ChallengeModeReset,
    ChallengeModeStart,
    ChallengeModeUpdateDeathCount,
    ChangePlayerDifficultyResult,
    ChangeRealmTicketResponse,
    ChannelList,
    ChannelNotify,
    ChannelNotifyJoined,
    ChannelNotifyLeft,
    CharacterCheckUpgradeResult,
    CharacterLoginFailed,
    CharacterObjectTestResponse,
    CharacterRenameResult,
    CharacterUpgradeAborted,
    CharacterUpgradeComplete,
    CharacterUpgradeManualUnrevokeResult,
    CharacterUpgradeStarted,
    CharCustomizeFailure,
    CharCustomizeSuccess,
    CharFactionChangeResult,
    Chat,
    ChatAutoResponded,
    ChatDown,
    ChatIgnoredAccountMuted,
    ChatIsDown,
    ChatNotInParty,
    ChatPlayerAmbiguous,
    ChatPlayerNotfound,
    ChatReconnect,
    ChatRegionalServiceStatus,
    ChatRestricted,
    ChatServerMessage,
    CheatIgnoreDimishingReturns,
    CheckAbandonNpe,
    CheckCharacterNameAvailabilityResult,
    CheckWargameEntry,
    ChromieTimeOpenNpc,
    ChromieTimeSelectExpansionSuccess,
    ClaimRafRewardResponse,
    ClearAllSpellCharges,
    ClearBossEmotes,
    ClearCooldown,
    ClearCooldowns,
    ClearResurrect,
    ClearSpellCharges,
    ClearTarget,
    ClearTreasurePickerCache,
    CloseArtifactForge,
    CloseHeartForge,
    CloseItemForge,
    ClubFinderErrorMessage,
    ClubFinderGetClubPostingIdsResponse,
    ClubFinderLookupClubPostingsList,
    ClubFinderResponseCharacterApplicationList,
    ClubFinderResponsePostRecruitmentMessage,
    ClubFinderUpdateApplications,
    CoinRemoved,
    CombatEventFailed,
    CommentatorMapInfo,
    CommentatorPlayerInfo,
    CommentatorStateChanged,
    CommerceTokenGetCountResponse,
    CommerceTokenGetLogResponse,
    CommerceTokenGetMarketPriceResponse,
    CommerceTokenUpdate,
    ComplaintResult,
    CompleteShipmentResponse,
    ConfirmPartyInvite,
    ConnectTo,
    ConquestFormulaConstants,
    ConsoleWrite,
    ConsumableTokenBuyAtMarketPriceResponse,
    ConsumableTokenBuyChoiceRequired,
    ConsumableTokenCanVeteranBuyResponse,
    ConsumableTokenRedeemConfirmRequired,
    ConsumableTokenRedeemResponse,
    ContactList,
    ContributionLastUpdateResponse,
    ControlUpdate,
    ConvertItemsToCurrencyValue,
    CooldownCheat,
    CooldownEvent,
    CorpseLocation,
    CorpseReclaimDelay,
    CorpseTransportQuery,
    CovenantCallingsAvailabilityResponse,
    CovenantPreviewOpenNpc,
    CovenantRenownOpenNpc,
    CovenantRenownSendCatchupState,
    CreateChar,
    CreateShipmentResponse,
    CriteriaDeleted,
    CriteriaUpdate,
    CrossedInebriationThreshold,
    CustomLoadScreen,
    DailyQuestsReset,
    DamageCalcLog,
    DbReply,
    DeathReleaseLoc,
    DebugMenuManagerFullUpdate,
    DefenseMessage,
    DeleteChar,
    DeleteExpiredMissionsResult,
    DestroyArenaUnit,
    DestructibleBuildingDamage,
    DifferentInstanceFromParty,
    DisenchantCredit,
    DismountResult,
    DispelFailed,
    DisplayGameError,
    DisplayPlayerChoice,
    DisplayPromotion,
    DisplayQuestPopup,
    DisplaySoulbindUpdateMessage,
    DisplayToast,
    DisplayWorldText,
    DontAutoPushSpellsToActionBar,
    DropNewConnection,
    DuelArranged,
    DuelComplete,
    DuelCountdown,
    DuelInBounds,
    DuelOutOfBounds,
    DuelRequested,
    DuelWinner,
    DurabilityDamageDeath,
    Emote,
    EnableBarberShop,
    EnchantmentLog,
    EncounterEnd,
    EncounterStart,
    EndLightningStorm,
    EnterEncryptedMode,
    EnumCharactersResult,
    EnumVasPurchaseStatesResponse,
    EnvironmentalDamageLog,
    EquipmentSetId,
    ExpectedSpamRecords,
    ExplorationExperience,
    ExternalTransactionIdGenerated,
    FactionBonusInfo,
    FailedPlayerCondition,
    FailedQuestTurnIn,
    FeatureSystemStatus,
    FeatureSystemStatusGlueScreen,
    FeignDeathResisted,
    FishEscaped,
    FishNotHooked,
    FlightSplineSync,
    ForcedDeathUpdate,
    ForceAnim,
    ForceAnimations,
    ForceObjectRelink,
    FriendStatus,
    GainMawPower,
    GameObjectActivateAnimKit,
    GameObjectBase,
    GameObjectCustomAnim,
    GameObjectDespawn,
    GameObjectPlaySpellVisual,
    GameObjectPlaySpellVisualKit,
    GameObjectResetState,
    GameObjectSetStateLocal,
    GameObjectUiLink,
    GameSpeedSet,
    GameTimeSet,
    GameTimeUpdate,
    GarrisonActivateMissionBonusAbility,
    GarrisonAddEvent,
    GarrisonAddFollowerResult,
    GarrisonAddMissionResult,
    GarrisonAddSpecGroups,
    GarrisonApplyTalentSocketDataChanges,
    GarrisonAssignFollowerToBuildingResult,
    GarrisonAutoTroopMinLevelUpdateResult,
    GarrisonBuildingActivated,
    GarrisonBuildingRemoved,
    GarrisonBuildingSetActiveSpecializationResult,
    GarrisonChangeMissionStartTimeResult,
    GarrisonClearCollection,
    GarrisonClearEventList,
    GarrisonClearSpecGroups,
    GarrisonCollectionRemoveEntry,
    GarrisonCollectionUpdateEntry,
    GarrisonCompleteBuildingConstructionResult,
    GarrisonCompleteMissionResult,
    GarrisonCreateResult,
    GarrisonDeleteMissionResult,
    GarrisonDeleteResult,
    GarrisonFollowerActivationsSet,
    GarrisonFollowerChangedFlags,
    GarrisonFollowerChangedItemLevel,
    GarrisonFollowerChangedQuality,
    GarrisonFollowerChangedXp,
    GarrisonFollowerFatigueCleared,
    GarrisonGenerateFollowersResult,
    GarrisonGetClassSpecCategoryInfoResult,
    GarrisonGetRecallPortalLastUsedTimeResult,
    GarrisonIsUpgradeableResponse,
    GarrisonLearnBlueprintResult,
    GarrisonLearnSpecializationResult,
    GarrisonListCompletedMissionsCheatResult,
    GarrisonListFollowersCheatResult,
    GarrisonMapDataResponse,
    GarrisonMissionBonusRollResult,
    GarrisonMissionRequestRewardInfoResponse,
    GarrisonMissionStartConditionUpdate,
    GarrisonOpenArchitect,
    GarrisonOpenCrafter,
    GarrisonOpenMissionNpc,
    GarrisonOpenRecruitmentNpc,
    GarrisonOpenTalentNpc,
    GarrisonPlaceBuildingResult,
    GarrisonPlotPlaced,
    GarrisonPlotRemoved,
    GarrisonRecruitFollowerResult,
    GarrisonRemoteInfo,
    GarrisonRemoveEvent,
    GarrisonRemoveFollowerAbilityResult,
    GarrisonRemoveFollowerFromBuildingResult,
    GarrisonRemoveFollowerResult,
    GarrisonRenameFollowerResult,
    GarrisonRequestBlueprintAndSpecializationDataResult,
    GarrisonResearchTalentResult,
    GarrisonResetTalentTree,
    GarrisonResetTalentTreeSocketData,
    GarrisonStartMissionResult,
    GarrisonSwapBuildingsResponse,
    GarrisonSwitchTalentTreeBranch,
    GarrisonTalentCompleted,
    GarrisonTalentRemoved,
    GarrisonTalentRemoveSocketData,
    GarrisonTalentUpdateSocketData,
    GarrisonTalentWorldQuestUnlocksResponse,
    GarrisonUnlearnBlueprintResult,
    GarrisonUpdateFollower,
    GarrisonUpdateGarrisonMonumentSelections,
    GarrisonUpdateMissionCheatResult,
    GarrisonUpgradeResult,
    GarrisonUseRecallPortalResult,
    GenerateRandomCharacterNameResult,
    GenerateSsoTokenResponse,
    GetAccountCharacterListResult,
    GetGarrisonInfoResult,
    GetLandingPageShipmentsResponse,
    GetRemainingGameTimeResponse,
    GetSelectedTrophyIdResponse,
    GetShipmentsOfTypeResponse,
    GetShipmentInfoResponse,
    GetTrophyListResponse,
    GetVasAccountCharacterListResult,
    GetVasTransferTargetRealmListResult,
    GmPlayerInfo,
    GmRequestPlayerInfo,
    GmTicketCaseStatus,
    GmTicketSystemStatus,
    GodMode,
    GossipComplete,
    GossipMessage,
    GossipPoi,
    GossipQuestUpdate,
    GossipRefreshOptions,
    GroupActionThrottled,
    GroupAutoKick,
    GroupDecline,
    GroupDestroyed,
    GroupNewLeader,
    GroupUninvite,
    GuildAchievementDeleted,
    GuildAchievementEarned,
    GuildAchievementMembers,
    GuildBankLogQueryResults,
    GuildBankQueryResults,
    GuildBankRemainingWithdrawMoney,
    GuildBankTextQueryResult,
    GuildChallengeCompleted,
    GuildChallengeUpdate,
    GuildChangeNameResult,
    GuildCommandResult,
    GuildCriteriaDeleted,
    GuildCriteriaUpdate,
    GuildEventBankContentsChanged,
    GuildEventBankMoneyChanged,
    GuildEventDisbanded,
    GuildEventLogQueryResults,
    GuildEventMotd,
    GuildEventNewLeader,
    GuildEventPlayerJoined,
    GuildEventPlayerLeft,
    GuildEventPresenceChange,
    GuildEventRanksUpdated,
    GuildEventRankChanged,
    GuildEventStatusChange,
    GuildEventTabAdded,
    GuildEventTabDeleted,
    GuildEventTabModified,
    GuildEventTabTextChanged,
    GuildFlaggedForRename,
    GuildInvite,
    GuildInviteDeclined,
    GuildInviteExpired,
    GuildItemLootedNotify,
    GuildKnownRecipes,
    GuildMembersWithRecipe,
    GuildMemberDailyReset,
    GuildMemberRecipes,
    GuildMemberUpdateNote,
    GuildMoved,
    GuildMoveStarting,
    GuildNameChanged,
    GuildNews,
    GuildNewsDeleted,
    GuildPartyState,
    GuildPermissionsQueryResults,
    GuildRanks,
    GuildReputationReactionChanged,
    GuildReset,
    GuildRewardList,
    GuildRoster,
    GuildRosterUpdate,
    GuildSendRankChange,
    HealthUpdate,
    HighestThreatUpdate,
    HotfixConnect,
    HotfixMessage,
    InitializeFactions,
    InitialSetup,
    InitWorldStates,
    InspectResult,
    InstanceEncounterChangePriority,
    InstanceEncounterDisengageUnit,
    InstanceEncounterEnd,
    InstanceEncounterEngageUnit,
    InstanceEncounterGainCombatResurrectionCharge,
    InstanceEncounterInCombatResurrection,
    InstanceEncounterObjectiveComplete,
    InstanceEncounterObjectiveStart,
    InstanceEncounterObjectiveUpdate,
    InstanceEncounterPhaseShiftChanged,
    InstanceEncounterStart,
    InstanceEncounterTimerStart,
    InstanceEncounterUpdateAllowReleaseInProgress,
    InstanceEncounterUpdateSuppressRelease,
    InstanceGroupSizeChanged,
    InstanceInfo,
    InstanceReset,
    InstanceResetFailed,
    InstanceSaveCreated,
    InterruptPowerRegen,
    InvalidatePageText,
    InvalidatePlayer,
    InvalidPromotionCode,
    InventoryChangeFailure,
    InventoryFixupComplete,
    InventoryFullOverflow,
    IslandsMissionNpc,
    IslandAzeriteGain,
    IslandComplete,
    IsQuestCompleteResponse,
    ItemChanged,
    ItemCooldown,
    ItemEnchantTimeUpdate,
    ItemExpirePurchaseRefund,
    ItemInteractionComplete,
    ItemPurchaseRefundResult,
    ItemPushResult,
    ItemTimeUpdate,
    KickReason,
    LatencyReportPing,
    LearnedSpells,
    LearnPvpTalentFailed,
    LearnTalentFailed,
    LegacyLootRules,
    LevelLinkingResult,
    LevelUpInfo,
    LfgBootPlayer,
    LfgDisabled,
    LfgExpandSearchPrompt,
    LfgInstanceShutdownCountdown,
    LfgJoinResult,
    LfgListApplicantListUpdate,
    LfgListApplicationStatusUpdate,
    LfgListApplyToGroupResult,
    LfgListJoinResult,
    LfgListSearchResults,
    LfgListSearchResultsUpdate,
    LfgListSearchStatus,
    LfgListUpdateBlacklist,
    LfgListUpdateExpiration,
    LfgListUpdateStatus,
    LfgOfferContinue,
    LfgPartyInfo,
    LfgPlayerInfo,
    LfgPlayerReward,
    LfgProposalUpdate,
    LfgQueueStatus,
    LfgReadyCheckResult,
    LfgReadyCheckUpdate,
    LfgRoleCheckUpdate,
    LfgSlotInvalid,
    LfgTeleportDenied,
    LfgUpdateStatus,
    LiveRegionAccountRestoreResult,
    LiveRegionCharacterCopyResult,
    LiveRegionGetAccountCharacterListResult,
    LiveRegionKeyBindingsCopyResult,
    LoadCufProfiles,
    LoadEquipmentSet,
    LoginSetTimeSpeed,
    LoginVerifyWorld,
    LogoutCancelAck,
    LogoutComplete,
    LogoutResponse,
    LogXpGain,
    LootAllPassed,
    LootList,
    LootMoneyNotify,
    LootRelease,
    LootReleaseAll,
    LootRemoved,
    LootResponse,
    LootRoll,
    LootRollsComplete,
    LootRollWon,
    LossOfControlAuraUpdate,
    MailCommandResult,
    MailListResult,
    MailQueryNextTimeResult,
    MapObjectivesInit,
    MapObjEvents,
    MasterLootCandidateList,
    MessageBox,
    MinimapPing,
    MirrorImageComponentedData,
    MirrorImageCreatureData,
    MissileCancel,
    ModifyCooldown,
    Motd,
    MountResult,
    MovementEnforcementAlert,
    MoveApplyInertia,
    MoveApplyMovementForce,
    MoveDisableCollision,
    MoveDisableDoubleJump,
    MoveDisableGravity,
    MoveDisableInertia,
    MoveDisableTransitionBetweenSwimAndFly,
    MoveEnableCollision,
    MoveEnableDoubleJump,
    MoveEnableGravity,
    MoveEnableInertia,
    MoveEnableTransitionBetweenSwimAndFly,
    MoveKnockBack,
    MoveRemoveInertia,
    MoveRemoveMovementForce,
    MoveRoot,
    MoveSetActiveMover,
    MoveSetCanFly,
    MoveSetCanTurnWhileFalling,
    MoveSetCollisionHeight,
    MoveSetCompoundState,
    MoveSetFeatherFall,
    MoveSetFlightBackSpeed,
    MoveSetFlightSpeed,
    MoveSetHovering,
    MoveSetIgnoreMovementForces,
    MoveSetLandWalk,
    MoveSetModMovementForceMagnitude,
    MoveSetNormalFall,
    MoveSetPitchRate,
    MoveSetRunBackSpeed,
    MoveSetRunSpeed,
    MoveSetSwimBackSpeed,
    MoveSetSwimSpeed,
    MoveSetTurnRate,
    MoveSetVehicleRecId,
    MoveSetWalkSpeed,
    MoveSetWaterWalk,
    MoveSkipTime,
    MoveSplineDisableCollision,
    MoveSplineDisableGravity,
    MoveSplineEnableCollision,
    MoveSplineEnableGravity,
    MoveSplineRoot,
    MoveSplineSetFeatherFall,
    MoveSplineSetFlightBackSpeed,
    MoveSplineSetFlightSpeed,
    MoveSplineSetFlying,
    MoveSplineSetHover,
    MoveSplineSetLandWalk,
    MoveSplineSetNormalFall,
    MoveSplineSetPitchRate,
    MoveSplineSetRunBackSpeed,
    MoveSplineSetRunMode,
    MoveSplineSetRunSpeed,
    MoveSplineSetSwimBackSpeed,
    MoveSplineSetSwimSpeed,
    MoveSplineSetTurnRate,
    MoveSplineSetWalkMode,
    MoveSplineSetWalkSpeed,
    MoveSplineSetWaterWalk,
    MoveSplineStartSwim,
    MoveSplineStopSwim,
    MoveSplineUnroot,
    MoveSplineUnsetFlying,
    MoveSplineUnsetHover,
    MoveTeleport,
    MoveUnroot,
    MoveUnsetCanFly,
    MoveUnsetCanTurnWhileFalling,
    MoveUnsetHovering,
    MoveUnsetIgnoreMovementForces,
    MoveUpdate,
    MoveUpdateApplyInertia,
    MoveUpdateApplyMovementForce,
    MoveUpdateCollisionHeight,
    MoveUpdateFlightBackSpeed,
    MoveUpdateFlightSpeed,
    MoveUpdateKnockBack,
    MoveUpdateModMovementForceMagnitude,
    MoveUpdatePitchRate,
    MoveUpdateRemoveInertia,
    MoveUpdateRemoveMovementForce,
    MoveUpdateRunBackSpeed,
    MoveUpdateRunSpeed,
    MoveUpdateSwimBackSpeed,
    MoveUpdateSwimSpeed,
    MoveUpdateTeleport,
    MoveUpdateTurnRate,
    MoveUpdateWalkSpeed,
    MultiFloorLeaveFloor,
    MultiFloorNewFloor,
    MythicPlusAllMapStats,
    MythicPlusCurrentAffixes,
    MythicPlusNewWeekRecord,
    MythicPlusSeasonData,
    NeutralPlayerFactionSelectResult,
    NewTaxiPath,
    NewWorld,
    NotifyDestLocSpellCast,
    NotifyMissileTrajectoryCollision,
    NotifyMoney,
    NotifyReceivedMail,
    OfferPetitionError,
    OnCancelExpectedRideVehicleAura,
    OnMonsterMove,
    OpenAnimaDiversionUi,
    OpenArtifactForge,
    OpenContainer,
    OpenHeartForge,
    OpenItemForge,
    OpenLfgDungeonFinder,
    OpenShipmentNpcFromGossip,
    OpenShipmentNpcResult,
    OverrideLight,
    PageText,
    PartyCommandResult,
    PartyInvite,
    PartyKillLog,
    PartyMemberFullState,
    PartyMemberPartialState,
    PartyNotifyLfgLeaderChange,
    PartyUpdate,
    PastTimeEvents,
    PauseMirrorTimer,
    PendingRaidLock,
    PetitionAlreadySigned,
    PetitionRenameGuildResponse,
    PetitionShowList,
    PetitionShowSignatures,
    PetitionSignResults,
    PetActionFeedback,
    PetActionSound,
    PetAdded,
    PetBattleChatRestricted,
    PetBattleDebugQueueDumpResponse,
    PetBattleFinalizeLocation,
    PetBattleFinalRound,
    PetBattleFinished,
    PetBattleFirstRound,
    PetBattleInitialUpdate,
    PetBattleMaxGameLengthWarning,
    PetBattlePvpChallenge,
    PetBattleQueueProposeMatch,
    PetBattleQueueStatus,
    PetBattleReplacementsMade,
    PetBattleRequestFailed,
    PetBattleRoundResult,
    PetBattleSlotUpdates,
    PetCastFailed,
    PetClearSpells,
    PetDismissSound,
    PetGodMode,
    PetGuids,
    PetLearnedSpells,
    PetMode,
    PetNameInvalid,
    PetNewlyTamed,
    PetSlotUpdated,
    PetSpellsMessage,
    PetStableList,
    PetStableResult,
    PetTameFailure,
    PetUnlearnedSpells,
    PhaseShiftChange,
    PlayedTime,
    PlayerAzeriteItemEquippedStatusChanged,
    PlayerAzeriteItemGains,
    PlayerBonusRollFailed,
    PlayerBound,
    PlayerChoiceClear,
    PlayerChoiceDisplayError,
    PlayerConditionResult,
    PlayerIsAdventureMapPoiValid,
    PlayerOpenSubscriptionInterstitial,
    PlayerSaveGuildEmblem,
    PlayerShowUiEventToast,
    PlayerSkinned,
    PlayerTabardVendorActivate,
    PlayerTutorialHighlightSpell,
    PlayerTutorialUnhighlightSpell,
    PlayMusic,
    PlayObjectSound,
    PlayOneShotAnimKit,
    PlayOrphanSpellVisual,
    PlayScene,
    PlaySound,
    PlaySpeakerbotSound,
    PlaySpellVisual,
    PlaySpellVisualKit,
    PlayTimeWarning,
    Pong,
    PowerUpdate,
    PreloadChildMap,
    PrepopulateNameCache,
    PreRessurect,
    PrintNotification,
    ProcResist,
    PushSpellToActionBar,
    PvpCredit,
    PvpMatchComplete,
    PvpMatchInitialize,
    PvpMatchStart,
    PvpMatchStatistics,
    PvpOptionsEnabled,
    PvpTierRecord,
    QueryBattlePetNameResponse,
    QueryCreatureResponse,
    QueryGameObjectResponse,
    QueryGarrisonPetNameResponse,
    QueryGuildFollowInfoResponse,
    QueryGuildInfoResponse,
    QueryItemTextResponse,
    QueryNpcTextResponse,
    QueryPageTextResponse,
    QueryPetitionResponse,
    QueryPetNameResponse,
    QueryPlayerNamesResponse,
    QueryPlayerNameByCommunityIdResponse,
    QueryQuestInfoResponse,
    QueryRealmGuildMasterInfoResponse,
    QueryTimeResponse,
    QuestCompletionNpcResponse,
    QuestConfirmAccept,
    QuestForceRemoved,
    QuestGiverInvalidQuest,
    QuestGiverOfferRewardMessage,
    QuestGiverQuestComplete,
    QuestGiverQuestDetails,
    QuestGiverQuestFailed,
    QuestGiverQuestListMessage,
    QuestGiverRequestItems,
    QuestGiverStatus,
    QuestGiverStatusMultiple,
    QuestLogFull,
    QuestNonLogUpdateComplete,
    QuestPoiQueryResponse,
    QuestPoiUpdateResponse,
    QuestPushResult,
    QuestSessionInfoResponse,
    QuestSessionReadyCheck,
    QuestSessionReadyCheckResponse,
    QuestSessionResult,
    QuestUpdateAddCredit,
    QuestUpdateAddCreditSimple,
    QuestUpdateAddPvpCredit,
    QuestUpdateComplete,
    QuestUpdateFailed,
    QuestUpdateFailedTimer,
    QueueSummaryUpdate,
    RafAccountInfo,
    RafActivityStateChanged,
    RaidDifficultySet,
    RaidGroupOnly,
    RaidInstanceMessage,
    RaidMarkersChanged,
    RandomRoll,
    RatedPvpInfo,
    ReadyCheckCompleted,
    ReadyCheckResponse,
    ReadyCheckStarted,
    ReadItemResultFailed,
    ReadItemResultOk,
    RealmLookupInfo,
    RealmQueryResponse,
    ReattachResurrect,
    RecruitAFriendFailure,
    RefreshComponent,
    RefreshSpellHistory,
    RemoveItemPassive,
    RemoveSpellFromActionBar,
    ReplaceTrophyResponse,
    ReportPvpPlayerAfkResult,
    RequestCemeteryListResponse,
    RequestPvpRewardsResponse,
    RequestScheduledPvpInfoResponse,
    ResearchComplete,
    ResetCompressionContext,
    ResetFailedNotify,
    ResetQuestPoi,
    ResetRangedCombatTimer,
    ResetWeeklyCurrency,
    RespecWipeConfirm,
    RespondInspectAchievements,
    RestartGlobalCooldown,
    RestrictedAccountWarning,
    ResumeCast,
    ResumeCastBar,
    ResumeComms,
    ResumeToken,
    ResurrectRequest,
    ResyncRunes,
    ReturnApplicantList,
    ReturnRecruitingClubs,
    RoleChangedInform,
    RoleChosen,
    RolePollInform,
    RuneforgeLegendaryCraftingOpenNpc,
    RuneRegenDebug,
    ScenarioCompleted,
    ScenarioPois,
    ScenarioProgressUpdate,
    ScenarioShowCriteria,
    ScenarioState,
    ScenarioUiUpdate,
    ScenarioVacate,
    SceneObjectEvent,
    SceneObjectPetBattleFinalRound,
    SceneObjectPetBattleFinished,
    SceneObjectPetBattleFirstRound,
    SceneObjectPetBattleInitialUpdate,
    SceneObjectPetBattleReplacementsMade,
    SceneObjectPetBattleRoundResult,
    ScriptCast,
    SeasonInfo,
    SellResponse,
    SendItemPassives,
    SendKnownSpells,
    SendRaidTargetUpdateAll,
    SendRaidTargetUpdateSingle,
    SendSpellCharges,
    SendSpellHistory,
    SendUnlearnSpells,
    ServerFirstAchievements,
    ServerTime,
    ServerTimeOffset,
    SetupCurrency,
    SetupResearchHistory,
    SetAiAnimKit,
    SetAllTaskProgress,
    SetAnimTier,
    SetChrUpgradeTier,
    SetCurrency,
    SetDfFastLaunchResult,
    SetDungeonDifficulty,
    SetFactionAtWar,
    SetFactionNotVisible,
    SetFactionStanding,
    SetFactionVisible,
    SetFlatSpellModifier,
    SetForcedReactions,
    SetItemPurchaseData,
    SetLootMethodFailed,
    SetMaxWeeklyQuantity,
    SetMeleeAnimKit,
    SetMovementAnimKit,
    SetPctSpellModifier,
    SetPetSpecialization,
    SetPlayerDeclinedNamesResult,
    SetPlayHoverAnim,
    SetProficiency,
    SetQuestReplayCooldownOverride,
    SetShipmentReadyResponse,
    SetSpellCharges,
    SetTaskComplete,
    SetTimeZoneInformation,
    SetVehicleRecId,
    ShadowlandsCapacitanceUpdate,
    ShipmentFactionUpdateResult,
    ShowBank,
    ShowMailbox,
    ShowNeutralPlayerFactionSelectUi,
    ShowQuestCompletionText,
    ShowTaxiNodes,
    ShowTradeSkillResponse,
    SocketGemsFailure,
    SocketGemsSuccess,
    SpecialMountAnim,
    SpecInvoluntarilyChanged,
    SpellAbsorbLog,
    SpellCategoryCooldown,
    SpellChannelStart,
    SpellChannelUpdate,
    SpellCooldown,
    SpellDamageShield,
    SpellDelayed,
    SpellDispellLog,
    SpellEnergizeLog,
    SpellExecuteLog,
    SpellFailedOther,
    SpellFailure,
    SpellFailureMessage,
    SpellGo,
    SpellHealAbsorbLog,
    SpellHealLog,
    SpellInstakillLog,
    SpellInterruptLog,
    SpellMissLog,
    SpellNonMeleeDamageLog,
    SpellOrDamageImmune,
    SpellPeriodicAuraLog,
    SpellPrepare,
    SpellStart,
    SpellVisualLoadScreen,
    SpiritHealerConfirm,
    SplashScreenShowLatest,
    StandStateUpdate,
    StartElapsedTimer,
    StartElapsedTimers,
    StartLightningStorm,
    StartLootRoll,
    StartMirrorTimer,
    StartTimer,
    StopElapsedTimer,
    StopMirrorTimer,
    StopSpeakerbotSound,
    StreamingMovies,
    SummonCancel,
    SummonRaidMemberValidateFailed,
    SummonRequest,
    SupercededSpells,
    SuspendComms,
    SuspendToken,
    SyncWowEntitlements,
    TalentsInvoluntarilyReset,
    TaxiNodeStatus,
    TextEmote,
    ThreatClear,
    ThreatRemove,
    ThreatUpdate,
    TimeAdjustment,
    TimeSyncRequest,
    TitleEarned,
    TitleLost,
    TotemCreated,
    TotemDurationChanged,
    TotemMoved,
    TradeStatus,
    TradeUpdated,
    TrainerBuyFailed,
    TrainerList,
    TransferAborted,
    TransferPending,
    TransmogrifyNpc,
    TreasurePickerResponse,
    TriggerCinematic,
    TriggerMovie,
    TurnInPetitionResult,
    TutorialFlags,
    TwitterStatus,
    UiHealingRangeModified,
    UiItemInteractionNpc,
    UiMapQuestLinesResponse,
    UndeleteCharacterResponse,
    UndeleteCooldownStatusResponse,
    UnlearnedSpells,
    UnloadChildMap,
    UpdateAadcStatusResponse,
    UpdateAccountData,
    UpdateActionButtons,
    UpdateBnetSessionKey,
    UpdateCapturePoint,
    UpdateCelestialBody,
    UpdateCharacterFlags,
    UpdateChargeCategoryCooldown,
    UpdateCooldown,
    UpdateDailyMissionCounter,
    UpdateExpansionLevel,
    UpdateGameTimeState,
    UpdateInstanceOwnership,
    UpdateLastInstance,
    UpdateObject,
    UpdatePrimarySpec,
    UpdateTalentData,
    UpdateTaskProgress,
    UpdateWeeklySpellUsage,
    UpdateWorldState,
    UserlistAdd,
    UserlistRemove,
    UserlistUpdate,
    UseEquipmentSetResult,
    VasCheckTransferOkResponse,
    VasGetQueueMinutesResponse,
    VasGetServiceStatusResponse,
    VasPurchaseComplete,
    VasPurchaseStateUpdate,
    VendorInventory,
    VignetteUpdate,
    VoiceChannelInfoResponse,
    VoiceChannelSttTokenResponse,
    VoiceLoginResponse,
    VoidItemSwapResponse,
    VoidStorageContents,
    VoidStorageFailed,
    VoidStorageTransferChanges,
    VoidTransferResult,
    WaitQueueFinish,
    WaitQueueUpdate,
    Warden3Data,
    Warden3Disabled,
    Warden3Enabled,
    WarfrontComplete,
    WargameRequestSuccessfullySentToOpponent,
    Weather,
    WeeklyRewardsProgressResult,
    WeeklyRewardsResult,
    WeeklyRewardClaimResult,
    WeeklySpellUsage,
    Who,
    WhoIs,
    WillBeKickedForAddedSubscriptionTime,
    WorldMapOpenNpc,
    WorldQuestUpdateResponse,
    WorldServerInfo,
    WowEntitlementNotification,
    XpGainAborted,
    XpGainEnabled,
    ZoneUnderAttack,

    AccountHeirloomUpdate,
    CompressedPacket,
    MultiplePackets,
}

impl From<OpcodeClient> for PacketClient {
    fn from(opcode: OpcodeClient) -> Self {
        match opcode {
            OpcodeClient::AbandonNpeResponse => PacketClient::AbandonNpeResponse,
            OpcodeClient::AcceptGuildInvite => PacketClient::AcceptGuildInvite,
            OpcodeClient::AcceptTrade => PacketClient::AcceptTrade,
            OpcodeClient::AcceptWargameInvite => PacketClient::AcceptWargameInvite,
            OpcodeClient::AccountNotificationAcknowledged => {
                PacketClient::AccountNotificationAcknowledged
            }
            OpcodeClient::ActivateSoulbind => PacketClient::ActivateSoulbind,
            OpcodeClient::ActivateTaxi => PacketClient::ActivateTaxi,
            OpcodeClient::AddonList => PacketClient::AddonList,
            OpcodeClient::AddAccountCosmetic => PacketClient::AddAccountCosmetic,
            OpcodeClient::AddBattlenetFriend => PacketClient::AddBattlenetFriend,
            OpcodeClient::AddFriend => PacketClient::AddFriend,
            OpcodeClient::AddIgnore => PacketClient::AddIgnore,
            OpcodeClient::AddToy => PacketClient::AddToy,
            OpcodeClient::AdventureJournalOpenQuest => PacketClient::AdventureJournalOpenQuest,
            OpcodeClient::AdventureJournalUpdateSuggestions => {
                PacketClient::AdventureJournalUpdateSuggestions
            }
            OpcodeClient::AdventureMapStartQuest => PacketClient::AdventureMapStartQuest,
            OpcodeClient::AlterAppearance => PacketClient::AlterAppearance,
            OpcodeClient::AreaSpiritHealerQuery => PacketClient::AreaSpiritHealerQuery,
            OpcodeClient::AreaSpiritHealerQueue => PacketClient::AreaSpiritHealerQueue,
            OpcodeClient::AreaTrigger => PacketClient::AreaTrigger,
            OpcodeClient::ArtifactAddPower => PacketClient::ArtifactAddPower,
            OpcodeClient::ArtifactSetAppearance => PacketClient::ArtifactSetAppearance,
            OpcodeClient::AssignEquipmentSetSpec => PacketClient::AssignEquipmentSetSpec,
            OpcodeClient::AttackStop => PacketClient::AttackStop,
            OpcodeClient::AttackSwing => PacketClient::AttackSwing,
            OpcodeClient::AuctionableTokenSell => PacketClient::AuctionableTokenSell,
            OpcodeClient::AuctionableTokenSellAtMarketPrice => {
                PacketClient::AuctionableTokenSellAtMarketPrice
            }
            OpcodeClient::AuctionBrowseQuery => PacketClient::AuctionBrowseQuery,
            OpcodeClient::AuctionCancelCommoditiesPurchase => {
                PacketClient::AuctionCancelCommoditiesPurchase
            }
            OpcodeClient::AuctionConfirmCommoditiesPurchase => {
                PacketClient::AuctionConfirmCommoditiesPurchase
            }
            OpcodeClient::AuctionGetCommodityQuote => PacketClient::AuctionGetCommodityQuote,
            OpcodeClient::AuctionHelloRequest => PacketClient::AuctionHelloRequest,
            OpcodeClient::AuctionListBiddedItems => PacketClient::AuctionListBiddedItems,
            OpcodeClient::AuctionListBucketsByBucketKeys => {
                PacketClient::AuctionListBucketsByBucketKeys
            }
            OpcodeClient::AuctionListItemsByBucketKey => PacketClient::AuctionListItemsByBucketKey,
            OpcodeClient::AuctionListItemsByItemId => PacketClient::AuctionListItemsByItemId,
            OpcodeClient::AuctionListOwnedItems => PacketClient::AuctionListOwnedItems,
            OpcodeClient::AuctionPlaceBid => PacketClient::AuctionPlaceBid,
            OpcodeClient::AuctionRemoveItem => PacketClient::AuctionRemoveItem,
            OpcodeClient::AuctionReplicateItems => PacketClient::AuctionReplicateItems,
            OpcodeClient::AuctionSellCommodity => PacketClient::AuctionSellCommodity,
            OpcodeClient::AuctionSellItem => PacketClient::AuctionSellItem,
            OpcodeClient::AuctionSetFavoriteItem => PacketClient::AuctionSetFavoriteItem,
            OpcodeClient::AuthContinuedSession => PacketClient::AuthContinuedSession,
            OpcodeClient::AuthSession => PacketClient::AuthSession,
            OpcodeClient::AutobankItem => PacketClient::AutobankItem,
            OpcodeClient::AutobankReagent => PacketClient::AutobankReagent,
            OpcodeClient::AutostoreBankItem => PacketClient::AutostoreBankItem,
            OpcodeClient::AutostoreBankReagent => PacketClient::AutostoreBankReagent,
            OpcodeClient::AutoEquipItem => PacketClient::AutoEquipItem,
            OpcodeClient::AutoEquipItemSlot => PacketClient::AutoEquipItemSlot,
            OpcodeClient::AutoGuildBankItem => PacketClient::AutoGuildBankItem,
            OpcodeClient::AutoStoreBagItem => PacketClient::AutoStoreBagItem,
            OpcodeClient::AutoStoreGuildBankItem => PacketClient::AutoStoreGuildBankItem,
            OpcodeClient::AzeriteEmpoweredItemSelectPower => {
                PacketClient::AzeriteEmpoweredItemSelectPower
            }
            OpcodeClient::AzeriteEmpoweredItemViewed => PacketClient::AzeriteEmpoweredItemViewed,
            OpcodeClient::AzeriteEssenceActivateEssence => {
                PacketClient::AzeriteEssenceActivateEssence
            }
            OpcodeClient::AzeriteEssenceUnlockMilestone => {
                PacketClient::AzeriteEssenceUnlockMilestone
            }
            OpcodeClient::BankerActivate => PacketClient::BankerActivate,
            OpcodeClient::BattlefieldLeave => PacketClient::BattlefieldLeave,
            OpcodeClient::BattlefieldList => PacketClient::BattlefieldList,
            OpcodeClient::BattlefieldPort => PacketClient::BattlefieldPort,
            OpcodeClient::BattlemasterHello => PacketClient::BattlemasterHello,
            OpcodeClient::BattlemasterJoin => PacketClient::BattlemasterJoin,
            OpcodeClient::BattlemasterJoinArena => PacketClient::BattlemasterJoinArena,
            OpcodeClient::BattlemasterJoinBrawl => PacketClient::BattlemasterJoinBrawl,
            OpcodeClient::BattlemasterJoinSkirmish => PacketClient::BattlemasterJoinSkirmish,
            OpcodeClient::BattlenetChallengeResponse => PacketClient::BattlenetChallengeResponse,
            OpcodeClient::BattlenetRequest => PacketClient::BattlenetRequest,
            OpcodeClient::BattlePayAckFailedResponse => PacketClient::BattlePayAckFailedResponse,
            OpcodeClient::BattlePayCancelOpenCheckout => PacketClient::BattlePayCancelOpenCheckout,
            OpcodeClient::BattlePayConfirmPurchaseResponse => {
                PacketClient::BattlePayConfirmPurchaseResponse
            }
            OpcodeClient::BattlePayDistributionAssignToTarget => {
                PacketClient::BattlePayDistributionAssignToTarget
            }
            OpcodeClient::BattlePayDistributionAssignVas => {
                PacketClient::BattlePayDistributionAssignVas
            }
            OpcodeClient::BattlePayGetProductList => PacketClient::BattlePayGetProductList,
            OpcodeClient::BattlePayGetPurchaseList => PacketClient::BattlePayGetPurchaseList,
            OpcodeClient::BattlePayOpenCheckout => PacketClient::BattlePayOpenCheckout,
            OpcodeClient::BattlePayRequestPriceInfo => PacketClient::BattlePayRequestPriceInfo,
            OpcodeClient::BattlePayStartPurchase => PacketClient::BattlePayStartPurchase,
            OpcodeClient::BattlePayStartVasPurchase => PacketClient::BattlePayStartVasPurchase,
            OpcodeClient::BattlePetClearFanfare => PacketClient::BattlePetClearFanfare,
            OpcodeClient::BattlePetDeletePet => PacketClient::BattlePetDeletePet,
            OpcodeClient::BattlePetDeletePetCheat => PacketClient::BattlePetDeletePetCheat,
            OpcodeClient::BattlePetModifyName => PacketClient::BattlePetModifyName,
            OpcodeClient::BattlePetRequestJournal => PacketClient::BattlePetRequestJournal,
            OpcodeClient::BattlePetRequestJournalLock => PacketClient::BattlePetRequestJournalLock,
            OpcodeClient::BattlePetSetBattleSlot => PacketClient::BattlePetSetBattleSlot,
            OpcodeClient::BattlePetSetFlags => PacketClient::BattlePetSetFlags,
            OpcodeClient::BattlePetSummon => PacketClient::BattlePetSummon,
            OpcodeClient::BattlePetUpdateDisplayNotify => {
                PacketClient::BattlePetUpdateDisplayNotify
            }
            OpcodeClient::BattlePetUpdateNotify => PacketClient::BattlePetUpdateNotify,
            OpcodeClient::BeginTrade => PacketClient::BeginTrade,
            OpcodeClient::BinderActivate => PacketClient::BinderActivate,
            OpcodeClient::BlackMarketBidOnItem => PacketClient::BlackMarketBidOnItem,
            OpcodeClient::BlackMarketOpen => PacketClient::BlackMarketOpen,
            OpcodeClient::BlackMarketRequestItems => PacketClient::BlackMarketRequestItems,
            OpcodeClient::BonusRoll => PacketClient::BonusRoll,
            OpcodeClient::BugReport => PacketClient::BugReport,
            OpcodeClient::BusyTrade => PacketClient::BusyTrade,
            OpcodeClient::BuyBackItem => PacketClient::BuyBackItem,
            OpcodeClient::BuyBankSlot => PacketClient::BuyBankSlot,
            OpcodeClient::BuyItem => PacketClient::BuyItem,
            OpcodeClient::BuyReagentBank => PacketClient::BuyReagentBank,
            OpcodeClient::CageBattlePet => PacketClient::CageBattlePet,
            OpcodeClient::CalendarAddEvent => PacketClient::CalendarAddEvent,
            OpcodeClient::CalendarCommunityInvite => PacketClient::CalendarCommunityInvite,
            OpcodeClient::CalendarComplain => PacketClient::CalendarComplain,
            OpcodeClient::CalendarCopyEvent => PacketClient::CalendarCopyEvent,
            OpcodeClient::CalendarEventSignUp => PacketClient::CalendarEventSignUp,
            OpcodeClient::CalendarGet => PacketClient::CalendarGet,
            OpcodeClient::CalendarGetEvent => PacketClient::CalendarGetEvent,
            OpcodeClient::CalendarGetNumPending => PacketClient::CalendarGetNumPending,
            OpcodeClient::CalendarInvite => PacketClient::CalendarInvite,
            OpcodeClient::CalendarModeratorStatus => PacketClient::CalendarModeratorStatus,
            OpcodeClient::CalendarRemoveEvent => PacketClient::CalendarRemoveEvent,
            OpcodeClient::CalendarRemoveInvite => PacketClient::CalendarRemoveInvite,
            OpcodeClient::CalendarRsvp => PacketClient::CalendarRsvp,
            OpcodeClient::CalendarStatus => PacketClient::CalendarStatus,
            OpcodeClient::CalendarUpdateEvent => PacketClient::CalendarUpdateEvent,
            OpcodeClient::CancelAura => PacketClient::CancelAura,
            OpcodeClient::CancelAutoRepeatSpell => PacketClient::CancelAutoRepeatSpell,
            OpcodeClient::CancelCast => PacketClient::CancelCast,
            OpcodeClient::CancelChannelling => PacketClient::CancelChannelling,
            OpcodeClient::CancelGrowthAura => PacketClient::CancelGrowthAura,
            OpcodeClient::CancelMasterLootRoll => PacketClient::CancelMasterLootRoll,
            OpcodeClient::CancelModSpeedNoControlAuras => {
                PacketClient::CancelModSpeedNoControlAuras
            }
            OpcodeClient::CancelMountAura => PacketClient::CancelMountAura,
            OpcodeClient::CancelQueuedSpell => PacketClient::CancelQueuedSpell,
            OpcodeClient::CancelTempEnchantment => PacketClient::CancelTempEnchantment,
            OpcodeClient::CancelTrade => PacketClient::CancelTrade,
            OpcodeClient::CanDuel => PacketClient::CanDuel,
            OpcodeClient::CanRedeemTokenForBalance => PacketClient::CanRedeemTokenForBalance,
            OpcodeClient::CastSpell => PacketClient::CastSpell,
            OpcodeClient::ChallengeModeRequestLeaders => PacketClient::ChallengeModeRequestLeaders,
            OpcodeClient::ChangeBagSlotFlag => PacketClient::ChangeBagSlotFlag,
            OpcodeClient::ChangeBankBagSlotFlag => PacketClient::ChangeBankBagSlotFlag,
            OpcodeClient::ChangeMonumentAppearance => PacketClient::ChangeMonumentAppearance,
            OpcodeClient::ChangeRealmTicket => PacketClient::ChangeRealmTicket,
            OpcodeClient::ChangeSubGroup => PacketClient::ChangeSubGroup,
            OpcodeClient::CharacterCheckUpgrade => PacketClient::CharacterCheckUpgrade,
            OpcodeClient::CharacterRenameRequest => PacketClient::CharacterRenameRequest,
            OpcodeClient::CharacterUpgradeManualUnrevokeRequest => {
                PacketClient::CharacterUpgradeManualUnrevokeRequest
            }
            OpcodeClient::CharacterUpgradeStart => PacketClient::CharacterUpgradeStart,
            OpcodeClient::CharCustomize => PacketClient::CharCustomize,
            OpcodeClient::CharDelete => PacketClient::CharDelete,
            OpcodeClient::CharRaceOrFactionChange => PacketClient::CharRaceOrFactionChange,
            OpcodeClient::ChatAddonMessage => PacketClient::ChatAddonMessage,
            OpcodeClient::ChatAddonMessageTargeted => PacketClient::ChatAddonMessageTargeted,
            OpcodeClient::ChatChannelAnnouncements => PacketClient::ChatChannelAnnouncements,
            OpcodeClient::ChatChannelBan => PacketClient::ChatChannelBan,
            OpcodeClient::ChatChannelDeclineInvite => PacketClient::ChatChannelDeclineInvite,
            OpcodeClient::ChatChannelDisplayList => PacketClient::ChatChannelDisplayList,
            OpcodeClient::ChatChannelInvite => PacketClient::ChatChannelInvite,
            OpcodeClient::ChatChannelKick => PacketClient::ChatChannelKick,
            OpcodeClient::ChatChannelList => PacketClient::ChatChannelList,
            OpcodeClient::ChatChannelModerator => PacketClient::ChatChannelModerator,
            OpcodeClient::ChatChannelOwner => PacketClient::ChatChannelOwner,
            OpcodeClient::ChatChannelPassword => PacketClient::ChatChannelPassword,
            OpcodeClient::ChatChannelSetOwner => PacketClient::ChatChannelSetOwner,
            OpcodeClient::ChatChannelSilenceAll => PacketClient::ChatChannelSilenceAll,
            OpcodeClient::ChatChannelUnban => PacketClient::ChatChannelUnban,
            OpcodeClient::ChatChannelUnmoderator => PacketClient::ChatChannelUnmoderator,
            OpcodeClient::ChatChannelUnsilenceAll => PacketClient::ChatChannelUnsilenceAll,
            OpcodeClient::ChatJoinChannel => PacketClient::ChatJoinChannel,
            OpcodeClient::ChatLeaveChannel => PacketClient::ChatLeaveChannel,
            OpcodeClient::ChatMessageAfk => PacketClient::ChatMessageAfk,
            OpcodeClient::ChatMessageChannel => PacketClient::ChatMessageChannel,
            OpcodeClient::ChatMessageDnd => PacketClient::ChatMessageDnd,
            OpcodeClient::ChatMessageEmote => PacketClient::ChatMessageEmote,
            OpcodeClient::ChatMessageGuild => PacketClient::ChatMessageGuild,
            OpcodeClient::ChatMessageInstanceChat => PacketClient::ChatMessageInstanceChat,
            OpcodeClient::ChatMessageOfficer => PacketClient::ChatMessageOfficer,
            OpcodeClient::ChatMessageParty => PacketClient::ChatMessageParty,
            OpcodeClient::ChatMessageRaid => PacketClient::ChatMessageRaid,
            OpcodeClient::ChatMessageRaidWarning => PacketClient::ChatMessageRaidWarning,
            OpcodeClient::ChatMessageSay => PacketClient::ChatMessageSay,
            OpcodeClient::ChatMessageWhisper => PacketClient::ChatMessageWhisper,
            OpcodeClient::ChatMessageYell => PacketClient::ChatMessageYell,
            OpcodeClient::ChatRegisterAddonPrefixes => PacketClient::ChatRegisterAddonPrefixes,
            OpcodeClient::ChatReportFiltered => PacketClient::ChatReportFiltered,
            OpcodeClient::ChatReportIgnored => PacketClient::ChatReportIgnored,
            OpcodeClient::ChatUnregisterAllAddonPrefixes => {
                PacketClient::ChatUnregisterAllAddonPrefixes
            }
            OpcodeClient::CheckCharacterNameAvailability => {
                PacketClient::CheckCharacterNameAvailability
            }
            OpcodeClient::CheckIsAdventureMapPoiValid => PacketClient::CheckIsAdventureMapPoiValid,
            OpcodeClient::ChoiceResponse => PacketClient::ChoiceResponse,
            OpcodeClient::ChromieTimeSelectExpansion => PacketClient::ChromieTimeSelectExpansion,
            OpcodeClient::ClaimWeeklyReward => PacketClient::ClaimWeeklyReward,
            OpcodeClient::ClearNewAppearance => PacketClient::ClearNewAppearance,
            OpcodeClient::ClearRaidMarker => PacketClient::ClearRaidMarker,
            OpcodeClient::ClearTradeItem => PacketClient::ClearTradeItem,
            OpcodeClient::ClientPortGraveyard => PacketClient::ClientPortGraveyard,
            OpcodeClient::CloseInteraction => PacketClient::CloseInteraction,
            OpcodeClient::CloseQuestChoice => PacketClient::CloseQuestChoice,
            OpcodeClient::CloseRuneforgeInteraction => PacketClient::CloseRuneforgeInteraction,
            OpcodeClient::ClubFinderApplicationResponse => {
                PacketClient::ClubFinderApplicationResponse
            }
            OpcodeClient::ClubFinderGetApplicantsList => PacketClient::ClubFinderGetApplicantsList,
            OpcodeClient::ClubFinderPost => PacketClient::ClubFinderPost,
            OpcodeClient::ClubFinderRequestClubsData => PacketClient::ClubFinderRequestClubsData,
            OpcodeClient::ClubFinderRequestClubsList => PacketClient::ClubFinderRequestClubsList,
            OpcodeClient::ClubFinderRequestMembershipToClub => {
                PacketClient::ClubFinderRequestMembershipToClub
            }
            OpcodeClient::ClubFinderRequestPendingClubsList => {
                PacketClient::ClubFinderRequestPendingClubsList
            }
            OpcodeClient::ClubFinderRequestSubscribedClubPostingIds => {
                PacketClient::ClubFinderRequestSubscribedClubPostingIds
            }
            OpcodeClient::ClubFinderRespondToApplicant => {
                PacketClient::ClubFinderRespondToApplicant
            }
            OpcodeClient::ClubPresenceSubscribe => PacketClient::ClubPresenceSubscribe,
            OpcodeClient::CollectionItemSetFavorite => PacketClient::CollectionItemSetFavorite,
            OpcodeClient::CommentatorEnable => PacketClient::CommentatorEnable,
            OpcodeClient::CommentatorEnterInstance => PacketClient::CommentatorEnterInstance,
            OpcodeClient::CommentatorExitInstance => PacketClient::CommentatorExitInstance,
            OpcodeClient::CommentatorGetMapInfo => PacketClient::CommentatorGetMapInfo,
            OpcodeClient::CommentatorGetPlayerCooldowns => {
                PacketClient::CommentatorGetPlayerCooldowns
            }
            OpcodeClient::CommentatorGetPlayerInfo => PacketClient::CommentatorGetPlayerInfo,
            OpcodeClient::CommentatorSpectate => PacketClient::CommentatorSpectate,
            OpcodeClient::CommentatorStartWargame => PacketClient::CommentatorStartWargame,
            OpcodeClient::CommerceTokenGetCount => PacketClient::CommerceTokenGetCount,
            OpcodeClient::CommerceTokenGetLog => PacketClient::CommerceTokenGetLog,
            OpcodeClient::CommerceTokenGetMarketPrice => PacketClient::CommerceTokenGetMarketPrice,
            OpcodeClient::Complaint => PacketClient::Complaint,
            OpcodeClient::CompleteCinematic => PacketClient::CompleteCinematic,
            OpcodeClient::CompleteMovie => PacketClient::CompleteMovie,
            OpcodeClient::ConfirmArtifactRespec => PacketClient::ConfirmArtifactRespec,
            OpcodeClient::ConfirmRespecWipe => PacketClient::ConfirmRespecWipe,
            OpcodeClient::ConnectToFailed => PacketClient::ConnectToFailed,
            OpcodeClient::ConsumableTokenBuy => PacketClient::ConsumableTokenBuy,
            OpcodeClient::ConsumableTokenBuyAtMarketPrice => {
                PacketClient::ConsumableTokenBuyAtMarketPrice
            }
            OpcodeClient::ConsumableTokenCanVeteranBuy => {
                PacketClient::ConsumableTokenCanVeteranBuy
            }
            OpcodeClient::ConsumableTokenRedeem => PacketClient::ConsumableTokenRedeem,
            OpcodeClient::ConsumableTokenRedeemConfirmation => {
                PacketClient::ConsumableTokenRedeemConfirmation
            }
            OpcodeClient::ContributionContribute => PacketClient::ContributionContribute,
            OpcodeClient::ContributionLastUpdateRequest => {
                PacketClient::ContributionLastUpdateRequest
            }
            OpcodeClient::ConversationCinematicReady => PacketClient::ConversationCinematicReady,
            OpcodeClient::ConversationLineStarted => PacketClient::ConversationLineStarted,
            OpcodeClient::ConvertRaid => PacketClient::ConvertRaid,
            OpcodeClient::CovenantRenownRequestCatchupState => {
                PacketClient::CovenantRenownRequestCatchupState
            }
            OpcodeClient::CreateCharacter => PacketClient::CreateCharacter,
            OpcodeClient::CreateShipment => PacketClient::CreateShipment,
            OpcodeClient::DbQueryBulk => PacketClient::DbQueryBulk,
            OpcodeClient::DeclineGuildInvites => PacketClient::DeclineGuildInvites,
            OpcodeClient::DeclinePetition => PacketClient::DeclinePetition,
            OpcodeClient::DeleteEquipmentSet => PacketClient::DeleteEquipmentSet,
            OpcodeClient::DelFriend => PacketClient::DelFriend,
            OpcodeClient::DelIgnore => PacketClient::DelIgnore,
            OpcodeClient::DepositReagentBank => PacketClient::DepositReagentBank,
            OpcodeClient::DestroyItem => PacketClient::DestroyItem,
            OpcodeClient::DfBootPlayerVote => PacketClient::DfBootPlayerVote,
            OpcodeClient::DfConfirmExpandSearch => PacketClient::DfConfirmExpandSearch,
            OpcodeClient::DfGetJoinStatus => PacketClient::DfGetJoinStatus,
            OpcodeClient::DfGetSystemInfo => PacketClient::DfGetSystemInfo,
            OpcodeClient::DfJoin => PacketClient::DfJoin,
            OpcodeClient::DfLeave => PacketClient::DfLeave,
            OpcodeClient::DfProposalResponse => PacketClient::DfProposalResponse,
            OpcodeClient::DfReadyCheckResponse => PacketClient::DfReadyCheckResponse,
            OpcodeClient::DfSetRoles => PacketClient::DfSetRoles,
            OpcodeClient::DfTeleport => PacketClient::DfTeleport,
            OpcodeClient::DiscardedTimeSyncAcks => PacketClient::DiscardedTimeSyncAcks,
            OpcodeClient::DismissCritter => PacketClient::DismissCritter,
            OpcodeClient::DoCountdown => PacketClient::DoCountdown,
            OpcodeClient::DoMasterLootRoll => PacketClient::DoMasterLootRoll,
            OpcodeClient::DoReadyCheck => PacketClient::DoReadyCheck,
            OpcodeClient::DuelResponse => PacketClient::DuelResponse,
            OpcodeClient::EjectPassenger => PacketClient::EjectPassenger,
            OpcodeClient::Emote => PacketClient::Emote,
            OpcodeClient::EnableNagle => PacketClient::EnableNagle,
            OpcodeClient::EnableTaxiNode => PacketClient::EnableTaxiNode,
            OpcodeClient::EngineSurvey => PacketClient::EngineSurvey,
            OpcodeClient::EnterEncryptedModeAck => PacketClient::EnterEncryptedModeAck,
            OpcodeClient::EnumCharacters => PacketClient::EnumCharacters,
            OpcodeClient::EnumCharactersDeletedByClient => {
                PacketClient::EnumCharactersDeletedByClient
            }
            OpcodeClient::FarSight => PacketClient::FarSight,
            OpcodeClient::GameEventDebugDisable => PacketClient::GameEventDebugDisable,
            OpcodeClient::GameEventDebugEnable => PacketClient::GameEventDebugEnable,
            OpcodeClient::GameObjReportUse => PacketClient::GameObjReportUse,
            OpcodeClient::GameObjUse => PacketClient::GameObjUse,
            OpcodeClient::GarrisonAddFollowerHealth => PacketClient::GarrisonAddFollowerHealth,
            OpcodeClient::GarrisonAssignFollowerToBuilding => {
                PacketClient::GarrisonAssignFollowerToBuilding
            }
            OpcodeClient::GarrisonCancelConstruction => PacketClient::GarrisonCancelConstruction,
            OpcodeClient::GarrisonCheckUpgradeable => PacketClient::GarrisonCheckUpgradeable,
            OpcodeClient::GarrisonCompleteMission => PacketClient::GarrisonCompleteMission,
            OpcodeClient::GarrisonFullyHealAllFollowers => {
                PacketClient::GarrisonFullyHealAllFollowers
            }
            OpcodeClient::GarrisonGenerateRecruits => PacketClient::GarrisonGenerateRecruits,
            OpcodeClient::GarrisonGetClassSpecCategoryInfo => {
                PacketClient::GarrisonGetClassSpecCategoryInfo
            }
            OpcodeClient::GarrisonGetMapData => PacketClient::GarrisonGetMapData,
            OpcodeClient::GarrisonGetMissionReward => PacketClient::GarrisonGetMissionReward,
            OpcodeClient::GarrisonLearnTalent => PacketClient::GarrisonLearnTalent,
            OpcodeClient::GarrisonMissionBonusRoll => PacketClient::GarrisonMissionBonusRoll,
            OpcodeClient::GarrisonPurchaseBuilding => PacketClient::GarrisonPurchaseBuilding,
            OpcodeClient::GarrisonRecruitFollower => PacketClient::GarrisonRecruitFollower,
            OpcodeClient::GarrisonRemoveFollower => PacketClient::GarrisonRemoveFollower,
            OpcodeClient::GarrisonRemoveFollowerFromBuilding => {
                PacketClient::GarrisonRemoveFollowerFromBuilding
            }
            OpcodeClient::GarrisonRenameFollower => PacketClient::GarrisonRenameFollower,
            OpcodeClient::GarrisonRequestBlueprintAndSpecializationData => {
                PacketClient::GarrisonRequestBlueprintAndSpecializationData
            }
            OpcodeClient::GarrisonRequestShipmentInfo => PacketClient::GarrisonRequestShipmentInfo,
            OpcodeClient::GarrisonResearchTalent => PacketClient::GarrisonResearchTalent,
            OpcodeClient::GarrisonSetBuildingActive => PacketClient::GarrisonSetBuildingActive,
            OpcodeClient::GarrisonSetFollowerFavorite => PacketClient::GarrisonSetFollowerFavorite,
            OpcodeClient::GarrisonSetFollowerInactive => PacketClient::GarrisonSetFollowerInactive,
            OpcodeClient::GarrisonSetRecruitmentPreferences => {
                PacketClient::GarrisonSetRecruitmentPreferences
            }
            OpcodeClient::GarrisonSocketTalent => PacketClient::GarrisonSocketTalent,
            OpcodeClient::GarrisonStartMission => PacketClient::GarrisonStartMission,
            OpcodeClient::GarrisonSwapBuildings => PacketClient::GarrisonSwapBuildings,
            OpcodeClient::GenerateRandomCharacterName => PacketClient::GenerateRandomCharacterName,
            OpcodeClient::GetAccountCharacterList => PacketClient::GetAccountCharacterList,
            OpcodeClient::GetAccountNotifications => PacketClient::GetAccountNotifications,
            OpcodeClient::GetGarrisonInfo => PacketClient::GetGarrisonInfo,
            OpcodeClient::GetItemPurchaseData => PacketClient::GetItemPurchaseData,
            OpcodeClient::GetLandingPageShipments => PacketClient::GetLandingPageShipments,
            OpcodeClient::GetMirrorImageData => PacketClient::GetMirrorImageData,
            OpcodeClient::GetPvpOptionsEnabled => PacketClient::GetPvpOptionsEnabled,
            OpcodeClient::GetRafAccountInfo => PacketClient::GetRafAccountInfo,
            OpcodeClient::GetRemainingGameTime => PacketClient::GetRemainingGameTime,
            OpcodeClient::GetTrophyList => PacketClient::GetTrophyList,
            OpcodeClient::GetUndeleteCharacterCooldownStatus => {
                PacketClient::GetUndeleteCharacterCooldownStatus
            }
            OpcodeClient::GetVasAccountCharacterList => PacketClient::GetVasAccountCharacterList,
            OpcodeClient::GetVasTransferTargetRealmList => {
                PacketClient::GetVasTransferTargetRealmList
            }
            OpcodeClient::GmTicketAcknowledgeSurvey => PacketClient::GmTicketAcknowledgeSurvey,
            OpcodeClient::GmTicketGetCaseStatus => PacketClient::GmTicketGetCaseStatus,
            OpcodeClient::GmTicketGetSystemStatus => PacketClient::GmTicketGetSystemStatus,
            OpcodeClient::GossipRefreshOptions => PacketClient::GossipRefreshOptions,
            OpcodeClient::GossipSelectOption => PacketClient::GossipSelectOption,
            OpcodeClient::GuildAddBattlenetFriend => PacketClient::GuildAddBattlenetFriend,
            OpcodeClient::GuildAddRank => PacketClient::GuildAddRank,
            OpcodeClient::GuildAssignMemberRank => PacketClient::GuildAssignMemberRank,
            OpcodeClient::GuildAutoDeclineInvitation => PacketClient::GuildAutoDeclineInvitation,
            OpcodeClient::GuildBankActivate => PacketClient::GuildBankActivate,
            OpcodeClient::GuildBankBuyTab => PacketClient::GuildBankBuyTab,
            OpcodeClient::GuildBankDepositMoney => PacketClient::GuildBankDepositMoney,
            OpcodeClient::GuildBankLogQuery => PacketClient::GuildBankLogQuery,
            OpcodeClient::GuildBankQueryTab => PacketClient::GuildBankQueryTab,
            OpcodeClient::GuildBankRemainingWithdrawMoneyQuery => {
                PacketClient::GuildBankRemainingWithdrawMoneyQuery
            }
            OpcodeClient::GuildBankSetTabText => PacketClient::GuildBankSetTabText,
            OpcodeClient::GuildBankTextQuery => PacketClient::GuildBankTextQuery,
            OpcodeClient::GuildBankUpdateTab => PacketClient::GuildBankUpdateTab,
            OpcodeClient::GuildBankWithdrawMoney => PacketClient::GuildBankWithdrawMoney,
            OpcodeClient::GuildChallengeUpdateRequest => PacketClient::GuildChallengeUpdateRequest,
            OpcodeClient::GuildChangeNameRequest => PacketClient::GuildChangeNameRequest,
            OpcodeClient::GuildDeclineInvitation => PacketClient::GuildDeclineInvitation,
            OpcodeClient::GuildDelete => PacketClient::GuildDelete,
            OpcodeClient::GuildDeleteRank => PacketClient::GuildDeleteRank,
            OpcodeClient::GuildDemoteMember => PacketClient::GuildDemoteMember,
            OpcodeClient::GuildEventLogQuery => PacketClient::GuildEventLogQuery,
            OpcodeClient::GuildGetAchievementMembers => PacketClient::GuildGetAchievementMembers,
            OpcodeClient::GuildGetRanks => PacketClient::GuildGetRanks,
            OpcodeClient::GuildGetRoster => PacketClient::GuildGetRoster,
            OpcodeClient::GuildInviteByName => PacketClient::GuildInviteByName,
            OpcodeClient::GuildLeave => PacketClient::GuildLeave,
            OpcodeClient::GuildNewsUpdateSticky => PacketClient::GuildNewsUpdateSticky,
            OpcodeClient::GuildOfficerRemoveMember => PacketClient::GuildOfficerRemoveMember,
            OpcodeClient::GuildPermissionsQuery => PacketClient::GuildPermissionsQuery,
            OpcodeClient::GuildPromoteMember => PacketClient::GuildPromoteMember,
            OpcodeClient::GuildQueryMembersForRecipe => PacketClient::GuildQueryMembersForRecipe,
            OpcodeClient::GuildQueryMemberRecipes => PacketClient::GuildQueryMemberRecipes,
            OpcodeClient::GuildQueryNews => PacketClient::GuildQueryNews,
            OpcodeClient::GuildQueryRecipes => PacketClient::GuildQueryRecipes,
            OpcodeClient::GuildReplaceGuildMaster => PacketClient::GuildReplaceGuildMaster,
            OpcodeClient::GuildSetAchievementTracking => PacketClient::GuildSetAchievementTracking,
            OpcodeClient::GuildSetFocusedAchievement => PacketClient::GuildSetFocusedAchievement,
            OpcodeClient::GuildSetGuildMaster => PacketClient::GuildSetGuildMaster,
            OpcodeClient::GuildSetMemberNote => PacketClient::GuildSetMemberNote,
            OpcodeClient::GuildSetRankPermissions => PacketClient::GuildSetRankPermissions,
            OpcodeClient::GuildShiftRank => PacketClient::GuildShiftRank,
            OpcodeClient::GuildUpdateInfoText => PacketClient::GuildUpdateInfoText,
            OpcodeClient::GuildUpdateMotdText => PacketClient::GuildUpdateMotdText,
            OpcodeClient::HearthAndResurrect => PacketClient::HearthAndResurrect,
            OpcodeClient::HideQuestChoice => PacketClient::HideQuestChoice,
            OpcodeClient::HotfixRequest => PacketClient::HotfixRequest,
            OpcodeClient::IgnoreTrade => PacketClient::IgnoreTrade,
            OpcodeClient::InitiateRolePoll => PacketClient::InitiateRolePoll,
            OpcodeClient::InitiateTrade => PacketClient::InitiateTrade,
            OpcodeClient::Inspect => PacketClient::Inspect,
            OpcodeClient::InstanceLockResponse => PacketClient::InstanceLockResponse,
            OpcodeClient::IslandQueue => PacketClient::IslandQueue,
            OpcodeClient::ItemPurchaseRefund => PacketClient::ItemPurchaseRefund,
            OpcodeClient::ItemTextQuery => PacketClient::ItemTextQuery,
            OpcodeClient::JoinPetBattleQueue => PacketClient::JoinPetBattleQueue,
            OpcodeClient::JoinRatedBattleground => PacketClient::JoinRatedBattleground,
            OpcodeClient::KeepAlive => PacketClient::KeepAlive,
            OpcodeClient::KeyboundOverride => PacketClient::KeyboundOverride,
            OpcodeClient::LatencyReport => PacketClient::LatencyReport,
            OpcodeClient::LearnPvpTalents => PacketClient::LearnPvpTalents,
            OpcodeClient::LearnTalents => PacketClient::LearnTalents,
            OpcodeClient::LeaveGroup => PacketClient::LeaveGroup,
            OpcodeClient::LeavePetBattleQueue => PacketClient::LeavePetBattleQueue,
            OpcodeClient::LfgListApplyToGroup => PacketClient::LfgListApplyToGroup,
            OpcodeClient::LfgListCancelApplication => PacketClient::LfgListCancelApplication,
            OpcodeClient::LfgListDeclineApplicant => PacketClient::LfgListDeclineApplicant,
            OpcodeClient::LfgListGetStatus => PacketClient::LfgListGetStatus,
            OpcodeClient::LfgListInviteApplicant => PacketClient::LfgListInviteApplicant,
            OpcodeClient::LfgListInviteResponse => PacketClient::LfgListInviteResponse,
            OpcodeClient::LfgListJoin => PacketClient::LfgListJoin,
            OpcodeClient::LfgListLeave => PacketClient::LfgListLeave,
            OpcodeClient::LfgListSearch => PacketClient::LfgListSearch,
            OpcodeClient::LfgListUpdateRequest => PacketClient::LfgListUpdateRequest,
            OpcodeClient::ListInventory => PacketClient::ListInventory,
            OpcodeClient::LiveRegionAccountRestore => PacketClient::LiveRegionAccountRestore,
            OpcodeClient::LiveRegionCharacterCopy => PacketClient::LiveRegionCharacterCopy,
            OpcodeClient::LiveRegionGetAccountCharacterList => {
                PacketClient::LiveRegionGetAccountCharacterList
            }
            OpcodeClient::LiveRegionKeyBindingsCopy => PacketClient::LiveRegionKeyBindingsCopy,
            OpcodeClient::LoadingScreenNotify => PacketClient::LoadingScreenNotify,
            OpcodeClient::LoadSelectedTrophy => PacketClient::LoadSelectedTrophy,
            OpcodeClient::LogoutCancel => PacketClient::LogoutCancel,
            OpcodeClient::LogoutInstant => PacketClient::LogoutInstant,
            OpcodeClient::LogoutRequest => PacketClient::LogoutRequest,
            OpcodeClient::LogDisconnect => PacketClient::LogDisconnect,
            OpcodeClient::LogStreamingError => PacketClient::LogStreamingError,
            OpcodeClient::LootItem => PacketClient::LootItem,
            OpcodeClient::LootMoney => PacketClient::LootMoney,
            OpcodeClient::LootRelease => PacketClient::LootRelease,
            OpcodeClient::LootRoll => PacketClient::LootRoll,
            OpcodeClient::LootUnit => PacketClient::LootUnit,
            OpcodeClient::LowLevelRaid1 => PacketClient::LowLevelRaid1,
            OpcodeClient::LowLevelRaid2 => PacketClient::LowLevelRaid2,
            OpcodeClient::MailCreateTextItem => PacketClient::MailCreateTextItem,
            OpcodeClient::MailDelete => PacketClient::MailDelete,
            OpcodeClient::MailGetList => PacketClient::MailGetList,
            OpcodeClient::MailMarkAsRead => PacketClient::MailMarkAsRead,
            OpcodeClient::MailReturnToSender => PacketClient::MailReturnToSender,
            OpcodeClient::MailTakeItem => PacketClient::MailTakeItem,
            OpcodeClient::MailTakeMoney => PacketClient::MailTakeMoney,
            OpcodeClient::MakeContitionalAppearancePermanent => {
                PacketClient::MakeContitionalAppearancePermanent
            }
            OpcodeClient::MasterLootItem => PacketClient::MasterLootItem,
            OpcodeClient::MergeGuildBankItemWithGuildBankItem => {
                PacketClient::MergeGuildBankItemWithGuildBankItem
            }
            OpcodeClient::MergeGuildBankItemWithItem => PacketClient::MergeGuildBankItemWithItem,
            OpcodeClient::MergeItemWithGuildBankItem => PacketClient::MergeItemWithGuildBankItem,
            OpcodeClient::MinimapPing => PacketClient::MinimapPing,
            OpcodeClient::MissileTrajectoryCollision => PacketClient::MissileTrajectoryCollision,
            OpcodeClient::MountClearFanfare => PacketClient::MountClearFanfare,
            OpcodeClient::MountSetFavorite => PacketClient::MountSetFavorite,
            OpcodeClient::MountSpecialAnim => PacketClient::MountSpecialAnim,
            OpcodeClient::MoveApplyInertiaAck => PacketClient::MoveApplyInertiaAck,
            OpcodeClient::MoveApplyMovementForceAck => PacketClient::MoveApplyMovementForceAck,
            OpcodeClient::MoveChangeTransport => PacketClient::MoveChangeTransport,
            OpcodeClient::MoveChangeVehicleSeats => PacketClient::MoveChangeVehicleSeats,
            OpcodeClient::MoveCollisionDisableAck => PacketClient::MoveCollisionDisableAck,
            OpcodeClient::MoveCollisionEnableAck => PacketClient::MoveCollisionEnableAck,
            OpcodeClient::MoveDismissVehicle => PacketClient::MoveDismissVehicle,
            OpcodeClient::MoveDoubleJump => PacketClient::MoveDoubleJump,
            OpcodeClient::MoveEnableDoubleJumpAck => PacketClient::MoveEnableDoubleJumpAck,
            OpcodeClient::MoveEnableSwimToFlyTransAck => PacketClient::MoveEnableSwimToFlyTransAck,
            OpcodeClient::MoveFallLand => PacketClient::MoveFallLand,
            OpcodeClient::MoveFallReset => PacketClient::MoveFallReset,
            OpcodeClient::MoveFeatherFallAck => PacketClient::MoveFeatherFallAck,
            OpcodeClient::MoveForceFlightBackSpeedChangeAck => {
                PacketClient::MoveForceFlightBackSpeedChangeAck
            }
            OpcodeClient::MoveForceFlightSpeedChangeAck => {
                PacketClient::MoveForceFlightSpeedChangeAck
            }
            OpcodeClient::MoveForcePitchRateChangeAck => PacketClient::MoveForcePitchRateChangeAck,
            OpcodeClient::MoveForceRootAck => PacketClient::MoveForceRootAck,
            OpcodeClient::MoveForceRunBackSpeedChangeAck => {
                PacketClient::MoveForceRunBackSpeedChangeAck
            }
            OpcodeClient::MoveForceRunSpeedChangeAck => PacketClient::MoveForceRunSpeedChangeAck,
            OpcodeClient::MoveForceSwimBackSpeedChangeAck => {
                PacketClient::MoveForceSwimBackSpeedChangeAck
            }
            OpcodeClient::MoveForceSwimSpeedChangeAck => PacketClient::MoveForceSwimSpeedChangeAck,
            OpcodeClient::MoveForceTurnRateChangeAck => PacketClient::MoveForceTurnRateChangeAck,
            OpcodeClient::MoveForceUnrootAck => PacketClient::MoveForceUnrootAck,
            OpcodeClient::MoveForceWalkSpeedChangeAck => PacketClient::MoveForceWalkSpeedChangeAck,
            OpcodeClient::MoveGravityDisableAck => PacketClient::MoveGravityDisableAck,
            OpcodeClient::MoveGravityEnableAck => PacketClient::MoveGravityEnableAck,
            OpcodeClient::MoveGuildBankItem => PacketClient::MoveGuildBankItem,
            OpcodeClient::MoveHeartbeat => PacketClient::MoveHeartbeat,
            OpcodeClient::MoveHoverAck => PacketClient::MoveHoverAck,
            OpcodeClient::MoveInertiaDisableAck => PacketClient::MoveInertiaDisableAck,
            OpcodeClient::MoveInertiaEnableAck => PacketClient::MoveInertiaEnableAck,
            OpcodeClient::MoveInitActiveMoverComplete => PacketClient::MoveInitActiveMoverComplete,
            OpcodeClient::MoveJump => PacketClient::MoveJump,
            OpcodeClient::MoveKnockBackAck => PacketClient::MoveKnockBackAck,
            OpcodeClient::MoveRemoveInertiaAck => PacketClient::MoveRemoveInertiaAck,
            OpcodeClient::MoveRemoveMovementForces => PacketClient::MoveRemoveMovementForces,
            OpcodeClient::MoveRemoveMovementForceAck => PacketClient::MoveRemoveMovementForceAck,
            OpcodeClient::MoveSeamlessTransferComplete => {
                PacketClient::MoveSeamlessTransferComplete
            }
            OpcodeClient::MoveSetCanFlyAck => PacketClient::MoveSetCanFlyAck,
            OpcodeClient::MoveSetCanTurnWhileFallingAck => {
                PacketClient::MoveSetCanTurnWhileFallingAck
            }
            OpcodeClient::MoveSetCollisionHeightAck => PacketClient::MoveSetCollisionHeightAck,
            OpcodeClient::MoveSetFacing => PacketClient::MoveSetFacing,
            OpcodeClient::MoveSetFacingHeartbeat => PacketClient::MoveSetFacingHeartbeat,
            OpcodeClient::MoveSetFly => PacketClient::MoveSetFly,
            OpcodeClient::MoveSetIgnoreMovementForcesAck => {
                PacketClient::MoveSetIgnoreMovementForcesAck
            }
            OpcodeClient::MoveSetModMovementForceMagnitudeAck => {
                PacketClient::MoveSetModMovementForceMagnitudeAck
            }
            OpcodeClient::MoveSetPitch => PacketClient::MoveSetPitch,
            OpcodeClient::MoveSetRunMode => PacketClient::MoveSetRunMode,
            OpcodeClient::MoveSetTurnRateCheat => PacketClient::MoveSetTurnRateCheat,
            OpcodeClient::MoveSetVehicleRecIdAck => PacketClient::MoveSetVehicleRecIdAck,
            OpcodeClient::MoveSetWalkMode => PacketClient::MoveSetWalkMode,
            OpcodeClient::MoveSplineDone => PacketClient::MoveSplineDone,
            OpcodeClient::MoveStartAscend => PacketClient::MoveStartAscend,
            OpcodeClient::MoveStartBackward => PacketClient::MoveStartBackward,
            OpcodeClient::MoveStartDescend => PacketClient::MoveStartDescend,
            OpcodeClient::MoveStartForward => PacketClient::MoveStartForward,
            OpcodeClient::MoveStartPitchDown => PacketClient::MoveStartPitchDown,
            OpcodeClient::MoveStartPitchUp => PacketClient::MoveStartPitchUp,
            OpcodeClient::MoveStartStrafeLeft => PacketClient::MoveStartStrafeLeft,
            OpcodeClient::MoveStartStrafeRight => PacketClient::MoveStartStrafeRight,
            OpcodeClient::MoveStartSwim => PacketClient::MoveStartSwim,
            OpcodeClient::MoveStartTurnLeft => PacketClient::MoveStartTurnLeft,
            OpcodeClient::MoveStartTurnRight => PacketClient::MoveStartTurnRight,
            OpcodeClient::MoveStop => PacketClient::MoveStop,
            OpcodeClient::MoveStopAscend => PacketClient::MoveStopAscend,
            OpcodeClient::MoveStopPitch => PacketClient::MoveStopPitch,
            OpcodeClient::MoveStopStrafe => PacketClient::MoveStopStrafe,
            OpcodeClient::MoveStopSwim => PacketClient::MoveStopSwim,
            OpcodeClient::MoveStopTurn => PacketClient::MoveStopTurn,
            OpcodeClient::MoveTeleportAck => PacketClient::MoveTeleportAck,
            OpcodeClient::MoveTimeSkipped => PacketClient::MoveTimeSkipped,
            OpcodeClient::MoveUpdateFallSpeed => PacketClient::MoveUpdateFallSpeed,
            OpcodeClient::MoveWaterWalkAck => PacketClient::MoveWaterWalkAck,
            OpcodeClient::MythicPlusRequestMapStats => PacketClient::MythicPlusRequestMapStats,
            OpcodeClient::NeutralPlayerSelectFaction => PacketClient::NeutralPlayerSelectFaction,
            OpcodeClient::NextCinematicCamera => PacketClient::NextCinematicCamera,
            OpcodeClient::ObjectUpdateFailed => PacketClient::ObjectUpdateFailed,
            OpcodeClient::ObjectUpdateRescued => PacketClient::ObjectUpdateRescued,
            OpcodeClient::OfferPetition => PacketClient::OfferPetition,
            OpcodeClient::OpeningCinematic => PacketClient::OpeningCinematic,
            OpcodeClient::OpenItem => PacketClient::OpenItem,
            OpcodeClient::OpenMissionNpc => PacketClient::OpenMissionNpc,
            OpcodeClient::OpenShipmentNpc => PacketClient::OpenShipmentNpc,
            OpcodeClient::OpenTradeskillNpc => PacketClient::OpenTradeskillNpc,
            OpcodeClient::OptOutOfLoot => PacketClient::OptOutOfLoot,
            OpcodeClient::OverrideScreenFlash => PacketClient::OverrideScreenFlash,
            OpcodeClient::PartyInvite => PacketClient::PartyInvite,
            OpcodeClient::PartyInviteResponse => PacketClient::PartyInviteResponse,
            OpcodeClient::PartyUninvite => PacketClient::PartyUninvite,
            OpcodeClient::PerformItemInteraction => PacketClient::PerformItemInteraction,
            OpcodeClient::PetitionBuy => PacketClient::PetitionBuy,
            OpcodeClient::PetitionRenameGuild => PacketClient::PetitionRenameGuild,
            OpcodeClient::PetitionShowList => PacketClient::PetitionShowList,
            OpcodeClient::PetitionShowSignatures => PacketClient::PetitionShowSignatures,
            OpcodeClient::PetAbandon => PacketClient::PetAbandon,
            OpcodeClient::PetAction => PacketClient::PetAction,
            OpcodeClient::PetBattleFinalNotify => PacketClient::PetBattleFinalNotify,
            OpcodeClient::PetBattleInput => PacketClient::PetBattleInput,
            OpcodeClient::PetBattleQueueProposeMatchResult => {
                PacketClient::PetBattleQueueProposeMatchResult
            }
            OpcodeClient::PetBattleQuitNotify => PacketClient::PetBattleQuitNotify,
            OpcodeClient::PetBattleReplaceFrontPet => PacketClient::PetBattleReplaceFrontPet,
            OpcodeClient::PetBattleRequestPvp => PacketClient::PetBattleRequestPvp,
            OpcodeClient::PetBattleRequestUpdate => PacketClient::PetBattleRequestUpdate,
            OpcodeClient::PetBattleRequestWild => PacketClient::PetBattleRequestWild,
            OpcodeClient::PetBattleScriptErrorNotify => PacketClient::PetBattleScriptErrorNotify,
            OpcodeClient::PetBattleWildLocationFail => PacketClient::PetBattleWildLocationFail,
            OpcodeClient::PetCancelAura => PacketClient::PetCancelAura,
            OpcodeClient::PetCastSpell => PacketClient::PetCastSpell,
            OpcodeClient::PetRename => PacketClient::PetRename,
            OpcodeClient::PetSetAction => PacketClient::PetSetAction,
            OpcodeClient::PetSpellAutocast => PacketClient::PetSpellAutocast,
            OpcodeClient::PetStopAttack => PacketClient::PetStopAttack,
            OpcodeClient::Ping => PacketClient::Ping,
            OpcodeClient::PlayerLogin => PacketClient::PlayerLogin,
            OpcodeClient::PushQuestToParty => PacketClient::PushQuestToParty,
            OpcodeClient::PvpLogData => PacketClient::PvpLogData,
            OpcodeClient::QueryBattlePetName => PacketClient::QueryBattlePetName,
            OpcodeClient::QueryCorpseLocationFromClient => {
                PacketClient::QueryCorpseLocationFromClient
            }
            OpcodeClient::QueryCorpseTransport => PacketClient::QueryCorpseTransport,
            OpcodeClient::QueryCountdownTimer => PacketClient::QueryCountdownTimer,
            OpcodeClient::QueryCreature => PacketClient::QueryCreature,
            OpcodeClient::QueryGameObject => PacketClient::QueryGameObject,
            OpcodeClient::QueryGarrisonPetName => PacketClient::QueryGarrisonPetName,
            OpcodeClient::QueryGuildInfo => PacketClient::QueryGuildInfo,
            OpcodeClient::QueryInspectAchievements => PacketClient::QueryInspectAchievements,
            OpcodeClient::QueryNextMailTime => PacketClient::QueryNextMailTime,
            OpcodeClient::QueryNpcText => PacketClient::QueryNpcText,
            OpcodeClient::QueryPageText => PacketClient::QueryPageText,
            OpcodeClient::QueryPetition => PacketClient::QueryPetition,
            OpcodeClient::QueryPetName => PacketClient::QueryPetName,
            OpcodeClient::QueryPlayerNames => PacketClient::QueryPlayerNames,
            OpcodeClient::QueryPlayerNamesForCommunity => {
                PacketClient::QueryPlayerNamesForCommunity
            }
            OpcodeClient::QueryPlayerNameByCommunityId => {
                PacketClient::QueryPlayerNameByCommunityId
            }
            OpcodeClient::QueryQuestCompletionNpcs => PacketClient::QueryQuestCompletionNpcs,
            OpcodeClient::QueryQuestInfo => PacketClient::QueryQuestInfo,
            OpcodeClient::QueryRealmName => PacketClient::QueryRealmName,
            OpcodeClient::QueryScenarioPoi => PacketClient::QueryScenarioPoi,
            OpcodeClient::QueryTime => PacketClient::QueryTime,
            OpcodeClient::QueryTreasurePicker => PacketClient::QueryTreasurePicker,
            OpcodeClient::QueryVoidStorage => PacketClient::QueryVoidStorage,
            OpcodeClient::QuestConfirmAccept => PacketClient::QuestConfirmAccept,
            OpcodeClient::QuestGiverAcceptQuest => PacketClient::QuestGiverAcceptQuest,
            OpcodeClient::QuestGiverChooseReward => PacketClient::QuestGiverChooseReward,
            OpcodeClient::QuestGiverCloseQuest => PacketClient::QuestGiverCloseQuest,
            OpcodeClient::QuestGiverCompleteQuest => PacketClient::QuestGiverCompleteQuest,
            OpcodeClient::QuestGiverHello => PacketClient::QuestGiverHello,
            OpcodeClient::QuestGiverQueryQuest => PacketClient::QuestGiverQueryQuest,
            OpcodeClient::QuestGiverRequestReward => PacketClient::QuestGiverRequestReward,
            OpcodeClient::QuestGiverStatusMultipleQuery => {
                PacketClient::QuestGiverStatusMultipleQuery
            }
            OpcodeClient::QuestGiverStatusQuery => PacketClient::QuestGiverStatusQuery,
            OpcodeClient::QuestLogRemoveQuest => PacketClient::QuestLogRemoveQuest,
            OpcodeClient::QuestPoiQuery => PacketClient::QuestPoiQuery,
            OpcodeClient::QuestPushResult => PacketClient::QuestPushResult,
            OpcodeClient::QuestSessionBeginResponse => PacketClient::QuestSessionBeginResponse,
            OpcodeClient::QuestSessionRequestStart => PacketClient::QuestSessionRequestStart,
            OpcodeClient::QuestSessionRequestStop => PacketClient::QuestSessionRequestStop,
            OpcodeClient::QueuedMessagesEnd => PacketClient::QueuedMessagesEnd,
            OpcodeClient::QuickJoinAutoAcceptRequests => PacketClient::QuickJoinAutoAcceptRequests,
            OpcodeClient::QuickJoinRequestInvite => PacketClient::QuickJoinRequestInvite,
            OpcodeClient::QuickJoinRequestInviteWithConfirmation => {
                PacketClient::QuickJoinRequestInviteWithConfirmation
            }
            OpcodeClient::QuickJoinRespondToInvite => PacketClient::QuickJoinRespondToInvite,
            OpcodeClient::QuickJoinSignalToastDisplayed => {
                PacketClient::QuickJoinSignalToastDisplayed
            }
            OpcodeClient::RafClaimActivityReward => PacketClient::RafClaimActivityReward,
            OpcodeClient::RafClaimNextReward => PacketClient::RafClaimNextReward,
            OpcodeClient::RafGenerateRecruitmentLink => PacketClient::RafGenerateRecruitmentLink,
            OpcodeClient::RafUpdateRecruitmentInfo => PacketClient::RafUpdateRecruitmentInfo,
            OpcodeClient::RandomRoll => PacketClient::RandomRoll,
            OpcodeClient::ReadyCheckResponse => PacketClient::ReadyCheckResponse,
            OpcodeClient::ReadItem => PacketClient::ReadItem,
            OpcodeClient::ReclaimCorpse => PacketClient::ReclaimCorpse,
            OpcodeClient::RemoveNewItem => PacketClient::RemoveNewItem,
            OpcodeClient::RemoveRafRecruit => PacketClient::RemoveRafRecruit,
            OpcodeClient::ReorderCharacters => PacketClient::ReorderCharacters,
            OpcodeClient::RepairItem => PacketClient::RepairItem,
            OpcodeClient::ReplaceTrophy => PacketClient::ReplaceTrophy,
            OpcodeClient::RepopRequest => PacketClient::RepopRequest,
            OpcodeClient::ReportClientVariables => PacketClient::ReportClientVariables,
            OpcodeClient::ReportEnabledAddons => PacketClient::ReportEnabledAddons,
            OpcodeClient::ReportKeybindingExecutionCounts => {
                PacketClient::ReportKeybindingExecutionCounts
            }
            OpcodeClient::ReportPvpPlayerAfk => PacketClient::ReportPvpPlayerAfk,
            OpcodeClient::ReportServerLag => PacketClient::ReportServerLag,
            OpcodeClient::ReportStuckInCombat => PacketClient::ReportStuckInCombat,
            OpcodeClient::RequestAccountData => PacketClient::RequestAccountData,
            OpcodeClient::RequestAreaPoiUpdate => PacketClient::RequestAreaPoiUpdate,
            OpcodeClient::RequestBattlefieldStatus => PacketClient::RequestBattlefieldStatus,
            OpcodeClient::RequestCategoryCooldowns => PacketClient::RequestCategoryCooldowns,
            OpcodeClient::RequestCemeteryList => PacketClient::RequestCemeteryList,
            OpcodeClient::RequestCharacterGuildFollowInfo => {
                PacketClient::RequestCharacterGuildFollowInfo
            }
            OpcodeClient::RequestConquestFormulaConstants => {
                PacketClient::RequestConquestFormulaConstants
            }
            OpcodeClient::RequestCovenantCallings => PacketClient::RequestCovenantCallings,
            OpcodeClient::RequestCrowdControlSpell => PacketClient::RequestCrowdControlSpell,
            OpcodeClient::RequestForcedReactions => PacketClient::RequestForcedReactions,
            OpcodeClient::RequestGarrisonTalentWorldQuestUnlocks => {
                PacketClient::RequestGarrisonTalentWorldQuestUnlocks
            }
            OpcodeClient::RequestGuildPartyState => PacketClient::RequestGuildPartyState,
            OpcodeClient::RequestGuildRewardsList => PacketClient::RequestGuildRewardsList,
            OpcodeClient::RequestLatestSplashScreen => PacketClient::RequestLatestSplashScreen,
            OpcodeClient::RequestLfgListBlacklist => PacketClient::RequestLfgListBlacklist,
            OpcodeClient::RequestMythicPlusAffixes => PacketClient::RequestMythicPlusAffixes,
            OpcodeClient::RequestMythicPlusSeasonData => PacketClient::RequestMythicPlusSeasonData,
            OpcodeClient::RequestPartyJoinUpdates => PacketClient::RequestPartyJoinUpdates,
            OpcodeClient::RequestPartyMemberStats => PacketClient::RequestPartyMemberStats,
            OpcodeClient::RequestPetInfo => PacketClient::RequestPetInfo,
            OpcodeClient::RequestPlayedTime => PacketClient::RequestPlayedTime,
            OpcodeClient::RequestPvpRewards => PacketClient::RequestPvpRewards,
            OpcodeClient::RequestRaidInfo => PacketClient::RequestRaidInfo,
            OpcodeClient::RequestRatedPvpInfo => PacketClient::RequestRatedPvpInfo,
            OpcodeClient::RequestRealmGuildMasterInfo => PacketClient::RequestRealmGuildMasterInfo,
            OpcodeClient::RequestResearchHistory => PacketClient::RequestResearchHistory,
            OpcodeClient::RequestScheduledPvpInfo => PacketClient::RequestScheduledPvpInfo,
            OpcodeClient::RequestStabledPets => PacketClient::RequestStabledPets,
            OpcodeClient::RequestVehicleExit => PacketClient::RequestVehicleExit,
            OpcodeClient::RequestVehicleNextSeat => PacketClient::RequestVehicleNextSeat,
            OpcodeClient::RequestVehiclePrevSeat => PacketClient::RequestVehiclePrevSeat,
            OpcodeClient::RequestVehicleSwitchSeat => PacketClient::RequestVehicleSwitchSeat,
            OpcodeClient::RequestWeeklyRewards => PacketClient::RequestWeeklyRewards,
            OpcodeClient::RequestWorldQuestUpdate => PacketClient::RequestWorldQuestUpdate,
            OpcodeClient::ResetChallengeMode => PacketClient::ResetChallengeMode,
            OpcodeClient::ResetChallengeModeCheat => PacketClient::ResetChallengeModeCheat,
            OpcodeClient::ResetInstances => PacketClient::ResetInstances,
            OpcodeClient::ResurrectResponse => PacketClient::ResurrectResponse,
            OpcodeClient::RevertMonumentAppearance => PacketClient::RevertMonumentAppearance,
            OpcodeClient::RideVehicleInteract => PacketClient::RideVehicleInteract,
            OpcodeClient::SaveCufProfiles => PacketClient::SaveCufProfiles,
            OpcodeClient::SaveEquipmentSet => PacketClient::SaveEquipmentSet,
            OpcodeClient::SaveGuildEmblem => PacketClient::SaveGuildEmblem,
            OpcodeClient::ScenePlaybackCanceled => PacketClient::ScenePlaybackCanceled,
            OpcodeClient::ScenePlaybackComplete => PacketClient::ScenePlaybackComplete,
            OpcodeClient::SceneTriggerEvent => PacketClient::SceneTriggerEvent,
            OpcodeClient::SelfRes => PacketClient::SelfRes,
            OpcodeClient::SellItem => PacketClient::SellItem,
            OpcodeClient::SendCharacterClubInvitation => PacketClient::SendCharacterClubInvitation,
            OpcodeClient::SendContactList => PacketClient::SendContactList,
            OpcodeClient::SendMail => PacketClient::SendMail,
            OpcodeClient::SendTextEmote => PacketClient::SendTextEmote,
            OpcodeClient::ServerTimeOffsetRequest => PacketClient::ServerTimeOffsetRequest,
            OpcodeClient::SetAchievementsHidden => PacketClient::SetAchievementsHidden,
            OpcodeClient::SetActionBarToggles => PacketClient::SetActionBarToggles,
            OpcodeClient::SetActionButton => PacketClient::SetActionButton,
            OpcodeClient::SetActiveMover => PacketClient::SetActiveMover,
            OpcodeClient::SetAdvancedCombatLogging => PacketClient::SetAdvancedCombatLogging,
            OpcodeClient::SetAssistantLeader => PacketClient::SetAssistantLeader,
            OpcodeClient::SetBackpackAutosortDisabled => PacketClient::SetBackpackAutosortDisabled,
            OpcodeClient::SetBankAutosortDisabled => PacketClient::SetBankAutosortDisabled,
            OpcodeClient::SetChatDisabled => PacketClient::SetChatDisabled,
            OpcodeClient::SetContactNotes => PacketClient::SetContactNotes,
            OpcodeClient::SetCurrencyFlags => PacketClient::SetCurrencyFlags,
            OpcodeClient::SetDifficultyId => PacketClient::SetDifficultyId,
            OpcodeClient::SetDungeonDifficulty => PacketClient::SetDungeonDifficulty,
            OpcodeClient::SetEveryoneIsAssistant => PacketClient::SetEveryoneIsAssistant,
            OpcodeClient::SetFactionAtWar => PacketClient::SetFactionAtWar,
            OpcodeClient::SetFactionInactive => PacketClient::SetFactionInactive,
            OpcodeClient::SetFactionNotAtWar => PacketClient::SetFactionNotAtWar,
            OpcodeClient::SetGameEventDebugViewState => PacketClient::SetGameEventDebugViewState,
            OpcodeClient::SetInsertItemsLeftToRight => PacketClient::SetInsertItemsLeftToRight,
            OpcodeClient::SetLootMethod => PacketClient::SetLootMethod,
            OpcodeClient::SetLootSpecialization => PacketClient::SetLootSpecialization,
            OpcodeClient::SetPartyAssignment => PacketClient::SetPartyAssignment,
            OpcodeClient::SetPartyLeader => PacketClient::SetPartyLeader,
            OpcodeClient::SetPetSlot => PacketClient::SetPetSlot,
            OpcodeClient::SetPlayerDeclinedNames => PacketClient::SetPlayerDeclinedNames,
            OpcodeClient::SetPreferredCemetery => PacketClient::SetPreferredCemetery,
            OpcodeClient::SetPvp => PacketClient::SetPvp,
            OpcodeClient::SetRaidDifficulty => PacketClient::SetRaidDifficulty,
            OpcodeClient::SetRole => PacketClient::SetRole,
            OpcodeClient::SetSavedInstanceExtend => PacketClient::SetSavedInstanceExtend,
            OpcodeClient::SetSelection => PacketClient::SetSelection,
            OpcodeClient::SetSheathed => PacketClient::SetSheathed,
            OpcodeClient::SetSortBagsRightToLeft => PacketClient::SetSortBagsRightToLeft,
            OpcodeClient::SetTaxiBenchmarkMode => PacketClient::SetTaxiBenchmarkMode,
            OpcodeClient::SetTitle => PacketClient::SetTitle,
            OpcodeClient::SetTradeCurrency => PacketClient::SetTradeCurrency,
            OpcodeClient::SetTradeGold => PacketClient::SetTradeGold,
            OpcodeClient::SetTradeItem => PacketClient::SetTradeItem,
            OpcodeClient::SetUsingPartyGarrison => PacketClient::SetUsingPartyGarrison,
            OpcodeClient::SetWarMode => PacketClient::SetWarMode,
            OpcodeClient::SetWatchedFaction => PacketClient::SetWatchedFaction,
            OpcodeClient::ShowTradeSkill => PacketClient::ShowTradeSkill,
            OpcodeClient::SignPetition => PacketClient::SignPetition,
            OpcodeClient::SilencePartyTalker => PacketClient::SilencePartyTalker,
            OpcodeClient::SocketGems => PacketClient::SocketGems,
            OpcodeClient::SortBags => PacketClient::SortBags,
            OpcodeClient::SortBankBags => PacketClient::SortBankBags,
            OpcodeClient::SortReagentBankBags => PacketClient::SortReagentBankBags,
            OpcodeClient::SpellClick => PacketClient::SpellClick,
            OpcodeClient::SpiritHealerActivate => PacketClient::SpiritHealerActivate,
            OpcodeClient::SplitGuildBankItem => PacketClient::SplitGuildBankItem,
            OpcodeClient::SplitGuildBankItemToInventory => {
                PacketClient::SplitGuildBankItemToInventory
            }
            OpcodeClient::SplitItem => PacketClient::SplitItem,
            OpcodeClient::SplitItemToGuildBank => PacketClient::SplitItemToGuildBank,
            OpcodeClient::StandStateChange => PacketClient::StandStateChange,
            OpcodeClient::StartChallengeMode => PacketClient::StartChallengeMode,
            OpcodeClient::StartSpectatorWarGame => PacketClient::StartSpectatorWarGame,
            OpcodeClient::StartWarGame => PacketClient::StartWarGame,
            OpcodeClient::StoreGuildBankItem => PacketClient::StoreGuildBankItem,
            OpcodeClient::SubmitUserFeedback => PacketClient::SubmitUserFeedback,
            OpcodeClient::SubscriptionInterstitialResponse => {
                PacketClient::SubscriptionInterstitialResponse
            }
            OpcodeClient::SummonResponse => PacketClient::SummonResponse,
            OpcodeClient::SupportTicketSubmitComplaint => {
                PacketClient::SupportTicketSubmitComplaint
            }
            OpcodeClient::SurrenderArena => PacketClient::SurrenderArena,
            OpcodeClient::SuspendCommsAck => PacketClient::SuspendCommsAck,
            OpcodeClient::SuspendTokenResponse => PacketClient::SuspendTokenResponse,
            OpcodeClient::SwapGuildBankItemWithGuildBankItem => {
                PacketClient::SwapGuildBankItemWithGuildBankItem
            }
            OpcodeClient::SwapInvItem => PacketClient::SwapInvItem,
            OpcodeClient::SwapItem => PacketClient::SwapItem,
            OpcodeClient::SwapItemWithGuildBankItem => PacketClient::SwapItemWithGuildBankItem,
            OpcodeClient::SwapSubGroups => PacketClient::SwapSubGroups,
            OpcodeClient::SwapVoidItem => PacketClient::SwapVoidItem,
            OpcodeClient::TabardVendorActivate => PacketClient::TabardVendorActivate,
            OpcodeClient::TalkToGossip => PacketClient::TalkToGossip,
            OpcodeClient::TaxiNodeStatusQuery => PacketClient::TaxiNodeStatusQuery,
            OpcodeClient::TaxiQueryAvailableNodes => PacketClient::TaxiQueryAvailableNodes,
            OpcodeClient::TaxiRequestEarlyLanding => PacketClient::TaxiRequestEarlyLanding,
            OpcodeClient::TimeAdjustmentResponse => PacketClient::TimeAdjustmentResponse,
            OpcodeClient::TimeSyncResponse => PacketClient::TimeSyncResponse,
            OpcodeClient::TimeSyncResponseDropped => PacketClient::TimeSyncResponseDropped,
            OpcodeClient::TimeSyncResponseFailed => PacketClient::TimeSyncResponseFailed,
            OpcodeClient::ToggleDifficulty => PacketClient::ToggleDifficulty,
            OpcodeClient::TogglePvp => PacketClient::TogglePvp,
            OpcodeClient::TotemDestroyed => PacketClient::TotemDestroyed,
            OpcodeClient::ToyClearFanfare => PacketClient::ToyClearFanfare,
            OpcodeClient::TradeSkillSetFavorite => PacketClient::TradeSkillSetFavorite,
            OpcodeClient::TrainerBuySpell => PacketClient::TrainerBuySpell,
            OpcodeClient::TrainerList => PacketClient::TrainerList,
            OpcodeClient::TransmogrifyItems => PacketClient::TransmogrifyItems,
            OpcodeClient::TurnInPetition => PacketClient::TurnInPetition,
            OpcodeClient::Tutorial => PacketClient::Tutorial,
            OpcodeClient::TwitterCheckStatus => PacketClient::TwitterCheckStatus,
            OpcodeClient::TwitterConnect => PacketClient::TwitterConnect,
            OpcodeClient::TwitterDisconnect => PacketClient::TwitterDisconnect,
            OpcodeClient::UiMapQuestLinesRequest => PacketClient::UiMapQuestLinesRequest,
            OpcodeClient::UnacceptTrade => PacketClient::UnacceptTrade,
            OpcodeClient::UndeleteCharacter => PacketClient::UndeleteCharacter,
            OpcodeClient::UnlearnSkill => PacketClient::UnlearnSkill,
            OpcodeClient::UnlearnSpecialization => PacketClient::UnlearnSpecialization,
            OpcodeClient::UnlockVoidStorage => PacketClient::UnlockVoidStorage,
            OpcodeClient::UpdateAccountData => PacketClient::UpdateAccountData,
            OpcodeClient::UpdateAreaTriggerVisual => PacketClient::UpdateAreaTriggerVisual,
            OpcodeClient::UpdateClientSettings => PacketClient::UpdateClientSettings,
            OpcodeClient::UpdateMissileTrajectory => PacketClient::UpdateMissileTrajectory,
            OpcodeClient::UpdateRaidTarget => PacketClient::UpdateRaidTarget,
            OpcodeClient::UpdateSpellVisual => PacketClient::UpdateSpellVisual,
            OpcodeClient::UpdateVasPurchaseStates => PacketClient::UpdateVasPurchaseStates,
            OpcodeClient::UpgradeGarrison => PacketClient::UpgradeGarrison,
            OpcodeClient::UpgradeRuneforgeLegendary => PacketClient::UpgradeRuneforgeLegendary,
            OpcodeClient::UsedFollow => PacketClient::UsedFollow,
            OpcodeClient::UseCritterItem => PacketClient::UseCritterItem,
            OpcodeClient::UseEquipmentSet => PacketClient::UseEquipmentSet,
            OpcodeClient::UseItem => PacketClient::UseItem,
            OpcodeClient::UseToy => PacketClient::UseToy,
            OpcodeClient::VasCheckTransferOk => PacketClient::VasCheckTransferOk,
            OpcodeClient::VasGetQueueMinutes => PacketClient::VasGetQueueMinutes,
            OpcodeClient::VasGetServiceStatus => PacketClient::VasGetServiceStatus,
            OpcodeClient::ViolenceLevel => PacketClient::ViolenceLevel,
            OpcodeClient::VoiceChannelSttTokenRequest => PacketClient::VoiceChannelSttTokenRequest,
            OpcodeClient::VoiceChatJoinChannel => PacketClient::VoiceChatJoinChannel,
            OpcodeClient::VoiceChatLogin => PacketClient::VoiceChatLogin,
            OpcodeClient::VoidStorageTransfer => PacketClient::VoidStorageTransfer,
            OpcodeClient::Warden3Data => PacketClient::Warden3Data,
            OpcodeClient::Who => PacketClient::Who,
            OpcodeClient::WhoIs => PacketClient::WhoIs,
            OpcodeClient::WorldPortResponse => PacketClient::WorldPortResponse,
            OpcodeClient::WrapItem => PacketClient::WrapItem,
        }
    }
}
//
// impl From<OpcodeServer> for PacketServer {
//     fn from(opcode: OpcodeServer) -> Self {
//         match opcode {
//             OpcodeServer::AbortNewWorld => PacketServer::AbortNewWorld,
//             OpcodeServer::AccountCosmeticAdded => PacketServer::AccountCosmeticAdded,
//             OpcodeServer::AccountCriteriaUpdate => PacketServer::AccountCriteriaUpdate,
//             OpcodeServer::AccountDataTimes => PacketServer::AccountDataTimes,
//             OpcodeServer::AccountMountUpdate => PacketServer::AccountMountUpdate,
//             OpcodeServer::AccountNotificationsResponse => {
//                 PacketServer::AccountNotificationsResponse
//             }
//             OpcodeServer::AccountToyUpdate => PacketServer::AccountToyUpdate,
//             OpcodeServer::AccountTransmogSetFavoritesUpdate => {
//                 PacketServer::AccountTransmogSetFavoritesUpdate
//             }
//             OpcodeServer::AccountTransmogUpdate => PacketServer::AccountTransmogUpdate,
//             OpcodeServer::AchievementDeleted => PacketServer::AchievementDeleted,
//             OpcodeServer::AchievementEarned => PacketServer::AchievementEarned,
//             OpcodeServer::ActivateEssenceFailed => PacketServer::ActivateEssenceFailed,
//             OpcodeServer::ActivateSoulbindFailed => PacketServer::ActivateSoulbindFailed,
//             OpcodeServer::ActivateTaxiReply => PacketServer::ActivateTaxiReply,
//             OpcodeServer::ActiveGlyphs => PacketServer::ActiveGlyphs,
//             OpcodeServer::AddonListRequest => PacketServer::AddonListRequest,
//             OpcodeServer::AddBattlenetFriendResponse => PacketServer::AddBattlenetFriendResponse,
//             OpcodeServer::AddItemPassive => PacketServer::AddItemPassive,
//             OpcodeServer::AddLossOfControl => PacketServer::AddLossOfControl,
//             OpcodeServer::AddRunePower => PacketServer::AddRunePower,
//             OpcodeServer::AdjustSplineDuration => PacketServer::AdjustSplineDuration,
//             OpcodeServer::AdvancedCombatLog => PacketServer::AdvancedCombatLog,
//             OpcodeServer::AdventureJournalDataResponse => {
//                 PacketServer::AdventureJournalDataResponse
//             }
//             OpcodeServer::AdventureMapOpenNpc => PacketServer::AdventureMapOpenNpc,
//             OpcodeServer::AeLootTargets => PacketServer::AeLootTargets,
//             OpcodeServer::AeLootTargetAck => PacketServer::AeLootTargetAck,
//             OpcodeServer::AiReaction => PacketServer::AiReaction,
//             OpcodeServer::AlliedRaceDetails => PacketServer::AlliedRaceDetails,
//             OpcodeServer::AllAccountCriteria => PacketServer::AllAccountCriteria,
//             OpcodeServer::AllAchievementData => PacketServer::AllAchievementData,
//             OpcodeServer::AllGuildAchievements => PacketServer::AllGuildAchievements,
//             OpcodeServer::ApplyMountEquipmentResult => PacketServer::ApplyMountEquipmentResult,
//             OpcodeServer::ArchaeologySurveryCast => PacketServer::ArchaeologySurveryCast,
//             OpcodeServer::AreaPoiUpdateResponse => PacketServer::AreaPoiUpdateResponse,
//             OpcodeServer::AreaSpiritHealerTime => PacketServer::AreaSpiritHealerTime,
//             OpcodeServer::AreaTriggerDenied => PacketServer::AreaTriggerDenied,
//             OpcodeServer::AreaTriggerForceSetPositionAndFacing => {
//                 PacketServer::AreaTriggerForceSetPositionAndFacing
//             }
//             OpcodeServer::AreaTriggerNoCorpse => PacketServer::AreaTriggerNoCorpse,
//             OpcodeServer::AreaTriggerPlaySpellVisual => PacketServer::AreaTriggerPlaySpellVisual,
//             OpcodeServer::AreaTriggerRePath => PacketServer::AreaTriggerRePath,
//             OpcodeServer::AreaTriggerReShape => PacketServer::AreaTriggerReShape,
//             OpcodeServer::AreaTriggerUnattach => PacketServer::AreaTriggerUnattach,
//             OpcodeServer::ArenaClearOpponents => PacketServer::ArenaClearOpponents,
//             OpcodeServer::ArenaCrowdControlSpellResult => {
//                 PacketServer::ArenaCrowdControlSpellResult
//             }
//             OpcodeServer::ArenaPrepOpponentSpecializations => {
//                 PacketServer::ArenaPrepOpponentSpecializations
//             }
//             OpcodeServer::ArtifactEndgamePowersRefunded => {
//                 PacketServer::ArtifactEndgamePowersRefunded
//             }
//             OpcodeServer::ArtifactForgeError => PacketServer::ArtifactForgeError,
//             OpcodeServer::ArtifactRespecPrompt => PacketServer::ArtifactRespecPrompt,
//             OpcodeServer::ArtifactXpGain => PacketServer::ArtifactXpGain,
//             OpcodeServer::AttackerStateUpdate => PacketServer::AttackerStateUpdate,
//             OpcodeServer::AttackStart => PacketServer::AttackStart,
//             OpcodeServer::AttackStop => PacketServer::AttackStop,
//             OpcodeServer::AttackSwingError => PacketServer::AttackSwingError,
//             OpcodeServer::AttackSwingLandedLog => PacketServer::AttackSwingLandedLog,
//             OpcodeServer::AuctionableTokenAuctionSold => PacketServer::AuctionableTokenAuctionSold,
//             OpcodeServer::AuctionableTokenSellAtMarketPriceResponse => {
//                 PacketServer::AuctionableTokenSellAtMarketPriceResponse
//             }
//             OpcodeServer::AuctionableTokenSellConfirmRequired => {
//                 PacketServer::AuctionableTokenSellConfirmRequired
//             }
//             OpcodeServer::AuctionClosedNotification => PacketServer::AuctionClosedNotification,
//             OpcodeServer::AuctionCommandResult => PacketServer::AuctionCommandResult,
//             OpcodeServer::AuctionFavoriteList => PacketServer::AuctionFavoriteList,
//             OpcodeServer::AuctionGetCommodityQuoteResult => {
//                 PacketServer::AuctionGetCommodityQuoteResult
//             }
//             OpcodeServer::AuctionHelloResponse => PacketServer::AuctionHelloResponse,
//             OpcodeServer::AuctionListBiddedItemsResult => {
//                 PacketServer::AuctionListBiddedItemsResult
//             }
//             OpcodeServer::AuctionListBucketsResult => PacketServer::AuctionListBucketsResult,
//             OpcodeServer::AuctionListItemsResult => PacketServer::AuctionListItemsResult,
//             OpcodeServer::AuctionListOwnedItemsResult => PacketServer::AuctionListOwnedItemsResult,
//             OpcodeServer::AuctionOutbidNotification => PacketServer::AuctionOutbidNotification,
//             OpcodeServer::AuctionOwnerBidNotification => PacketServer::AuctionOwnerBidNotification,
//             OpcodeServer::AuctionReplicateResponse => PacketServer::AuctionReplicateResponse,
//             OpcodeServer::AuctionWonNotification => PacketServer::AuctionWonNotification,
//             OpcodeServer::AuraPointsDepleted => PacketServer::AuraPointsDepleted,
//             OpcodeServer::AuraUpdate => PacketServer::AuraUpdate,
//             OpcodeServer::AuthChallenge => PacketServer::AuthChallenge,
//             OpcodeServer::AuthFailed => PacketServer::AuthFailed,
//             OpcodeServer::AuthResponse => PacketServer::AuthResponse,
//             OpcodeServer::AvailableHotfixes => PacketServer::AvailableHotfixes,
//             OpcodeServer::AzeriteRespecNpc => PacketServer::AzeriteRespecNpc,
//             OpcodeServer::BagCleanupFinished => PacketServer::BagCleanupFinished,
//             OpcodeServer::BarberShopResult => PacketServer::BarberShopResult,
//             OpcodeServer::BatchPresenceSubscription => PacketServer::BatchPresenceSubscription,
//             OpcodeServer::BattlefieldList => PacketServer::BattlefieldList,
//             OpcodeServer::BattlefieldPortDenied => PacketServer::BattlefieldPortDenied,
//             OpcodeServer::BattlefieldStatusActive => PacketServer::BattlefieldStatusActive,
//             OpcodeServer::BattlefieldStatusFailed => PacketServer::BattlefieldStatusFailed,
//             OpcodeServer::BattlefieldStatusGroupProposalFailed => {
//                 PacketServer::BattlefieldStatusGroupProposalFailed
//             }
//             OpcodeServer::BattlefieldStatusNeedConfirmation => {
//                 PacketServer::BattlefieldStatusNeedConfirmation
//             }
//             OpcodeServer::BattlefieldStatusNone => PacketServer::BattlefieldStatusNone,
//             OpcodeServer::BattlefieldStatusQueued => PacketServer::BattlefieldStatusQueued,
//             OpcodeServer::BattlefieldStatusWaitForGroups => {
//                 PacketServer::BattlefieldStatusWaitForGroups
//             }
//             OpcodeServer::BattlegroundInfoThrottled => PacketServer::BattlegroundInfoThrottled,
//             OpcodeServer::BattlegroundInit => PacketServer::BattlegroundInit,
//             OpcodeServer::BattlegroundPlayerJoined => PacketServer::BattlegroundPlayerJoined,
//             OpcodeServer::BattlegroundPlayerLeft => PacketServer::BattlegroundPlayerLeft,
//             OpcodeServer::BattlegroundPlayerPositions => PacketServer::BattlegroundPlayerPositions,
//             OpcodeServer::BattlegroundPoints => PacketServer::BattlegroundPoints,
//             OpcodeServer::BattlenetChallengeAbort => PacketServer::BattlenetChallengeAbort,
//             OpcodeServer::BattlenetChallengeStart => PacketServer::BattlenetChallengeStart,
//             OpcodeServer::BattlenetNotification => PacketServer::BattlenetNotification,
//             OpcodeServer::BattlenetResponse => PacketServer::BattlenetResponse,
//             OpcodeServer::BattleNetConnectionStatus => PacketServer::BattleNetConnectionStatus,
//             OpcodeServer::BattlePayAckFailed => PacketServer::BattlePayAckFailed,
//             OpcodeServer::BattlePayBattlePetDelivered => PacketServer::BattlePayBattlePetDelivered,
//             OpcodeServer::BattlePayCollectionItemDelivered => {
//                 PacketServer::BattlePayCollectionItemDelivered
//             }
//             OpcodeServer::BattlePayConfirmPurchase => PacketServer::BattlePayConfirmPurchase,
//             OpcodeServer::BattlePayDeliveryEnded => PacketServer::BattlePayDeliveryEnded,
//             OpcodeServer::BattlePayDeliveryStarted => PacketServer::BattlePayDeliveryStarted,
//             OpcodeServer::BattlePayDistributionAssignVasResponse => {
//                 PacketServer::BattlePayDistributionAssignVasResponse
//             }
//             OpcodeServer::BattlePayDistributionUnrevoked => {
//                 PacketServer::BattlePayDistributionUnrevoked
//             }
//             OpcodeServer::BattlePayDistributionUpdate => PacketServer::BattlePayDistributionUpdate,
//             OpcodeServer::BattlePayGetDistributionListResponse => {
//                 PacketServer::BattlePayGetDistributionListResponse
//             }
//             OpcodeServer::BattlePayGetProductListResponse => {
//                 PacketServer::BattlePayGetProductListResponse
//             }
//             OpcodeServer::BattlePayGetPurchaseListResponse => {
//                 PacketServer::BattlePayGetPurchaseListResponse
//             }
//             OpcodeServer::BattlePayMountDelivered => PacketServer::BattlePayMountDelivered,
//             OpcodeServer::BattlePayPurchaseUpdate => PacketServer::BattlePayPurchaseUpdate,
//             OpcodeServer::BattlePayStartCheckout => PacketServer::BattlePayStartCheckout,
//             OpcodeServer::BattlePayStartDistributionAssignToTargetResponse => {
//                 PacketServer::BattlePayStartDistributionAssignToTargetResponse
//             }
//             OpcodeServer::BattlePayStartPurchaseResponse => {
//                 PacketServer::BattlePayStartPurchaseResponse
//             }
//             OpcodeServer::BattlePayValidatePurchaseResponse => {
//                 PacketServer::BattlePayValidatePurchaseResponse
//             }
//             OpcodeServer::BattlePetsHealed => PacketServer::BattlePetsHealed,
//             OpcodeServer::BattlePetCageDateError => PacketServer::BattlePetCageDateError,
//             OpcodeServer::BattlePetDeleted => PacketServer::BattlePetDeleted,
//             OpcodeServer::BattlePetError => PacketServer::BattlePetError,
//             OpcodeServer::BattlePetJournal => PacketServer::BattlePetJournal,
//             OpcodeServer::BattlePetJournalLockAcquired => {
//                 PacketServer::BattlePetJournalLockAcquired
//             }
//             OpcodeServer::BattlePetJournalLockDenied => PacketServer::BattlePetJournalLockDenied,
//             OpcodeServer::BattlePetLicenseChanged => PacketServer::BattlePetLicenseChanged,
//             OpcodeServer::BattlePetRestored => PacketServer::BattlePetRestored,
//             OpcodeServer::BattlePetRevoked => PacketServer::BattlePetRevoked,
//             OpcodeServer::BattlePetTrapLevel => PacketServer::BattlePetTrapLevel,
//             OpcodeServer::BattlePetUpdates => PacketServer::BattlePetUpdates,
//             OpcodeServer::BinderConfirm => PacketServer::BinderConfirm,
//             OpcodeServer::BindPointUpdate => PacketServer::BindPointUpdate,
//             OpcodeServer::BlackMarketBidOnItemResult => PacketServer::BlackMarketBidOnItemResult,
//             OpcodeServer::BlackMarketOpenResult => PacketServer::BlackMarketOpenResult,
//             OpcodeServer::BlackMarketOutbid => PacketServer::BlackMarketOutbid,
//             OpcodeServer::BlackMarketRequestItemsResult => {
//                 PacketServer::BlackMarketRequestItemsResult
//             }
//             OpcodeServer::BlackMarketWon => PacketServer::BlackMarketWon,
//             OpcodeServer::BonusRollEmpty => PacketServer::BonusRollEmpty,
//             OpcodeServer::BossKill => PacketServer::BossKill,
//             OpcodeServer::BreakTarget => PacketServer::BreakTarget,
//             OpcodeServer::BroadcastAchievement => PacketServer::BroadcastAchievement,
//             OpcodeServer::BroadcastSummonCast => PacketServer::BroadcastSummonCast,
//             OpcodeServer::BroadcastSummonResponse => PacketServer::BroadcastSummonResponse,
//             OpcodeServer::BuyFailed => PacketServer::BuyFailed,
//             OpcodeServer::BuySucceeded => PacketServer::BuySucceeded,
//             OpcodeServer::CacheInfo => PacketServer::CacheInfo,
//             OpcodeServer::CacheVersion => PacketServer::CacheVersion,
//             OpcodeServer::CalendarClearPendingAction => PacketServer::CalendarClearPendingAction,
//             OpcodeServer::CalendarCommandResult => PacketServer::CalendarCommandResult,
//             OpcodeServer::CalendarCommunityInvite => PacketServer::CalendarCommunityInvite,
//             OpcodeServer::CalendarEventRemovedAlert => PacketServer::CalendarEventRemovedAlert,
//             OpcodeServer::CalendarEventUpdatedAlert => PacketServer::CalendarEventUpdatedAlert,
//             OpcodeServer::CalendarInviteAdded => PacketServer::CalendarInviteAdded,
//             OpcodeServer::CalendarInviteAlert => PacketServer::CalendarInviteAlert,
//             OpcodeServer::CalendarInviteNotes => PacketServer::CalendarInviteNotes,
//             OpcodeServer::CalendarInviteNotesAlert => PacketServer::CalendarInviteNotesAlert,
//             OpcodeServer::CalendarInviteRemoved => PacketServer::CalendarInviteRemoved,
//             OpcodeServer::CalendarInviteRemovedAlert => PacketServer::CalendarInviteRemovedAlert,
//             OpcodeServer::CalendarInviteStatus => PacketServer::CalendarInviteStatus,
//             OpcodeServer::CalendarInviteStatusAlert => PacketServer::CalendarInviteStatusAlert,
//             OpcodeServer::CalendarModeratorStatus => PacketServer::CalendarModeratorStatus,
//             OpcodeServer::CalendarRaidLockoutAdded => PacketServer::CalendarRaidLockoutAdded,
//             OpcodeServer::CalendarRaidLockoutRemoved => PacketServer::CalendarRaidLockoutRemoved,
//             OpcodeServer::CalendarRaidLockoutUpdated => PacketServer::CalendarRaidLockoutUpdated,
//             OpcodeServer::CalendarSendCalendar => PacketServer::CalendarSendCalendar,
//             OpcodeServer::CalendarSendEvent => PacketServer::CalendarSendEvent,
//             OpcodeServer::CalendarSendNumPending => PacketServer::CalendarSendNumPending,
//             OpcodeServer::CameraEffect => PacketServer::CameraEffect,
//             OpcodeServer::CancelAutoRepeat => PacketServer::CancelAutoRepeat,
//             OpcodeServer::CancelCombat => PacketServer::CancelCombat,
//             OpcodeServer::CancelOrphanSpellVisual => PacketServer::CancelOrphanSpellVisual,
//             OpcodeServer::CancelScene => PacketServer::CancelScene,
//             OpcodeServer::CancelSpellVisual => PacketServer::CancelSpellVisual,
//             OpcodeServer::CancelSpellVisualKit => PacketServer::CancelSpellVisualKit,
//             OpcodeServer::CanDuelResult => PacketServer::CanDuelResult,
//             OpcodeServer::CanRedeemTokenForBalanceResponse => {
//                 PacketServer::CanRedeemTokenForBalanceResponse
//             }
//             OpcodeServer::CapturePointRemoved => PacketServer::CapturePointRemoved,
//             OpcodeServer::CastFailed => PacketServer::CastFailed,
//             OpcodeServer::CategoryCooldown => PacketServer::CategoryCooldown,
//             OpcodeServer::ChainMissileBounce => PacketServer::ChainMissileBounce,
//             OpcodeServer::ChallengeModeComplete => PacketServer::ChallengeModeComplete,
//             OpcodeServer::ChallengeModeRequestLeadersResult => {
//                 PacketServer::ChallengeModeRequestLeadersResult
//             }
//             OpcodeServer::ChallengeModeReset => PacketServer::ChallengeModeReset,
//             OpcodeServer::ChallengeModeStart => PacketServer::ChallengeModeStart,
//             OpcodeServer::ChallengeModeUpdateDeathCount => {
//                 PacketServer::ChallengeModeUpdateDeathCount
//             }
//             OpcodeServer::ChangePlayerDifficultyResult => {
//                 PacketServer::ChangePlayerDifficultyResult
//             }
//             OpcodeServer::ChangeRealmTicketResponse => PacketServer::ChangeRealmTicketResponse,
//             OpcodeServer::ChannelList => PacketServer::ChannelList,
//             OpcodeServer::ChannelNotify => PacketServer::ChannelNotify,
//             OpcodeServer::ChannelNotifyJoined => PacketServer::ChannelNotifyJoined,
//             OpcodeServer::ChannelNotifyLeft => PacketServer::ChannelNotifyLeft,
//             OpcodeServer::CharacterCheckUpgradeResult => PacketServer::CharacterCheckUpgradeResult,
//             OpcodeServer::CharacterLoginFailed => PacketServer::CharacterLoginFailed,
//             OpcodeServer::CharacterObjectTestResponse => PacketServer::CharacterObjectTestResponse,
//             OpcodeServer::CharacterRenameResult => PacketServer::CharacterRenameResult,
//             OpcodeServer::CharacterUpgradeAborted => PacketServer::CharacterUpgradeAborted,
//             OpcodeServer::CharacterUpgradeComplete => PacketServer::CharacterUpgradeComplete,
//             OpcodeServer::CharacterUpgradeManualUnrevokeResult => {
//                 PacketServer::CharacterUpgradeManualUnrevokeResult
//             }
//             OpcodeServer::CharacterUpgradeStarted => PacketServer::CharacterUpgradeStarted,
//             OpcodeServer::CharCustomizeFailure => PacketServer::CharCustomizeFailure,
//             OpcodeServer::CharCustomizeSuccess => PacketServer::CharCustomizeSuccess,
//             OpcodeServer::CharFactionChangeResult => PacketServer::CharFactionChangeResult,
//             OpcodeServer::Chat => PacketServer::Chat,
//             OpcodeServer::ChatAutoResponded => PacketServer::ChatAutoResponded,
//             OpcodeServer::ChatDown => PacketServer::ChatDown,
//             OpcodeServer::ChatIgnoredAccountMuted => PacketServer::ChatIgnoredAccountMuted,
//             OpcodeServer::ChatIsDown => PacketServer::ChatIsDown,
//             OpcodeServer::ChatNotInParty => PacketServer::ChatNotInParty,
//             OpcodeServer::ChatPlayerAmbiguous => PacketServer::ChatPlayerAmbiguous,
//             OpcodeServer::ChatPlayerNotfound => PacketServer::ChatPlayerNotfound,
//             OpcodeServer::ChatReconnect => PacketServer::ChatReconnect,
//             OpcodeServer::ChatRegionalServiceStatus => PacketServer::ChatRegionalServiceStatus,
//             OpcodeServer::ChatRestricted => PacketServer::ChatRestricted,
//             OpcodeServer::ChatServerMessage => PacketServer::ChatServerMessage,
//             OpcodeServer::CheatIgnoreDimishingReturns => PacketServer::CheatIgnoreDimishingReturns,
//             OpcodeServer::CheckAbandonNpe => PacketServer::CheckAbandonNpe,
//             OpcodeServer::CheckCharacterNameAvailabilityResult => {
//                 PacketServer::CheckCharacterNameAvailabilityResult
//             }
//             OpcodeServer::CheckWargameEntry => PacketServer::CheckWargameEntry,
//             OpcodeServer::ChromieTimeOpenNpc => PacketServer::ChromieTimeOpenNpc,
//             OpcodeServer::ChromieTimeSelectExpansionSuccess => {
//                 PacketServer::ChromieTimeSelectExpansionSuccess
//             }
//             OpcodeServer::ClaimRafRewardResponse => PacketServer::ClaimRafRewardResponse,
//             OpcodeServer::ClearAllSpellCharges => PacketServer::ClearAllSpellCharges,
//             OpcodeServer::ClearBossEmotes => PacketServer::ClearBossEmotes,
//             OpcodeServer::ClearCooldown => PacketServer::ClearCooldown,
//             OpcodeServer::ClearCooldowns => PacketServer::ClearCooldowns,
//             OpcodeServer::ClearResurrect => PacketServer::ClearResurrect,
//             OpcodeServer::ClearSpellCharges => PacketServer::ClearSpellCharges,
//             OpcodeServer::ClearTarget => PacketServer::ClearTarget,
//             OpcodeServer::ClearTreasurePickerCache => PacketServer::ClearTreasurePickerCache,
//             OpcodeServer::CloseArtifactForge => PacketServer::CloseArtifactForge,
//             OpcodeServer::CloseHeartForge => PacketServer::CloseHeartForge,
//             OpcodeServer::CloseItemForge => PacketServer::CloseItemForge,
//             OpcodeServer::ClubFinderErrorMessage => PacketServer::ClubFinderErrorMessage,
//             OpcodeServer::ClubFinderGetClubPostingIdsResponse => {
//                 PacketServer::ClubFinderGetClubPostingIdsResponse
//             }
//             OpcodeServer::ClubFinderLookupClubPostingsList => {
//                 PacketServer::ClubFinderLookupClubPostingsList
//             }
//             OpcodeServer::ClubFinderResponseCharacterApplicationList => {
//                 PacketServer::ClubFinderResponseCharacterApplicationList
//             }
//             OpcodeServer::ClubFinderResponsePostRecruitmentMessage => {
//                 PacketServer::ClubFinderResponsePostRecruitmentMessage
//             }
//             OpcodeServer::ClubFinderUpdateApplications => {
//                 PacketServer::ClubFinderUpdateApplications
//             }
//             OpcodeServer::CoinRemoved => PacketServer::CoinRemoved,
//             OpcodeServer::CombatEventFailed => PacketServer::CombatEventFailed,
//             OpcodeServer::CommentatorMapInfo => PacketServer::CommentatorMapInfo,
//             OpcodeServer::CommentatorPlayerInfo => PacketServer::CommentatorPlayerInfo,
//             OpcodeServer::CommentatorStateChanged => PacketServer::CommentatorStateChanged,
//             OpcodeServer::CommerceTokenGetCountResponse => {
//                 PacketServer::CommerceTokenGetCountResponse
//             }
//             OpcodeServer::CommerceTokenGetLogResponse => PacketServer::CommerceTokenGetLogResponse,
//             OpcodeServer::CommerceTokenGetMarketPriceResponse => {
//                 PacketServer::CommerceTokenGetMarketPriceResponse
//             }
//             OpcodeServer::CommerceTokenUpdate => PacketServer::CommerceTokenUpdate,
//             OpcodeServer::ComplaintResult => PacketServer::ComplaintResult,
//             OpcodeServer::CompleteShipmentResponse => PacketServer::CompleteShipmentResponse,
//             OpcodeServer::ConfirmPartyInvite => PacketServer::ConfirmPartyInvite,
//             OpcodeServer::ConnectTo => PacketServer::ConnectTo,
//             OpcodeServer::ConquestFormulaConstants => PacketServer::ConquestFormulaConstants,
//             OpcodeServer::ConsoleWrite => PacketServer::ConsoleWrite,
//             OpcodeServer::ConsumableTokenBuyAtMarketPriceResponse => {
//                 PacketServer::ConsumableTokenBuyAtMarketPriceResponse
//             }
//             OpcodeServer::ConsumableTokenBuyChoiceRequired => {
//                 PacketServer::ConsumableTokenBuyChoiceRequired
//             }
//             OpcodeServer::ConsumableTokenCanVeteranBuyResponse => {
//                 PacketServer::ConsumableTokenCanVeteranBuyResponse
//             }
//             OpcodeServer::ConsumableTokenRedeemConfirmRequired => {
//                 PacketServer::ConsumableTokenRedeemConfirmRequired
//             }
//             OpcodeServer::ConsumableTokenRedeemResponse => {
//                 PacketServer::ConsumableTokenRedeemResponse
//             }
//             OpcodeServer::ContactList => PacketServer::ContactList,
//             OpcodeServer::ContributionLastUpdateResponse => {
//                 PacketServer::ContributionLastUpdateResponse
//             }
//             OpcodeServer::ControlUpdate => PacketServer::ControlUpdate,
//             OpcodeServer::ConvertItemsToCurrencyValue => PacketServer::ConvertItemsToCurrencyValue,
//             OpcodeServer::CooldownCheat => PacketServer::CooldownCheat,
//             OpcodeServer::CooldownEvent => PacketServer::CooldownEvent,
//             OpcodeServer::CorpseLocation => PacketServer::CorpseLocation,
//             OpcodeServer::CorpseReclaimDelay => PacketServer::CorpseReclaimDelay,
//             OpcodeServer::CorpseTransportQuery => PacketServer::CorpseTransportQuery,
//             OpcodeServer::CovenantCallingsAvailabilityResponse => {
//                 PacketServer::CovenantCallingsAvailabilityResponse
//             }
//             OpcodeServer::CovenantPreviewOpenNpc => PacketServer::CovenantPreviewOpenNpc,
//             OpcodeServer::CovenantRenownOpenNpc => PacketServer::CovenantRenownOpenNpc,
//             OpcodeServer::CovenantRenownSendCatchupState => {
//                 PacketServer::CovenantRenownSendCatchupState
//             }
//             OpcodeServer::CreateChar => PacketServer::CreateChar,
//             OpcodeServer::CreateShipmentResponse => PacketServer::CreateShipmentResponse,
//             OpcodeServer::CriteriaDeleted => PacketServer::CriteriaDeleted,
//             OpcodeServer::CriteriaUpdate => PacketServer::CriteriaUpdate,
//             OpcodeServer::CrossedInebriationThreshold => PacketServer::CrossedInebriationThreshold,
//             OpcodeServer::CustomLoadScreen => PacketServer::CustomLoadScreen,
//             OpcodeServer::DailyQuestsReset => PacketServer::DailyQuestsReset,
//             OpcodeServer::DamageCalcLog => PacketServer::DamageCalcLog,
//             OpcodeServer::DbReply => PacketServer::DbReply,
//             OpcodeServer::DeathReleaseLoc => PacketServer::DeathReleaseLoc,
//             OpcodeServer::DebugMenuManagerFullUpdate => PacketServer::DebugMenuManagerFullUpdate,
//             OpcodeServer::DefenseMessage => PacketServer::DefenseMessage,
//             OpcodeServer::DeleteChar => PacketServer::DeleteChar,
//             OpcodeServer::DeleteExpiredMissionsResult => PacketServer::DeleteExpiredMissionsResult,
//             OpcodeServer::DestroyArenaUnit => PacketServer::DestroyArenaUnit,
//             OpcodeServer::DestructibleBuildingDamage => PacketServer::DestructibleBuildingDamage,
//             OpcodeServer::DifferentInstanceFromParty => PacketServer::DifferentInstanceFromParty,
//             OpcodeServer::DisenchantCredit => PacketServer::DisenchantCredit,
//             OpcodeServer::DismountResult => PacketServer::DismountResult,
//             OpcodeServer::DispelFailed => PacketServer::DispelFailed,
//             OpcodeServer::DisplayGameError => PacketServer::DisplayGameError,
//             OpcodeServer::DisplayPlayerChoice => PacketServer::DisplayPlayerChoice,
//             OpcodeServer::DisplayPromotion => PacketServer::DisplayPromotion,
//             OpcodeServer::DisplayQuestPopup => PacketServer::DisplayQuestPopup,
//             OpcodeServer::DisplaySoulbindUpdateMessage => {
//                 PacketServer::DisplaySoulbindUpdateMessage
//             }
//             OpcodeServer::DisplayToast => PacketServer::DisplayToast,
//             OpcodeServer::DisplayWorldText => PacketServer::DisplayWorldText,
//             OpcodeServer::DontAutoPushSpellsToActionBar => {
//                 PacketServer::DontAutoPushSpellsToActionBar
//             }
//             OpcodeServer::DropNewConnection => PacketServer::DropNewConnection,
//             OpcodeServer::DuelArranged => PacketServer::DuelArranged,
//             OpcodeServer::DuelComplete => PacketServer::DuelComplete,
//             OpcodeServer::DuelCountdown => PacketServer::DuelCountdown,
//             OpcodeServer::DuelInBounds => PacketServer::DuelInBounds,
//             OpcodeServer::DuelOutOfBounds => PacketServer::DuelOutOfBounds,
//             OpcodeServer::DuelRequested => PacketServer::DuelRequested,
//             OpcodeServer::DuelWinner => PacketServer::DuelWinner,
//             OpcodeServer::DurabilityDamageDeath => PacketServer::DurabilityDamageDeath,
//             OpcodeServer::Emote => PacketServer::Emote,
//             OpcodeServer::EnableBarberShop => PacketServer::EnableBarberShop,
//             OpcodeServer::EnchantmentLog => PacketServer::EnchantmentLog,
//             OpcodeServer::EncounterEnd => PacketServer::EncounterEnd,
//             OpcodeServer::EncounterStart => PacketServer::EncounterStart,
//             OpcodeServer::EndLightningStorm => PacketServer::EndLightningStorm,
//             OpcodeServer::EnterEncryptedMode => PacketServer::EnterEncryptedMode,
//             OpcodeServer::EnumCharactersResult => PacketServer::EnumCharactersResult,
//             OpcodeServer::EnumVasPurchaseStatesResponse => {
//                 PacketServer::EnumVasPurchaseStatesResponse
//             }
//             OpcodeServer::EnvironmentalDamageLog => PacketServer::EnvironmentalDamageLog,
//             OpcodeServer::EquipmentSetId => PacketServer::EquipmentSetId,
//             OpcodeServer::ExpectedSpamRecords => PacketServer::ExpectedSpamRecords,
//             OpcodeServer::ExplorationExperience => PacketServer::ExplorationExperience,
//             OpcodeServer::ExternalTransactionIdGenerated => {
//                 PacketServer::ExternalTransactionIdGenerated
//             }
//             OpcodeServer::FactionBonusInfo => PacketServer::FactionBonusInfo,
//             OpcodeServer::FailedPlayerCondition => PacketServer::FailedPlayerCondition,
//             OpcodeServer::FailedQuestTurnIn => PacketServer::FailedQuestTurnIn,
//             OpcodeServer::FeatureSystemStatus => PacketServer::FeatureSystemStatus,
//             OpcodeServer::FeatureSystemStatusGlueScreen => {
//                 PacketServer::FeatureSystemStatusGlueScreen
//             }
//             OpcodeServer::FeignDeathResisted => PacketServer::FeignDeathResisted,
//             OpcodeServer::FishEscaped => PacketServer::FishEscaped,
//             OpcodeServer::FishNotHooked => PacketServer::FishNotHooked,
//             OpcodeServer::FlightSplineSync => PacketServer::FlightSplineSync,
//             OpcodeServer::ForcedDeathUpdate => PacketServer::ForcedDeathUpdate,
//             OpcodeServer::ForceAnim => PacketServer::ForceAnim,
//             OpcodeServer::ForceAnimations => PacketServer::ForceAnimations,
//             OpcodeServer::ForceObjectRelink => PacketServer::ForceObjectRelink,
//             OpcodeServer::FriendStatus => PacketServer::FriendStatus,
//             OpcodeServer::GainMawPower => PacketServer::GainMawPower,
//             OpcodeServer::GameObjectActivateAnimKit => PacketServer::GameObjectActivateAnimKit,
//             OpcodeServer::GameObjectBase => PacketServer::GameObjectBase,
//             OpcodeServer::GameObjectCustomAnim => PacketServer::GameObjectCustomAnim,
//             OpcodeServer::GameObjectDespawn => PacketServer::GameObjectDespawn,
//             OpcodeServer::GameObjectPlaySpellVisual => PacketServer::GameObjectPlaySpellVisual,
//             OpcodeServer::GameObjectPlaySpellVisualKit => {
//                 PacketServer::GameObjectPlaySpellVisualKit
//             }
//             OpcodeServer::GameObjectResetState => PacketServer::GameObjectResetState,
//             OpcodeServer::GameObjectSetStateLocal => PacketServer::GameObjectSetStateLocal,
//             OpcodeServer::GameObjectUiLink => PacketServer::GameObjectUiLink,
//             OpcodeServer::GameSpeedSet => PacketServer::GameSpeedSet,
//             OpcodeServer::GameTimeSet => PacketServer::GameTimeSet,
//             OpcodeServer::GameTimeUpdate => PacketServer::GameTimeUpdate,
//             OpcodeServer::GarrisonActivateMissionBonusAbility => {
//                 PacketServer::GarrisonActivateMissionBonusAbility
//             }
//             OpcodeServer::GarrisonAddEvent => PacketServer::GarrisonAddEvent,
//             OpcodeServer::GarrisonAddFollowerResult => PacketServer::GarrisonAddFollowerResult,
//             OpcodeServer::GarrisonAddMissionResult => PacketServer::GarrisonAddMissionResult,
//             OpcodeServer::GarrisonAddSpecGroups => PacketServer::GarrisonAddSpecGroups,
//             OpcodeServer::GarrisonApplyTalentSocketDataChanges => {
//                 PacketServer::GarrisonApplyTalentSocketDataChanges
//             }
//             OpcodeServer::GarrisonAssignFollowerToBuildingResult => {
//                 PacketServer::GarrisonAssignFollowerToBuildingResult
//             }
//             OpcodeServer::GarrisonAutoTroopMinLevelUpdateResult => {
//                 PacketServer::GarrisonAutoTroopMinLevelUpdateResult
//             }
//             OpcodeServer::GarrisonBuildingActivated => PacketServer::GarrisonBuildingActivated,
//             OpcodeServer::GarrisonBuildingRemoved => PacketServer::GarrisonBuildingRemoved,
//             OpcodeServer::GarrisonBuildingSetActiveSpecializationResult => {
//                 PacketServer::GarrisonBuildingSetActiveSpecializationResult
//             }
//             OpcodeServer::GarrisonChangeMissionStartTimeResult => {
//                 PacketServer::GarrisonChangeMissionStartTimeResult
//             }
//             OpcodeServer::GarrisonClearCollection => PacketServer::GarrisonClearCollection,
//             OpcodeServer::GarrisonClearEventList => PacketServer::GarrisonClearEventList,
//             OpcodeServer::GarrisonClearSpecGroups => PacketServer::GarrisonClearSpecGroups,
//             OpcodeServer::GarrisonCollectionRemoveEntry => {
//                 PacketServer::GarrisonCollectionRemoveEntry
//             }
//             OpcodeServer::GarrisonCollectionUpdateEntry => {
//                 PacketServer::GarrisonCollectionUpdateEntry
//             }
//             OpcodeServer::GarrisonCompleteBuildingConstructionResult => {
//                 PacketServer::GarrisonCompleteBuildingConstructionResult
//             }
//             OpcodeServer::GarrisonCompleteMissionResult => {
//                 PacketServer::GarrisonCompleteMissionResult
//             }
//             OpcodeServer::GarrisonCreateResult => PacketServer::GarrisonCreateResult,
//             OpcodeServer::GarrisonDeleteMissionResult => PacketServer::GarrisonDeleteMissionResult,
//             OpcodeServer::GarrisonDeleteResult => PacketServer::GarrisonDeleteResult,
//             OpcodeServer::GarrisonFollowerActivationsSet => {
//                 PacketServer::GarrisonFollowerActivationsSet
//             }
//             OpcodeServer::GarrisonFollowerChangedFlags => {
//                 PacketServer::GarrisonFollowerChangedFlags
//             }
//             OpcodeServer::GarrisonFollowerChangedItemLevel => {
//                 PacketServer::GarrisonFollowerChangedItemLevel
//             }
//             OpcodeServer::GarrisonFollowerChangedQuality => {
//                 PacketServer::GarrisonFollowerChangedQuality
//             }
//             OpcodeServer::GarrisonFollowerChangedXp => PacketServer::GarrisonFollowerChangedXp,
//             OpcodeServer::GarrisonFollowerFatigueCleared => {
//                 PacketServer::GarrisonFollowerFatigueCleared
//             }
//             OpcodeServer::GarrisonGenerateFollowersResult => {
//                 PacketServer::GarrisonGenerateFollowersResult
//             }
//             OpcodeServer::GarrisonGetClassSpecCategoryInfoResult => {
//                 PacketServer::GarrisonGetClassSpecCategoryInfoResult
//             }
//             OpcodeServer::GarrisonGetRecallPortalLastUsedTimeResult => {
//                 PacketServer::GarrisonGetRecallPortalLastUsedTimeResult
//             }
//             OpcodeServer::GarrisonIsUpgradeableResponse => {
//                 PacketServer::GarrisonIsUpgradeableResponse
//             }
//             OpcodeServer::GarrisonLearnBlueprintResult => {
//                 PacketServer::GarrisonLearnBlueprintResult
//             }
//             OpcodeServer::GarrisonLearnSpecializationResult => {
//                 PacketServer::GarrisonLearnSpecializationResult
//             }
//             OpcodeServer::GarrisonListCompletedMissionsCheatResult => {
//                 PacketServer::GarrisonListCompletedMissionsCheatResult
//             }
//             OpcodeServer::GarrisonListFollowersCheatResult => {
//                 PacketServer::GarrisonListFollowersCheatResult
//             }
//             OpcodeServer::GarrisonMapDataResponse => PacketServer::GarrisonMapDataResponse,
//             OpcodeServer::GarrisonMissionBonusRollResult => {
//                 PacketServer::GarrisonMissionBonusRollResult
//             }
//             OpcodeServer::GarrisonMissionRequestRewardInfoResponse => {
//                 PacketServer::GarrisonMissionRequestRewardInfoResponse
//             }
//             OpcodeServer::GarrisonMissionStartConditionUpdate => {
//                 PacketServer::GarrisonMissionStartConditionUpdate
//             }
//             OpcodeServer::GarrisonOpenArchitect => PacketServer::GarrisonOpenArchitect,
//             OpcodeServer::GarrisonOpenCrafter => PacketServer::GarrisonOpenCrafter,
//             OpcodeServer::GarrisonOpenMissionNpc => PacketServer::GarrisonOpenMissionNpc,
//             OpcodeServer::GarrisonOpenRecruitmentNpc => PacketServer::GarrisonOpenRecruitmentNpc,
//             OpcodeServer::GarrisonOpenTalentNpc => PacketServer::GarrisonOpenTalentNpc,
//             OpcodeServer::GarrisonPlaceBuildingResult => PacketServer::GarrisonPlaceBuildingResult,
//             OpcodeServer::GarrisonPlotPlaced => PacketServer::GarrisonPlotPlaced,
//             OpcodeServer::GarrisonPlotRemoved => PacketServer::GarrisonPlotRemoved,
//             OpcodeServer::GarrisonRecruitFollowerResult => {
//                 PacketServer::GarrisonRecruitFollowerResult
//             }
//             OpcodeServer::GarrisonRemoteInfo => PacketServer::GarrisonRemoteInfo,
//             OpcodeServer::GarrisonRemoveEvent => PacketServer::GarrisonRemoveEvent,
//             OpcodeServer::GarrisonRemoveFollowerAbilityResult => {
//                 PacketServer::GarrisonRemoveFollowerAbilityResult
//             }
//             OpcodeServer::GarrisonRemoveFollowerFromBuildingResult => {
//                 PacketServer::GarrisonRemoveFollowerFromBuildingResult
//             }
//             OpcodeServer::GarrisonRemoveFollowerResult => {
//                 PacketServer::GarrisonRemoveFollowerResult
//             }
//             OpcodeServer::GarrisonRenameFollowerResult => {
//                 PacketServer::GarrisonRenameFollowerResult
//             }
//             OpcodeServer::GarrisonRequestBlueprintAndSpecializationDataResult => {
//                 PacketServer::GarrisonRequestBlueprintAndSpecializationDataResult
//             }
//             OpcodeServer::GarrisonResearchTalentResult => {
//                 PacketServer::GarrisonResearchTalentResult
//             }
//             OpcodeServer::GarrisonResetTalentTree => PacketServer::GarrisonResetTalentTree,
//             OpcodeServer::GarrisonResetTalentTreeSocketData => {
//                 PacketServer::GarrisonResetTalentTreeSocketData
//             }
//             OpcodeServer::GarrisonStartMissionResult => PacketServer::GarrisonStartMissionResult,
//             OpcodeServer::GarrisonSwapBuildingsResponse => {
//                 PacketServer::GarrisonSwapBuildingsResponse
//             }
//             OpcodeServer::GarrisonSwitchTalentTreeBranch => {
//                 PacketServer::GarrisonSwitchTalentTreeBranch
//             }
//             OpcodeServer::GarrisonTalentCompleted => PacketServer::GarrisonTalentCompleted,
//             OpcodeServer::GarrisonTalentRemoved => PacketServer::GarrisonTalentRemoved,
//             OpcodeServer::GarrisonTalentRemoveSocketData => {
//                 PacketServer::GarrisonTalentRemoveSocketData
//             }
//             OpcodeServer::GarrisonTalentUpdateSocketData => {
//                 PacketServer::GarrisonTalentUpdateSocketData
//             }
//             OpcodeServer::GarrisonTalentWorldQuestUnlocksResponse => {
//                 PacketServer::GarrisonTalentWorldQuestUnlocksResponse
//             }
//             OpcodeServer::GarrisonUnlearnBlueprintResult => {
//                 PacketServer::GarrisonUnlearnBlueprintResult
//             }
//             OpcodeServer::GarrisonUpdateFollower => PacketServer::GarrisonUpdateFollower,
//             OpcodeServer::GarrisonUpdateGarrisonMonumentSelections => {
//                 PacketServer::GarrisonUpdateGarrisonMonumentSelections
//             }
//             OpcodeServer::GarrisonUpdateMissionCheatResult => {
//                 PacketServer::GarrisonUpdateMissionCheatResult
//             }
//             OpcodeServer::GarrisonUpgradeResult => PacketServer::GarrisonUpgradeResult,
//             OpcodeServer::GarrisonUseRecallPortalResult => {
//                 PacketServer::GarrisonUseRecallPortalResult
//             }
//             OpcodeServer::GenerateRandomCharacterNameResult => {
//                 PacketServer::GenerateRandomCharacterNameResult
//             }
//             OpcodeServer::GenerateSsoTokenResponse => PacketServer::GenerateSsoTokenResponse,
//             OpcodeServer::GetAccountCharacterListResult => {
//                 PacketServer::GetAccountCharacterListResult
//             }
//             OpcodeServer::GetGarrisonInfoResult => PacketServer::GetGarrisonInfoResult,
//             OpcodeServer::GetLandingPageShipmentsResponse => {
//                 PacketServer::GetLandingPageShipmentsResponse
//             }
//             OpcodeServer::GetRemainingGameTimeResponse => {
//                 PacketServer::GetRemainingGameTimeResponse
//             }
//             OpcodeServer::GetSelectedTrophyIdResponse => PacketServer::GetSelectedTrophyIdResponse,
//             OpcodeServer::GetShipmentsOfTypeResponse => PacketServer::GetShipmentsOfTypeResponse,
//             OpcodeServer::GetShipmentInfoResponse => PacketServer::GetShipmentInfoResponse,
//             OpcodeServer::GetTrophyListResponse => PacketServer::GetTrophyListResponse,
//             OpcodeServer::GetVasAccountCharacterListResult => {
//                 PacketServer::GetVasAccountCharacterListResult
//             }
//             OpcodeServer::GetVasTransferTargetRealmListResult => {
//                 PacketServer::GetVasTransferTargetRealmListResult
//             }
//             OpcodeServer::GmPlayerInfo => PacketServer::GmPlayerInfo,
//             OpcodeServer::GmRequestPlayerInfo => PacketServer::GmRequestPlayerInfo,
//             OpcodeServer::GmTicketCaseStatus => PacketServer::GmTicketCaseStatus,
//             OpcodeServer::GmTicketSystemStatus => PacketServer::GmTicketSystemStatus,
//             OpcodeServer::GodMode => PacketServer::GodMode,
//             OpcodeServer::GossipComplete => PacketServer::GossipComplete,
//             OpcodeServer::GossipMessage => PacketServer::GossipMessage,
//             OpcodeServer::GossipPoi => PacketServer::GossipPoi,
//             OpcodeServer::GossipQuestUpdate => PacketServer::GossipQuestUpdate,
//             OpcodeServer::GossipRefreshOptions => PacketServer::GossipRefreshOptions,
//             OpcodeServer::GroupActionThrottled => PacketServer::GroupActionThrottled,
//             OpcodeServer::GroupAutoKick => PacketServer::GroupAutoKick,
//             OpcodeServer::GroupDecline => PacketServer::GroupDecline,
//             OpcodeServer::GroupDestroyed => PacketServer::GroupDestroyed,
//             OpcodeServer::GroupNewLeader => PacketServer::GroupNewLeader,
//             OpcodeServer::GroupUninvite => PacketServer::GroupUninvite,
//             OpcodeServer::GuildAchievementDeleted => PacketServer::GuildAchievementDeleted,
//             OpcodeServer::GuildAchievementEarned => PacketServer::GuildAchievementEarned,
//             OpcodeServer::GuildAchievementMembers => PacketServer::GuildAchievementMembers,
//             OpcodeServer::GuildBankLogQueryResults => PacketServer::GuildBankLogQueryResults,
//             OpcodeServer::GuildBankQueryResults => PacketServer::GuildBankQueryResults,
//             OpcodeServer::GuildBankRemainingWithdrawMoney => {
//                 PacketServer::GuildBankRemainingWithdrawMoney
//             }
//             OpcodeServer::GuildBankTextQueryResult => PacketServer::GuildBankTextQueryResult,
//             OpcodeServer::GuildChallengeCompleted => PacketServer::GuildChallengeCompleted,
//             OpcodeServer::GuildChallengeUpdate => PacketServer::GuildChallengeUpdate,
//             OpcodeServer::GuildChangeNameResult => PacketServer::GuildChangeNameResult,
//             OpcodeServer::GuildCommandResult => PacketServer::GuildCommandResult,
//             OpcodeServer::GuildCriteriaDeleted => PacketServer::GuildCriteriaDeleted,
//             OpcodeServer::GuildCriteriaUpdate => PacketServer::GuildCriteriaUpdate,
//             OpcodeServer::GuildEventBankContentsChanged => {
//                 PacketServer::GuildEventBankContentsChanged
//             }
//             OpcodeServer::GuildEventBankMoneyChanged => PacketServer::GuildEventBankMoneyChanged,
//             OpcodeServer::GuildEventDisbanded => PacketServer::GuildEventDisbanded,
//             OpcodeServer::GuildEventLogQueryResults => PacketServer::GuildEventLogQueryResults,
//             OpcodeServer::GuildEventMotd => PacketServer::GuildEventMotd,
//             OpcodeServer::GuildEventNewLeader => PacketServer::GuildEventNewLeader,
//             OpcodeServer::GuildEventPlayerJoined => PacketServer::GuildEventPlayerJoined,
//             OpcodeServer::GuildEventPlayerLeft => PacketServer::GuildEventPlayerLeft,
//             OpcodeServer::GuildEventPresenceChange => PacketServer::GuildEventPresenceChange,
//             OpcodeServer::GuildEventRanksUpdated => PacketServer::GuildEventRanksUpdated,
//             OpcodeServer::GuildEventRankChanged => PacketServer::GuildEventRankChanged,
//             OpcodeServer::GuildEventStatusChange => PacketServer::GuildEventStatusChange,
//             OpcodeServer::GuildEventTabAdded => PacketServer::GuildEventTabAdded,
//             OpcodeServer::GuildEventTabDeleted => PacketServer::GuildEventTabDeleted,
//             OpcodeServer::GuildEventTabModified => PacketServer::GuildEventTabModified,
//             OpcodeServer::GuildEventTabTextChanged => PacketServer::GuildEventTabTextChanged,
//             OpcodeServer::GuildFlaggedForRename => PacketServer::GuildFlaggedForRename,
//             OpcodeServer::GuildInvite => PacketServer::GuildInvite,
//             OpcodeServer::GuildInviteDeclined => PacketServer::GuildInviteDeclined,
//             OpcodeServer::GuildInviteExpired => PacketServer::GuildInviteExpired,
//             OpcodeServer::GuildItemLootedNotify => PacketServer::GuildItemLootedNotify,
//             OpcodeServer::GuildKnownRecipes => PacketServer::GuildKnownRecipes,
//             OpcodeServer::GuildMembersWithRecipe => PacketServer::GuildMembersWithRecipe,
//             OpcodeServer::GuildMemberDailyReset => PacketServer::GuildMemberDailyReset,
//             OpcodeServer::GuildMemberRecipes => PacketServer::GuildMemberRecipes,
//             OpcodeServer::GuildMemberUpdateNote => PacketServer::GuildMemberUpdateNote,
//             OpcodeServer::GuildMoved => PacketServer::GuildMoved,
//             OpcodeServer::GuildMoveStarting => PacketServer::GuildMoveStarting,
//             OpcodeServer::GuildNameChanged => PacketServer::GuildNameChanged,
//             OpcodeServer::GuildNews => PacketServer::GuildNews,
//             OpcodeServer::GuildNewsDeleted => PacketServer::GuildNewsDeleted,
//             OpcodeServer::GuildPartyState => PacketServer::GuildPartyState,
//             OpcodeServer::GuildPermissionsQueryResults => {
//                 PacketServer::GuildPermissionsQueryResults
//             }
//             OpcodeServer::GuildRanks => PacketServer::GuildRanks,
//             OpcodeServer::GuildReputationReactionChanged => {
//                 PacketServer::GuildReputationReactionChanged
//             }
//             OpcodeServer::GuildReset => PacketServer::GuildReset,
//             OpcodeServer::GuildRewardList => PacketServer::GuildRewardList,
//             OpcodeServer::GuildRoster => PacketServer::GuildRoster,
//             OpcodeServer::GuildRosterUpdate => PacketServer::GuildRosterUpdate,
//             OpcodeServer::GuildSendRankChange => PacketServer::GuildSendRankChange,
//             OpcodeServer::HealthUpdate => PacketServer::HealthUpdate,
//             OpcodeServer::HighestThreatUpdate => PacketServer::HighestThreatUpdate,
//             OpcodeServer::HotfixConnect => PacketServer::HotfixConnect,
//             OpcodeServer::HotfixMessage => PacketServer::HotfixMessage,
//             OpcodeServer::InitializeFactions => PacketServer::InitializeFactions,
//             OpcodeServer::InitialSetup => PacketServer::InitialSetup,
//             OpcodeServer::InitWorldStates => PacketServer::InitWorldStates,
//             OpcodeServer::InspectResult => PacketServer::InspectResult,
//             OpcodeServer::InstanceEncounterChangePriority => {
//                 PacketServer::InstanceEncounterChangePriority
//             }
//             OpcodeServer::InstanceEncounterDisengageUnit => {
//                 PacketServer::InstanceEncounterDisengageUnit
//             }
//             OpcodeServer::InstanceEncounterEnd => PacketServer::InstanceEncounterEnd,
//             OpcodeServer::InstanceEncounterEngageUnit => PacketServer::InstanceEncounterEngageUnit,
//             OpcodeServer::InstanceEncounterGainCombatResurrectionCharge => {
//                 PacketServer::InstanceEncounterGainCombatResurrectionCharge
//             }
//             OpcodeServer::InstanceEncounterInCombatResurrection => {
//                 PacketServer::InstanceEncounterInCombatResurrection
//             }
//             OpcodeServer::InstanceEncounterObjectiveComplete => {
//                 PacketServer::InstanceEncounterObjectiveComplete
//             }
//             OpcodeServer::InstanceEncounterObjectiveStart => {
//                 PacketServer::InstanceEncounterObjectiveStart
//             }
//             OpcodeServer::InstanceEncounterObjectiveUpdate => {
//                 PacketServer::InstanceEncounterObjectiveUpdate
//             }
//             OpcodeServer::InstanceEncounterPhaseShiftChanged => {
//                 PacketServer::InstanceEncounterPhaseShiftChanged
//             }
//             OpcodeServer::InstanceEncounterStart => PacketServer::InstanceEncounterStart,
//             OpcodeServer::InstanceEncounterTimerStart => PacketServer::InstanceEncounterTimerStart,
//             OpcodeServer::InstanceEncounterUpdateAllowReleaseInProgress => {
//                 PacketServer::InstanceEncounterUpdateAllowReleaseInProgress
//             }
//             OpcodeServer::InstanceEncounterUpdateSuppressRelease => {
//                 PacketServer::InstanceEncounterUpdateSuppressRelease
//             }
//             OpcodeServer::InstanceGroupSizeChanged => PacketServer::InstanceGroupSizeChanged,
//             OpcodeServer::InstanceInfo => PacketServer::InstanceInfo,
//             OpcodeServer::InstanceReset => PacketServer::InstanceReset,
//             OpcodeServer::InstanceResetFailed => PacketServer::InstanceResetFailed,
//             OpcodeServer::InstanceSaveCreated => PacketServer::InstanceSaveCreated,
//             OpcodeServer::InterruptPowerRegen => PacketServer::InterruptPowerRegen,
//             OpcodeServer::InvalidatePageText => PacketServer::InvalidatePageText,
//             OpcodeServer::InvalidatePlayer => PacketServer::InvalidatePlayer,
//             OpcodeServer::InvalidPromotionCode => PacketServer::InvalidPromotionCode,
//             OpcodeServer::InventoryChangeFailure => PacketServer::InventoryChangeFailure,
//             OpcodeServer::InventoryFixupComplete => PacketServer::InventoryFixupComplete,
//             OpcodeServer::InventoryFullOverflow => PacketServer::InventoryFullOverflow,
//             OpcodeServer::IslandsMissionNpc => PacketServer::IslandsMissionNpc,
//             OpcodeServer::IslandAzeriteGain => PacketServer::IslandAzeriteGain,
//             OpcodeServer::IslandComplete => PacketServer::IslandComplete,
//             OpcodeServer::IsQuestCompleteResponse => PacketServer::IsQuestCompleteResponse,
//             OpcodeServer::ItemChanged => PacketServer::ItemChanged,
//             OpcodeServer::ItemCooldown => PacketServer::ItemCooldown,
//             OpcodeServer::ItemEnchantTimeUpdate => PacketServer::ItemEnchantTimeUpdate,
//             OpcodeServer::ItemExpirePurchaseRefund => PacketServer::ItemExpirePurchaseRefund,
//             OpcodeServer::ItemInteractionComplete => PacketServer::ItemInteractionComplete,
//             OpcodeServer::ItemPurchaseRefundResult => PacketServer::ItemPurchaseRefundResult,
//             OpcodeServer::ItemPushResult => PacketServer::ItemPushResult,
//             OpcodeServer::ItemTimeUpdate => PacketServer::ItemTimeUpdate,
//             OpcodeServer::KickReason => PacketServer::KickReason,
//             OpcodeServer::LatencyReportPing => PacketServer::LatencyReportPing,
//             OpcodeServer::LearnedSpells => PacketServer::LearnedSpells,
//             OpcodeServer::LearnPvpTalentFailed => PacketServer::LearnPvpTalentFailed,
//             OpcodeServer::LearnTalentFailed => PacketServer::LearnTalentFailed,
//             OpcodeServer::LegacyLootRules => PacketServer::LegacyLootRules,
//             OpcodeServer::LevelLinkingResult => PacketServer::LevelLinkingResult,
//             OpcodeServer::LevelUpInfo => PacketServer::LevelUpInfo,
//             OpcodeServer::LfgBootPlayer => PacketServer::LfgBootPlayer,
//             OpcodeServer::LfgDisabled => PacketServer::LfgDisabled,
//             OpcodeServer::LfgExpandSearchPrompt => PacketServer::LfgExpandSearchPrompt,
//             OpcodeServer::LfgInstanceShutdownCountdown => {
//                 PacketServer::LfgInstanceShutdownCountdown
//             }
//             OpcodeServer::LfgJoinResult => PacketServer::LfgJoinResult,
//             OpcodeServer::LfgListApplicantListUpdate => PacketServer::LfgListApplicantListUpdate,
//             OpcodeServer::LfgListApplicationStatusUpdate => {
//                 PacketServer::LfgListApplicationStatusUpdate
//             }
//             OpcodeServer::LfgListApplyToGroupResult => PacketServer::LfgListApplyToGroupResult,
//             OpcodeServer::LfgListJoinResult => PacketServer::LfgListJoinResult,
//             OpcodeServer::LfgListSearchResults => PacketServer::LfgListSearchResults,
//             OpcodeServer::LfgListSearchResultsUpdate => PacketServer::LfgListSearchResultsUpdate,
//             OpcodeServer::LfgListSearchStatus => PacketServer::LfgListSearchStatus,
//             OpcodeServer::LfgListUpdateBlacklist => PacketServer::LfgListUpdateBlacklist,
//             OpcodeServer::LfgListUpdateExpiration => PacketServer::LfgListUpdateExpiration,
//             OpcodeServer::LfgListUpdateStatus => PacketServer::LfgListUpdateStatus,
//             OpcodeServer::LfgOfferContinue => PacketServer::LfgOfferContinue,
//             OpcodeServer::LfgPartyInfo => PacketServer::LfgPartyInfo,
//             OpcodeServer::LfgPlayerInfo => PacketServer::LfgPlayerInfo,
//             OpcodeServer::LfgPlayerReward => PacketServer::LfgPlayerReward,
//             OpcodeServer::LfgProposalUpdate => PacketServer::LfgProposalUpdate,
//             OpcodeServer::LfgQueueStatus => PacketServer::LfgQueueStatus,
//             OpcodeServer::LfgReadyCheckResult => PacketServer::LfgReadyCheckResult,
//             OpcodeServer::LfgReadyCheckUpdate => PacketServer::LfgReadyCheckUpdate,
//             OpcodeServer::LfgRoleCheckUpdate => PacketServer::LfgRoleCheckUpdate,
//             OpcodeServer::LfgSlotInvalid => PacketServer::LfgSlotInvalid,
//             OpcodeServer::LfgTeleportDenied => PacketServer::LfgTeleportDenied,
//             OpcodeServer::LfgUpdateStatus => PacketServer::LfgUpdateStatus,
//             OpcodeServer::LiveRegionAccountRestoreResult => {
//                 PacketServer::LiveRegionAccountRestoreResult
//             }
//             OpcodeServer::LiveRegionCharacterCopyResult => {
//                 PacketServer::LiveRegionCharacterCopyResult
//             }
//             OpcodeServer::LiveRegionGetAccountCharacterListResult => {
//                 PacketServer::LiveRegionGetAccountCharacterListResult
//             }
//             OpcodeServer::LiveRegionKeyBindingsCopyResult => {
//                 PacketServer::LiveRegionKeyBindingsCopyResult
//             }
//             OpcodeServer::LoadCufProfiles => PacketServer::LoadCufProfiles,
//             OpcodeServer::LoadEquipmentSet => PacketServer::LoadEquipmentSet,
//             OpcodeServer::LoginSetTimeSpeed => PacketServer::LoginSetTimeSpeed,
//             OpcodeServer::LoginVerifyWorld => PacketServer::LoginVerifyWorld,
//             OpcodeServer::LogoutCancelAck => PacketServer::LogoutCancelAck,
//             OpcodeServer::LogoutComplete => PacketServer::LogoutComplete,
//             OpcodeServer::LogoutResponse => PacketServer::LogoutResponse,
//             OpcodeServer::LogXpGain => PacketServer::LogXpGain,
//             OpcodeServer::LootAllPassed => PacketServer::LootAllPassed,
//             OpcodeServer::LootList => PacketServer::LootList,
//             OpcodeServer::LootMoneyNotify => PacketServer::LootMoneyNotify,
//             OpcodeServer::LootRelease => PacketServer::LootRelease,
//             OpcodeServer::LootReleaseAll => PacketServer::LootReleaseAll,
//             OpcodeServer::LootRemoved => PacketServer::LootRemoved,
//             OpcodeServer::LootResponse => PacketServer::LootResponse,
//             OpcodeServer::LootRoll => PacketServer::LootRoll,
//             OpcodeServer::LootRollsComplete => PacketServer::LootRollsComplete,
//             OpcodeServer::LootRollWon => PacketServer::LootRollWon,
//             OpcodeServer::LossOfControlAuraUpdate => PacketServer::LossOfControlAuraUpdate,
//             OpcodeServer::MailCommandResult => PacketServer::MailCommandResult,
//             OpcodeServer::MailListResult => PacketServer::MailListResult,
//             OpcodeServer::MailQueryNextTimeResult => PacketServer::MailQueryNextTimeResult,
//             OpcodeServer::MapObjectivesInit => PacketServer::MapObjectivesInit,
//             OpcodeServer::MapObjEvents => PacketServer::MapObjEvents,
//             OpcodeServer::MasterLootCandidateList => PacketServer::MasterLootCandidateList,
//             OpcodeServer::MessageBox => PacketServer::MessageBox,
//             OpcodeServer::MinimapPing => PacketServer::MinimapPing,
//             OpcodeServer::MirrorImageComponentedData => PacketServer::MirrorImageComponentedData,
//             OpcodeServer::MirrorImageCreatureData => PacketServer::MirrorImageCreatureData,
//             OpcodeServer::MissileCancel => PacketServer::MissileCancel,
//             OpcodeServer::ModifyCooldown => PacketServer::ModifyCooldown,
//             OpcodeServer::Motd => PacketServer::Motd,
//             OpcodeServer::MountResult => PacketServer::MountResult,
//             OpcodeServer::MovementEnforcementAlert => PacketServer::MovementEnforcementAlert,
//             OpcodeServer::MoveApplyInertia => PacketServer::MoveApplyInertia,
//             OpcodeServer::MoveApplyMovementForce => PacketServer::MoveApplyMovementForce,
//             OpcodeServer::MoveDisableCollision => PacketServer::MoveDisableCollision,
//             OpcodeServer::MoveDisableDoubleJump => PacketServer::MoveDisableDoubleJump,
//             OpcodeServer::MoveDisableGravity => PacketServer::MoveDisableGravity,
//             OpcodeServer::MoveDisableInertia => PacketServer::MoveDisableInertia,
//             OpcodeServer::MoveDisableTransitionBetweenSwimAndFly => {
//                 PacketServer::MoveDisableTransitionBetweenSwimAndFly
//             }
//             OpcodeServer::MoveEnableCollision => PacketServer::MoveEnableCollision,
//             OpcodeServer::MoveEnableDoubleJump => PacketServer::MoveEnableDoubleJump,
//             OpcodeServer::MoveEnableGravity => PacketServer::MoveEnableGravity,
//             OpcodeServer::MoveEnableInertia => PacketServer::MoveEnableInertia,
//             OpcodeServer::MoveEnableTransitionBetweenSwimAndFly => {
//                 PacketServer::MoveEnableTransitionBetweenSwimAndFly
//             }
//             OpcodeServer::MoveKnockBack => PacketServer::MoveKnockBack,
//             OpcodeServer::MoveRemoveInertia => PacketServer::MoveRemoveInertia,
//             OpcodeServer::MoveRemoveMovementForce => PacketServer::MoveRemoveMovementForce,
//             OpcodeServer::MoveRoot => PacketServer::MoveRoot,
//             OpcodeServer::MoveSetActiveMover => PacketServer::MoveSetActiveMover,
//             OpcodeServer::MoveSetCanFly => PacketServer::MoveSetCanFly,
//             OpcodeServer::MoveSetCanTurnWhileFalling => PacketServer::MoveSetCanTurnWhileFalling,
//             OpcodeServer::MoveSetCollisionHeight => PacketServer::MoveSetCollisionHeight,
//             OpcodeServer::MoveSetCompoundState => PacketServer::MoveSetCompoundState,
//             OpcodeServer::MoveSetFeatherFall => PacketServer::MoveSetFeatherFall,
//             OpcodeServer::MoveSetFlightBackSpeed => PacketServer::MoveSetFlightBackSpeed,
//             OpcodeServer::MoveSetFlightSpeed => PacketServer::MoveSetFlightSpeed,
//             OpcodeServer::MoveSetHovering => PacketServer::MoveSetHovering,
//             OpcodeServer::MoveSetIgnoreMovementForces => PacketServer::MoveSetIgnoreMovementForces,
//             OpcodeServer::MoveSetLandWalk => PacketServer::MoveSetLandWalk,
//             OpcodeServer::MoveSetModMovementForceMagnitude => {
//                 PacketServer::MoveSetModMovementForceMagnitude
//             }
//             OpcodeServer::MoveSetNormalFall => PacketServer::MoveSetNormalFall,
//             OpcodeServer::MoveSetPitchRate => PacketServer::MoveSetPitchRate,
//             OpcodeServer::MoveSetRunBackSpeed => PacketServer::MoveSetRunBackSpeed,
//             OpcodeServer::MoveSetRunSpeed => PacketServer::MoveSetRunSpeed,
//             OpcodeServer::MoveSetSwimBackSpeed => PacketServer::MoveSetSwimBackSpeed,
//             OpcodeServer::MoveSetSwimSpeed => PacketServer::MoveSetSwimSpeed,
//             OpcodeServer::MoveSetTurnRate => PacketServer::MoveSetTurnRate,
//             OpcodeServer::MoveSetVehicleRecId => PacketServer::MoveSetVehicleRecId,
//             OpcodeServer::MoveSetWalkSpeed => PacketServer::MoveSetWalkSpeed,
//             OpcodeServer::MoveSetWaterWalk => PacketServer::MoveSetWaterWalk,
//             OpcodeServer::MoveSkipTime => PacketServer::MoveSkipTime,
//             OpcodeServer::MoveSplineDisableCollision => PacketServer::MoveSplineDisableCollision,
//             OpcodeServer::MoveSplineDisableGravity => PacketServer::MoveSplineDisableGravity,
//             OpcodeServer::MoveSplineEnableCollision => PacketServer::MoveSplineEnableCollision,
//             OpcodeServer::MoveSplineEnableGravity => PacketServer::MoveSplineEnableGravity,
//             OpcodeServer::MoveSplineRoot => PacketServer::MoveSplineRoot,
//             OpcodeServer::MoveSplineSetFeatherFall => PacketServer::MoveSplineSetFeatherFall,
//             OpcodeServer::MoveSplineSetFlightBackSpeed => {
//                 PacketServer::MoveSplineSetFlightBackSpeed
//             }
//             OpcodeServer::MoveSplineSetFlightSpeed => PacketServer::MoveSplineSetFlightSpeed,
//             OpcodeServer::MoveSplineSetFlying => PacketServer::MoveSplineSetFlying,
//             OpcodeServer::MoveSplineSetHover => PacketServer::MoveSplineSetHover,
//             OpcodeServer::MoveSplineSetLandWalk => PacketServer::MoveSplineSetLandWalk,
//             OpcodeServer::MoveSplineSetNormalFall => PacketServer::MoveSplineSetNormalFall,
//             OpcodeServer::MoveSplineSetPitchRate => PacketServer::MoveSplineSetPitchRate,
//             OpcodeServer::MoveSplineSetRunBackSpeed => PacketServer::MoveSplineSetRunBackSpeed,
//             OpcodeServer::MoveSplineSetRunMode => PacketServer::MoveSplineSetRunMode,
//             OpcodeServer::MoveSplineSetRunSpeed => PacketServer::MoveSplineSetRunSpeed,
//             OpcodeServer::MoveSplineSetSwimBackSpeed => PacketServer::MoveSplineSetSwimBackSpeed,
//             OpcodeServer::MoveSplineSetSwimSpeed => PacketServer::MoveSplineSetSwimSpeed,
//             OpcodeServer::MoveSplineSetTurnRate => PacketServer::MoveSplineSetTurnRate,
//             OpcodeServer::MoveSplineSetWalkMode => PacketServer::MoveSplineSetWalkMode,
//             OpcodeServer::MoveSplineSetWalkSpeed => PacketServer::MoveSplineSetWalkSpeed,
//             OpcodeServer::MoveSplineSetWaterWalk => PacketServer::MoveSplineSetWaterWalk,
//             OpcodeServer::MoveSplineStartSwim => PacketServer::MoveSplineStartSwim,
//             OpcodeServer::MoveSplineStopSwim => PacketServer::MoveSplineStopSwim,
//             OpcodeServer::MoveSplineUnroot => PacketServer::MoveSplineUnroot,
//             OpcodeServer::MoveSplineUnsetFlying => PacketServer::MoveSplineUnsetFlying,
//             OpcodeServer::MoveSplineUnsetHover => PacketServer::MoveSplineUnsetHover,
//             OpcodeServer::MoveTeleport => PacketServer::MoveTeleport,
//             OpcodeServer::MoveUnroot => PacketServer::MoveUnroot,
//             OpcodeServer::MoveUnsetCanFly => PacketServer::MoveUnsetCanFly,
//             OpcodeServer::MoveUnsetCanTurnWhileFalling => {
//                 PacketServer::MoveUnsetCanTurnWhileFalling
//             }
//             OpcodeServer::MoveUnsetHovering => PacketServer::MoveUnsetHovering,
//             OpcodeServer::MoveUnsetIgnoreMovementForces => {
//                 PacketServer::MoveUnsetIgnoreMovementForces
//             }
//             OpcodeServer::MoveUpdate => PacketServer::MoveUpdate,
//             OpcodeServer::MoveUpdateApplyInertia => PacketServer::MoveUpdateApplyInertia,
//             OpcodeServer::MoveUpdateApplyMovementForce => {
//                 PacketServer::MoveUpdateApplyMovementForce
//             }
//             OpcodeServer::MoveUpdateCollisionHeight => PacketServer::MoveUpdateCollisionHeight,
//             OpcodeServer::MoveUpdateFlightBackSpeed => PacketServer::MoveUpdateFlightBackSpeed,
//             OpcodeServer::MoveUpdateFlightSpeed => PacketServer::MoveUpdateFlightSpeed,
//             OpcodeServer::MoveUpdateKnockBack => PacketServer::MoveUpdateKnockBack,
//             OpcodeServer::MoveUpdateModMovementForceMagnitude => {
//                 PacketServer::MoveUpdateModMovementForceMagnitude
//             }
//             OpcodeServer::MoveUpdatePitchRate => PacketServer::MoveUpdatePitchRate,
//             OpcodeServer::MoveUpdateRemoveInertia => PacketServer::MoveUpdateRemoveInertia,
//             OpcodeServer::MoveUpdateRemoveMovementForce => {
//                 PacketServer::MoveUpdateRemoveMovementForce
//             }
//             OpcodeServer::MoveUpdateRunBackSpeed => PacketServer::MoveUpdateRunBackSpeed,
//             OpcodeServer::MoveUpdateRunSpeed => PacketServer::MoveUpdateRunSpeed,
//             OpcodeServer::MoveUpdateSwimBackSpeed => PacketServer::MoveUpdateSwimBackSpeed,
//             OpcodeServer::MoveUpdateSwimSpeed => PacketServer::MoveUpdateSwimSpeed,
//             OpcodeServer::MoveUpdateTeleport => PacketServer::MoveUpdateTeleport,
//             OpcodeServer::MoveUpdateTurnRate => PacketServer::MoveUpdateTurnRate,
//             OpcodeServer::MoveUpdateWalkSpeed => PacketServer::MoveUpdateWalkSpeed,
//             OpcodeServer::MultiFloorLeaveFloor => PacketServer::MultiFloorLeaveFloor,
//             OpcodeServer::MultiFloorNewFloor => PacketServer::MultiFloorNewFloor,
//             OpcodeServer::MythicPlusAllMapStats => PacketServer::MythicPlusAllMapStats,
//             OpcodeServer::MythicPlusCurrentAffixes => PacketServer::MythicPlusCurrentAffixes,
//             OpcodeServer::MythicPlusNewWeekRecord => PacketServer::MythicPlusNewWeekRecord,
//             OpcodeServer::MythicPlusSeasonData => PacketServer::MythicPlusSeasonData,
//             OpcodeServer::NeutralPlayerFactionSelectResult => {
//                 PacketServer::NeutralPlayerFactionSelectResult
//             }
//             OpcodeServer::NewTaxiPath => PacketServer::NewTaxiPath,
//             OpcodeServer::NewWorld => PacketServer::NewWorld,
//             OpcodeServer::NotifyDestLocSpellCast => PacketServer::NotifyDestLocSpellCast,
//             OpcodeServer::NotifyMissileTrajectoryCollision => {
//                 PacketServer::NotifyMissileTrajectoryCollision
//             }
//             OpcodeServer::NotifyMoney => PacketServer::NotifyMoney,
//             OpcodeServer::NotifyReceivedMail => PacketServer::NotifyReceivedMail,
//             OpcodeServer::OfferPetitionError => PacketServer::OfferPetitionError,
//             OpcodeServer::OnCancelExpectedRideVehicleAura => {
//                 PacketServer::OnCancelExpectedRideVehicleAura
//             }
//             OpcodeServer::OnMonsterMove => PacketServer::OnMonsterMove,
//             OpcodeServer::OpenAnimaDiversionUi => PacketServer::OpenAnimaDiversionUi,
//             OpcodeServer::OpenArtifactForge => PacketServer::OpenArtifactForge,
//             OpcodeServer::OpenContainer => PacketServer::OpenContainer,
//             OpcodeServer::OpenHeartForge => PacketServer::OpenHeartForge,
//             OpcodeServer::OpenItemForge => PacketServer::OpenItemForge,
//             OpcodeServer::OpenLfgDungeonFinder => PacketServer::OpenLfgDungeonFinder,
//             OpcodeServer::OpenShipmentNpcFromGossip => PacketServer::OpenShipmentNpcFromGossip,
//             OpcodeServer::OpenShipmentNpcResult => PacketServer::OpenShipmentNpcResult,
//             OpcodeServer::OverrideLight => PacketServer::OverrideLight,
//             OpcodeServer::PageText => PacketServer::PageText,
//             OpcodeServer::PartyCommandResult => PacketServer::PartyCommandResult,
//             OpcodeServer::PartyInvite => PacketServer::PartyInvite,
//             OpcodeServer::PartyKillLog => PacketServer::PartyKillLog,
//             OpcodeServer::PartyMemberFullState => PacketServer::PartyMemberFullState,
//             OpcodeServer::PartyMemberPartialState => PacketServer::PartyMemberPartialState,
//             OpcodeServer::PartyNotifyLfgLeaderChange => PacketServer::PartyNotifyLfgLeaderChange,
//             OpcodeServer::PartyUpdate => PacketServer::PartyUpdate,
//             OpcodeServer::PastTimeEvents => PacketServer::PastTimeEvents,
//             OpcodeServer::PauseMirrorTimer => PacketServer::PauseMirrorTimer,
//             OpcodeServer::PendingRaidLock => PacketServer::PendingRaidLock,
//             OpcodeServer::PetitionAlreadySigned => PacketServer::PetitionAlreadySigned,
//             OpcodeServer::PetitionRenameGuildResponse => PacketServer::PetitionRenameGuildResponse,
//             OpcodeServer::PetitionShowList => PacketServer::PetitionShowList,
//             OpcodeServer::PetitionShowSignatures => PacketServer::PetitionShowSignatures,
//             OpcodeServer::PetitionSignResults => PacketServer::PetitionSignResults,
//             OpcodeServer::PetActionFeedback => PacketServer::PetActionFeedback,
//             OpcodeServer::PetActionSound => PacketServer::PetActionSound,
//             OpcodeServer::PetAdded => PacketServer::PetAdded,
//             OpcodeServer::PetBattleChatRestricted => PacketServer::PetBattleChatRestricted,
//             OpcodeServer::PetBattleDebugQueueDumpResponse => {
//                 PacketServer::PetBattleDebugQueueDumpResponse
//             }
//             OpcodeServer::PetBattleFinalizeLocation => PacketServer::PetBattleFinalizeLocation,
//             OpcodeServer::PetBattleFinalRound => PacketServer::PetBattleFinalRound,
//             OpcodeServer::PetBattleFinished => PacketServer::PetBattleFinished,
//             OpcodeServer::PetBattleFirstRound => PacketServer::PetBattleFirstRound,
//             OpcodeServer::PetBattleInitialUpdate => PacketServer::PetBattleInitialUpdate,
//             OpcodeServer::PetBattleMaxGameLengthWarning => {
//                 PacketServer::PetBattleMaxGameLengthWarning
//             }
//             OpcodeServer::PetBattlePvpChallenge => PacketServer::PetBattlePvpChallenge,
//             OpcodeServer::PetBattleQueueProposeMatch => PacketServer::PetBattleQueueProposeMatch,
//             OpcodeServer::PetBattleQueueStatus => PacketServer::PetBattleQueueStatus,
//             OpcodeServer::PetBattleReplacementsMade => PacketServer::PetBattleReplacementsMade,
//             OpcodeServer::PetBattleRequestFailed => PacketServer::PetBattleRequestFailed,
//             OpcodeServer::PetBattleRoundResult => PacketServer::PetBattleRoundResult,
//             OpcodeServer::PetBattleSlotUpdates => PacketServer::PetBattleSlotUpdates,
//             OpcodeServer::PetCastFailed => PacketServer::PetCastFailed,
//             OpcodeServer::PetClearSpells => PacketServer::PetClearSpells,
//             OpcodeServer::PetDismissSound => PacketServer::PetDismissSound,
//             OpcodeServer::PetGodMode => PacketServer::PetGodMode,
//             OpcodeServer::PetGuids => PacketServer::PetGuids,
//             OpcodeServer::PetLearnedSpells => PacketServer::PetLearnedSpells,
//             OpcodeServer::PetMode => PacketServer::PetMode,
//             OpcodeServer::PetNameInvalid => PacketServer::PetNameInvalid,
//             OpcodeServer::PetNewlyTamed => PacketServer::PetNewlyTamed,
//             OpcodeServer::PetSlotUpdated => PacketServer::PetSlotUpdated,
//             OpcodeServer::PetSpellsMessage => PacketServer::PetSpellsMessage,
//             OpcodeServer::PetStableList => PacketServer::PetStableList,
//             OpcodeServer::PetStableResult => PacketServer::PetStableResult,
//             OpcodeServer::PetTameFailure => PacketServer::PetTameFailure,
//             OpcodeServer::PetUnlearnedSpells => PacketServer::PetUnlearnedSpells,
//             OpcodeServer::PhaseShiftChange => PacketServer::PhaseShiftChange,
//             OpcodeServer::PlayedTime => PacketServer::PlayedTime,
//             OpcodeServer::PlayerAzeriteItemEquippedStatusChanged => {
//                 PacketServer::PlayerAzeriteItemEquippedStatusChanged
//             }
//             OpcodeServer::PlayerAzeriteItemGains => PacketServer::PlayerAzeriteItemGains,
//             OpcodeServer::PlayerBonusRollFailed => PacketServer::PlayerBonusRollFailed,
//             OpcodeServer::PlayerBound => PacketServer::PlayerBound,
//             OpcodeServer::PlayerChoiceClear => PacketServer::PlayerChoiceClear,
//             OpcodeServer::PlayerChoiceDisplayError => PacketServer::PlayerChoiceDisplayError,
//             OpcodeServer::PlayerConditionResult => PacketServer::PlayerConditionResult,
//             OpcodeServer::PlayerIsAdventureMapPoiValid => {
//                 PacketServer::PlayerIsAdventureMapPoiValid
//             }
//             OpcodeServer::PlayerOpenSubscriptionInterstitial => {
//                 PacketServer::PlayerOpenSubscriptionInterstitial
//             }
//             OpcodeServer::PlayerSaveGuildEmblem => PacketServer::PlayerSaveGuildEmblem,
//             OpcodeServer::PlayerShowUiEventToast => PacketServer::PlayerShowUiEventToast,
//             OpcodeServer::PlayerSkinned => PacketServer::PlayerSkinned,
//             OpcodeServer::PlayerTabardVendorActivate => PacketServer::PlayerTabardVendorActivate,
//             OpcodeServer::PlayerTutorialHighlightSpell => {
//                 PacketServer::PlayerTutorialHighlightSpell
//             }
//             OpcodeServer::PlayerTutorialUnhighlightSpell => {
//                 PacketServer::PlayerTutorialUnhighlightSpell
//             }
//             OpcodeServer::PlayMusic => PacketServer::PlayMusic,
//             OpcodeServer::PlayObjectSound => PacketServer::PlayObjectSound,
//             OpcodeServer::PlayOneShotAnimKit => PacketServer::PlayOneShotAnimKit,
//             OpcodeServer::PlayOrphanSpellVisual => PacketServer::PlayOrphanSpellVisual,
//             OpcodeServer::PlayScene => PacketServer::PlayScene,
//             OpcodeServer::PlaySound => PacketServer::PlaySound,
//             OpcodeServer::PlaySpeakerbotSound => PacketServer::PlaySpeakerbotSound,
//             OpcodeServer::PlaySpellVisual => PacketServer::PlaySpellVisual,
//             OpcodeServer::PlaySpellVisualKit => PacketServer::PlaySpellVisualKit,
//             OpcodeServer::PlayTimeWarning => PacketServer::PlayTimeWarning,
//             OpcodeServer::Pong => PacketServer::Pong,
//             OpcodeServer::PowerUpdate => PacketServer::PowerUpdate,
//             OpcodeServer::PreloadChildMap => PacketServer::PreloadChildMap,
//             OpcodeServer::PrepopulateNameCache => PacketServer::PrepopulateNameCache,
//             OpcodeServer::PreRessurect => PacketServer::PreRessurect,
//             OpcodeServer::PrintNotification => PacketServer::PrintNotification,
//             OpcodeServer::ProcResist => PacketServer::ProcResist,
//             OpcodeServer::PushSpellToActionBar => PacketServer::PushSpellToActionBar,
//             OpcodeServer::PvpCredit => PacketServer::PvpCredit,
//             OpcodeServer::PvpMatchComplete => PacketServer::PvpMatchComplete,
//             OpcodeServer::PvpMatchInitialize => PacketServer::PvpMatchInitialize,
//             OpcodeServer::PvpMatchStart => PacketServer::PvpMatchStart,
//             OpcodeServer::PvpMatchStatistics => PacketServer::PvpMatchStatistics,
//             OpcodeServer::PvpOptionsEnabled => PacketServer::PvpOptionsEnabled,
//             OpcodeServer::PvpTierRecord => PacketServer::PvpTierRecord,
//             OpcodeServer::QueryBattlePetNameResponse => PacketServer::QueryBattlePetNameResponse,
//             OpcodeServer::QueryCreatureResponse => PacketServer::QueryCreatureResponse,
//             OpcodeServer::QueryGameObjectResponse => PacketServer::QueryGameObjectResponse,
//             OpcodeServer::QueryGarrisonPetNameResponse => {
//                 PacketServer::QueryGarrisonPetNameResponse
//             }
//             OpcodeServer::QueryGuildFollowInfoResponse => {
//                 PacketServer::QueryGuildFollowInfoResponse
//             }
//             OpcodeServer::QueryGuildInfoResponse => PacketServer::QueryGuildInfoResponse,
//             OpcodeServer::QueryItemTextResponse => PacketServer::QueryItemTextResponse,
//             OpcodeServer::QueryNpcTextResponse => PacketServer::QueryNpcTextResponse,
//             OpcodeServer::QueryPageTextResponse => PacketServer::QueryPageTextResponse,
//             OpcodeServer::QueryPetitionResponse => PacketServer::QueryPetitionResponse,
//             OpcodeServer::QueryPetNameResponse => PacketServer::QueryPetNameResponse,
//             OpcodeServer::QueryPlayerNamesResponse => PacketServer::QueryPlayerNamesResponse,
//             OpcodeServer::QueryPlayerNameByCommunityIdResponse => {
//                 PacketServer::QueryPlayerNameByCommunityIdResponse
//             }
//             OpcodeServer::QueryQuestInfoResponse => PacketServer::QueryQuestInfoResponse,
//             OpcodeServer::QueryRealmGuildMasterInfoResponse => {
//                 PacketServer::QueryRealmGuildMasterInfoResponse
//             }
//             OpcodeServer::QueryTimeResponse => PacketServer::QueryTimeResponse,
//             OpcodeServer::QuestCompletionNpcResponse => PacketServer::QuestCompletionNpcResponse,
//             OpcodeServer::QuestConfirmAccept => PacketServer::QuestConfirmAccept,
//             OpcodeServer::QuestForceRemoved => PacketServer::QuestForceRemoved,
//             OpcodeServer::QuestGiverInvalidQuest => PacketServer::QuestGiverInvalidQuest,
//             OpcodeServer::QuestGiverOfferRewardMessage => {
//                 PacketServer::QuestGiverOfferRewardMessage
//             }
//             OpcodeServer::QuestGiverQuestComplete => PacketServer::QuestGiverQuestComplete,
//             OpcodeServer::QuestGiverQuestDetails => PacketServer::QuestGiverQuestDetails,
//             OpcodeServer::QuestGiverQuestFailed => PacketServer::QuestGiverQuestFailed,
//             OpcodeServer::QuestGiverQuestListMessage => PacketServer::QuestGiverQuestListMessage,
//             OpcodeServer::QuestGiverRequestItems => PacketServer::QuestGiverRequestItems,
//             OpcodeServer::QuestGiverStatus => PacketServer::QuestGiverStatus,
//             OpcodeServer::QuestGiverStatusMultiple => PacketServer::QuestGiverStatusMultiple,
//             OpcodeServer::QuestLogFull => PacketServer::QuestLogFull,
//             OpcodeServer::QuestNonLogUpdateComplete => PacketServer::QuestNonLogUpdateComplete,
//             OpcodeServer::QuestPoiQueryResponse => PacketServer::QuestPoiQueryResponse,
//             OpcodeServer::QuestPoiUpdateResponse => PacketServer::QuestPoiUpdateResponse,
//             OpcodeServer::QuestPushResult => PacketServer::QuestPushResult,
//             OpcodeServer::QuestSessionInfoResponse => PacketServer::QuestSessionInfoResponse,
//             OpcodeServer::QuestSessionReadyCheck => PacketServer::QuestSessionReadyCheck,
//             OpcodeServer::QuestSessionReadyCheckResponse => {
//                 PacketServer::QuestSessionReadyCheckResponse
//             }
//             OpcodeServer::QuestSessionResult => PacketServer::QuestSessionResult,
//             OpcodeServer::QuestUpdateAddCredit => PacketServer::QuestUpdateAddCredit,
//             OpcodeServer::QuestUpdateAddCreditSimple => PacketServer::QuestUpdateAddCreditSimple,
//             OpcodeServer::QuestUpdateAddPvpCredit => PacketServer::QuestUpdateAddPvpCredit,
//             OpcodeServer::QuestUpdateComplete => PacketServer::QuestUpdateComplete,
//             OpcodeServer::QuestUpdateFailed => PacketServer::QuestUpdateFailed,
//             OpcodeServer::QuestUpdateFailedTimer => PacketServer::QuestUpdateFailedTimer,
//             OpcodeServer::QueueSummaryUpdate => PacketServer::QueueSummaryUpdate,
//             OpcodeServer::RafAccountInfo => PacketServer::RafAccountInfo,
//             OpcodeServer::RafActivityStateChanged => PacketServer::RafActivityStateChanged,
//             OpcodeServer::RaidDifficultySet => PacketServer::RaidDifficultySet,
//             OpcodeServer::RaidGroupOnly => PacketServer::RaidGroupOnly,
//             OpcodeServer::RaidInstanceMessage => PacketServer::RaidInstanceMessage,
//             OpcodeServer::RaidMarkersChanged => PacketServer::RaidMarkersChanged,
//             OpcodeServer::RandomRoll => PacketServer::RandomRoll,
//             OpcodeServer::RatedPvpInfo => PacketServer::RatedPvpInfo,
//             OpcodeServer::ReadyCheckCompleted => PacketServer::ReadyCheckCompleted,
//             OpcodeServer::ReadyCheckResponse => PacketServer::ReadyCheckResponse,
//             OpcodeServer::ReadyCheckStarted => PacketServer::ReadyCheckStarted,
//             OpcodeServer::ReadItemResultFailed => PacketServer::ReadItemResultFailed,
//             OpcodeServer::ReadItemResultOk => PacketServer::ReadItemResultOk,
//             OpcodeServer::RealmLookupInfo => PacketServer::RealmLookupInfo,
//             OpcodeServer::RealmQueryResponse => PacketServer::RealmQueryResponse,
//             OpcodeServer::ReattachResurrect => PacketServer::ReattachResurrect,
//             OpcodeServer::RecruitAFriendFailure => PacketServer::RecruitAFriendFailure,
//             OpcodeServer::RefreshComponent => PacketServer::RefreshComponent,
//             OpcodeServer::RefreshSpellHistory => PacketServer::RefreshSpellHistory,
//             OpcodeServer::RemoveItemPassive => PacketServer::RemoveItemPassive,
//             OpcodeServer::RemoveSpellFromActionBar => PacketServer::RemoveSpellFromActionBar,
//             OpcodeServer::ReplaceTrophyResponse => PacketServer::ReplaceTrophyResponse,
//             OpcodeServer::ReportPvpPlayerAfkResult => PacketServer::ReportPvpPlayerAfkResult,
//             OpcodeServer::RequestCemeteryListResponse => PacketServer::RequestCemeteryListResponse,
//             OpcodeServer::RequestPvpRewardsResponse => PacketServer::RequestPvpRewardsResponse,
//             OpcodeServer::RequestScheduledPvpInfoResponse => {
//                 PacketServer::RequestScheduledPvpInfoResponse
//             }
//             OpcodeServer::ResearchComplete => PacketServer::ResearchComplete,
//             OpcodeServer::ResetCompressionContext => PacketServer::ResetCompressionContext,
//             OpcodeServer::ResetFailedNotify => PacketServer::ResetFailedNotify,
//             OpcodeServer::ResetQuestPoi => PacketServer::ResetQuestPoi,
//             OpcodeServer::ResetRangedCombatTimer => PacketServer::ResetRangedCombatTimer,
//             OpcodeServer::ResetWeeklyCurrency => PacketServer::ResetWeeklyCurrency,
//             OpcodeServer::RespecWipeConfirm => PacketServer::RespecWipeConfirm,
//             OpcodeServer::RespondInspectAchievements => PacketServer::RespondInspectAchievements,
//             OpcodeServer::RestartGlobalCooldown => PacketServer::RestartGlobalCooldown,
//             OpcodeServer::RestrictedAccountWarning => PacketServer::RestrictedAccountWarning,
//             OpcodeServer::ResumeCast => PacketServer::ResumeCast,
//             OpcodeServer::ResumeCastBar => PacketServer::ResumeCastBar,
//             OpcodeServer::ResumeComms => PacketServer::ResumeComms,
//             OpcodeServer::ResumeToken => PacketServer::ResumeToken,
//             OpcodeServer::ResurrectRequest => PacketServer::ResurrectRequest,
//             OpcodeServer::ResyncRunes => PacketServer::ResyncRunes,
//             OpcodeServer::ReturnApplicantList => PacketServer::ReturnApplicantList,
//             OpcodeServer::ReturnRecruitingClubs => PacketServer::ReturnRecruitingClubs,
//             OpcodeServer::RoleChangedInform => PacketServer::RoleChangedInform,
//             OpcodeServer::RoleChosen => PacketServer::RoleChosen,
//             OpcodeServer::RolePollInform => PacketServer::RolePollInform,
//             OpcodeServer::RuneforgeLegendaryCraftingOpenNpc => {
//                 PacketServer::RuneforgeLegendaryCraftingOpenNpc
//             }
//             OpcodeServer::RuneRegenDebug => PacketServer::RuneRegenDebug,
//             OpcodeServer::ScenarioCompleted => PacketServer::ScenarioCompleted,
//             OpcodeServer::ScenarioPois => PacketServer::ScenarioPois,
//             OpcodeServer::ScenarioProgressUpdate => PacketServer::ScenarioProgressUpdate,
//             OpcodeServer::ScenarioShowCriteria => PacketServer::ScenarioShowCriteria,
//             OpcodeServer::ScenarioState => PacketServer::ScenarioState,
//             OpcodeServer::ScenarioUiUpdate => PacketServer::ScenarioUiUpdate,
//             OpcodeServer::ScenarioVacate => PacketServer::ScenarioVacate,
//             OpcodeServer::SceneObjectEvent => PacketServer::SceneObjectEvent,
//             OpcodeServer::SceneObjectPetBattleFinalRound => {
//                 PacketServer::SceneObjectPetBattleFinalRound
//             }
//             OpcodeServer::SceneObjectPetBattleFinished => {
//                 PacketServer::SceneObjectPetBattleFinished
//             }
//             OpcodeServer::SceneObjectPetBattleFirstRound => {
//                 PacketServer::SceneObjectPetBattleFirstRound
//             }
//             OpcodeServer::SceneObjectPetBattleInitialUpdate => {
//                 PacketServer::SceneObjectPetBattleInitialUpdate
//             }
//             OpcodeServer::SceneObjectPetBattleReplacementsMade => {
//                 PacketServer::SceneObjectPetBattleReplacementsMade
//             }
//             OpcodeServer::SceneObjectPetBattleRoundResult => {
//                 PacketServer::SceneObjectPetBattleRoundResult
//             }
//             OpcodeServer::ScriptCast => PacketServer::ScriptCast,
//             OpcodeServer::SeasonInfo => PacketServer::SeasonInfo,
//             OpcodeServer::SellResponse => PacketServer::SellResponse,
//             OpcodeServer::SendItemPassives => PacketServer::SendItemPassives,
//             OpcodeServer::SendKnownSpells => PacketServer::SendKnownSpells,
//             OpcodeServer::SendRaidTargetUpdateAll => PacketServer::SendRaidTargetUpdateAll,
//             OpcodeServer::SendRaidTargetUpdateSingle => PacketServer::SendRaidTargetUpdateSingle,
//             OpcodeServer::SendSpellCharges => PacketServer::SendSpellCharges,
//             OpcodeServer::SendSpellHistory => PacketServer::SendSpellHistory,
//             OpcodeServer::SendUnlearnSpells => PacketServer::SendUnlearnSpells,
//             OpcodeServer::ServerFirstAchievements => PacketServer::ServerFirstAchievements,
//             OpcodeServer::ServerTime => PacketServer::ServerTime,
//             OpcodeServer::ServerTimeOffset => PacketServer::ServerTimeOffset,
//             OpcodeServer::SetupCurrency => PacketServer::SetupCurrency,
//             OpcodeServer::SetupResearchHistory => PacketServer::SetupResearchHistory,
//             OpcodeServer::SetAiAnimKit => PacketServer::SetAiAnimKit,
//             OpcodeServer::SetAllTaskProgress => PacketServer::SetAllTaskProgress,
//             OpcodeServer::SetAnimTier => PacketServer::SetAnimTier,
//             OpcodeServer::SetChrUpgradeTier => PacketServer::SetChrUpgradeTier,
//             OpcodeServer::SetCurrency => PacketServer::SetCurrency,
//             OpcodeServer::SetDfFastLaunchResult => PacketServer::SetDfFastLaunchResult,
//             OpcodeServer::SetDungeonDifficulty => PacketServer::SetDungeonDifficulty,
//             OpcodeServer::SetFactionAtWar => PacketServer::SetFactionAtWar,
//             OpcodeServer::SetFactionNotVisible => PacketServer::SetFactionNotVisible,
//             OpcodeServer::SetFactionStanding => PacketServer::SetFactionStanding,
//             OpcodeServer::SetFactionVisible => PacketServer::SetFactionVisible,
//             OpcodeServer::SetFlatSpellModifier => PacketServer::SetFlatSpellModifier,
//             OpcodeServer::SetForcedReactions => PacketServer::SetForcedReactions,
//             OpcodeServer::SetItemPurchaseData => PacketServer::SetItemPurchaseData,
//             OpcodeServer::SetLootMethodFailed => PacketServer::SetLootMethodFailed,
//             OpcodeServer::SetMaxWeeklyQuantity => PacketServer::SetMaxWeeklyQuantity,
//             OpcodeServer::SetMeleeAnimKit => PacketServer::SetMeleeAnimKit,
//             OpcodeServer::SetMovementAnimKit => PacketServer::SetMovementAnimKit,
//             OpcodeServer::SetPctSpellModifier => PacketServer::SetPctSpellModifier,
//             OpcodeServer::SetPetSpecialization => PacketServer::SetPetSpecialization,
//             OpcodeServer::SetPlayerDeclinedNamesResult => {
//                 PacketServer::SetPlayerDeclinedNamesResult
//             }
//             OpcodeServer::SetPlayHoverAnim => PacketServer::SetPlayHoverAnim,
//             OpcodeServer::SetProficiency => PacketServer::SetProficiency,
//             OpcodeServer::SetQuestReplayCooldownOverride => {
//                 PacketServer::SetQuestReplayCooldownOverride
//             }
//             OpcodeServer::SetShipmentReadyResponse => PacketServer::SetShipmentReadyResponse,
//             OpcodeServer::SetSpellCharges => PacketServer::SetSpellCharges,
//             OpcodeServer::SetTaskComplete => PacketServer::SetTaskComplete,
//             OpcodeServer::SetTimeZoneInformation => PacketServer::SetTimeZoneInformation,
//             OpcodeServer::SetVehicleRecId => PacketServer::SetVehicleRecId,
//             OpcodeServer::ShadowlandsCapacitanceUpdate => {
//                 PacketServer::ShadowlandsCapacitanceUpdate
//             }
//             OpcodeServer::ShipmentFactionUpdateResult => PacketServer::ShipmentFactionUpdateResult,
//             OpcodeServer::ShowBank => PacketServer::ShowBank,
//             OpcodeServer::ShowMailbox => PacketServer::ShowMailbox,
//             OpcodeServer::ShowNeutralPlayerFactionSelectUi => {
//                 PacketServer::ShowNeutralPlayerFactionSelectUi
//             }
//             OpcodeServer::ShowQuestCompletionText => PacketServer::ShowQuestCompletionText,
//             OpcodeServer::ShowTaxiNodes => PacketServer::ShowTaxiNodes,
//             OpcodeServer::ShowTradeSkillResponse => PacketServer::ShowTradeSkillResponse,
//             OpcodeServer::SocketGemsFailure => PacketServer::SocketGemsFailure,
//             OpcodeServer::SocketGemsSuccess => PacketServer::SocketGemsSuccess,
//             OpcodeServer::SpecialMountAnim => PacketServer::SpecialMountAnim,
//             OpcodeServer::SpecInvoluntarilyChanged => PacketServer::SpecInvoluntarilyChanged,
//             OpcodeServer::SpellAbsorbLog => PacketServer::SpellAbsorbLog,
//             OpcodeServer::SpellCategoryCooldown => PacketServer::SpellCategoryCooldown,
//             OpcodeServer::SpellChannelStart => PacketServer::SpellChannelStart,
//             OpcodeServer::SpellChannelUpdate => PacketServer::SpellChannelUpdate,
//             OpcodeServer::SpellCooldown => PacketServer::SpellCooldown,
//             OpcodeServer::SpellDamageShield => PacketServer::SpellDamageShield,
//             OpcodeServer::SpellDelayed => PacketServer::SpellDelayed,
//             OpcodeServer::SpellDispellLog => PacketServer::SpellDispellLog,
//             OpcodeServer::SpellEnergizeLog => PacketServer::SpellEnergizeLog,
//             OpcodeServer::SpellExecuteLog => PacketServer::SpellExecuteLog,
//             OpcodeServer::SpellFailedOther => PacketServer::SpellFailedOther,
//             OpcodeServer::SpellFailure => PacketServer::SpellFailure,
//             OpcodeServer::SpellFailureMessage => PacketServer::SpellFailureMessage,
//             OpcodeServer::SpellGo => PacketServer::SpellGo,
//             OpcodeServer::SpellHealAbsorbLog => PacketServer::SpellHealAbsorbLog,
//             OpcodeServer::SpellHealLog => PacketServer::SpellHealLog,
//             OpcodeServer::SpellInstakillLog => PacketServer::SpellInstakillLog,
//             OpcodeServer::SpellInterruptLog => PacketServer::SpellInterruptLog,
//             OpcodeServer::SpellMissLog => PacketServer::SpellMissLog,
//             OpcodeServer::SpellNonMeleeDamageLog => PacketServer::SpellNonMeleeDamageLog,
//             OpcodeServer::SpellOrDamageImmune => PacketServer::SpellOrDamageImmune,
//             OpcodeServer::SpellPeriodicAuraLog => PacketServer::SpellPeriodicAuraLog,
//             OpcodeServer::SpellPrepare => PacketServer::SpellPrepare,
//             OpcodeServer::SpellStart => PacketServer::SpellStart,
//             OpcodeServer::SpellVisualLoadScreen => PacketServer::SpellVisualLoadScreen,
//             OpcodeServer::SpiritHealerConfirm => PacketServer::SpiritHealerConfirm,
//             OpcodeServer::SplashScreenShowLatest => PacketServer::SplashScreenShowLatest,
//             OpcodeServer::StandStateUpdate => PacketServer::StandStateUpdate,
//             OpcodeServer::StartElapsedTimer => PacketServer::StartElapsedTimer,
//             OpcodeServer::StartElapsedTimers => PacketServer::StartElapsedTimers,
//             OpcodeServer::StartLightningStorm => PacketServer::StartLightningStorm,
//             OpcodeServer::StartLootRoll => PacketServer::StartLootRoll,
//             OpcodeServer::StartMirrorTimer => PacketServer::StartMirrorTimer,
//             OpcodeServer::StartTimer => PacketServer::StartTimer,
//             OpcodeServer::StopElapsedTimer => PacketServer::StopElapsedTimer,
//             OpcodeServer::StopMirrorTimer => PacketServer::StopMirrorTimer,
//             OpcodeServer::StopSpeakerbotSound => PacketServer::StopSpeakerbotSound,
//             OpcodeServer::StreamingMovies => PacketServer::StreamingMovies,
//             OpcodeServer::SummonCancel => PacketServer::SummonCancel,
//             OpcodeServer::SummonRaidMemberValidateFailed => {
//                 PacketServer::SummonRaidMemberValidateFailed
//             }
//             OpcodeServer::SummonRequest => PacketServer::SummonRequest,
//             OpcodeServer::SupercededSpells => PacketServer::SupercededSpells,
//             OpcodeServer::SuspendComms => PacketServer::SuspendComms,
//             OpcodeServer::SuspendToken => PacketServer::SuspendToken,
//             OpcodeServer::SyncWowEntitlements => PacketServer::SyncWowEntitlements,
//             OpcodeServer::TalentsInvoluntarilyReset => PacketServer::TalentsInvoluntarilyReset,
//             OpcodeServer::TaxiNodeStatus => PacketServer::TaxiNodeStatus,
//             OpcodeServer::TextEmote => PacketServer::TextEmote,
//             OpcodeServer::ThreatClear => PacketServer::ThreatClear,
//             OpcodeServer::ThreatRemove => PacketServer::ThreatRemove,
//             OpcodeServer::ThreatUpdate => PacketServer::ThreatUpdate,
//             OpcodeServer::TimeAdjustment => PacketServer::TimeAdjustment,
//             OpcodeServer::TimeSyncRequest => PacketServer::TimeSyncRequest,
//             OpcodeServer::TitleEarned => PacketServer::TitleEarned,
//             OpcodeServer::TitleLost => PacketServer::TitleLost,
//             OpcodeServer::TotemCreated => PacketServer::TotemCreated,
//             OpcodeServer::TotemDurationChanged => PacketServer::TotemDurationChanged,
//             OpcodeServer::TotemMoved => PacketServer::TotemMoved,
//             OpcodeServer::TradeStatus => PacketServer::TradeStatus,
//             OpcodeServer::TradeUpdated => PacketServer::TradeUpdated,
//             OpcodeServer::TrainerBuyFailed => PacketServer::TrainerBuyFailed,
//             OpcodeServer::TrainerList => PacketServer::TrainerList,
//             OpcodeServer::TransferAborted => PacketServer::TransferAborted,
//             OpcodeServer::TransferPending => PacketServer::TransferPending,
//             OpcodeServer::TransmogrifyNpc => PacketServer::TransmogrifyNpc,
//             OpcodeServer::TreasurePickerResponse => PacketServer::TreasurePickerResponse,
//             OpcodeServer::TriggerCinematic => PacketServer::TriggerCinematic,
//             OpcodeServer::TriggerMovie => PacketServer::TriggerMovie,
//             OpcodeServer::TurnInPetitionResult => PacketServer::TurnInPetitionResult,
//             OpcodeServer::TutorialFlags => PacketServer::TutorialFlags,
//             OpcodeServer::TwitterStatus => PacketServer::TwitterStatus,
//             OpcodeServer::UiHealingRangeModified => PacketServer::UiHealingRangeModified,
//             OpcodeServer::UiItemInteractionNpc => PacketServer::UiItemInteractionNpc,
//             OpcodeServer::UiMapQuestLinesResponse => PacketServer::UiMapQuestLinesResponse,
//             OpcodeServer::UndeleteCharacterResponse => PacketServer::UndeleteCharacterResponse,
//             OpcodeServer::UndeleteCooldownStatusResponse => {
//                 PacketServer::UndeleteCooldownStatusResponse
//             }
//             OpcodeServer::UnlearnedSpells => PacketServer::UnlearnedSpells,
//             OpcodeServer::UnloadChildMap => PacketServer::UnloadChildMap,
//             OpcodeServer::UpdateAadcStatusResponse => PacketServer::UpdateAadcStatusResponse,
//             OpcodeServer::UpdateAccountData => PacketServer::UpdateAccountData,
//             OpcodeServer::UpdateActionButtons => PacketServer::UpdateActionButtons,
//             OpcodeServer::UpdateBnetSessionKey => PacketServer::UpdateBnetSessionKey,
//             OpcodeServer::UpdateCapturePoint => PacketServer::UpdateCapturePoint,
//             OpcodeServer::UpdateCelestialBody => PacketServer::UpdateCelestialBody,
//             OpcodeServer::UpdateCharacterFlags => PacketServer::UpdateCharacterFlags,
//             OpcodeServer::UpdateChargeCategoryCooldown => {
//                 PacketServer::UpdateChargeCategoryCooldown
//             }
//             OpcodeServer::UpdateCooldown => PacketServer::UpdateCooldown,
//             OpcodeServer::UpdateDailyMissionCounter => PacketServer::UpdateDailyMissionCounter,
//             OpcodeServer::UpdateExpansionLevel => PacketServer::UpdateExpansionLevel,
//             OpcodeServer::UpdateGameTimeState => PacketServer::UpdateGameTimeState,
//             OpcodeServer::UpdateInstanceOwnership => PacketServer::UpdateInstanceOwnership,
//             OpcodeServer::UpdateLastInstance => PacketServer::UpdateLastInstance,
//             OpcodeServer::UpdateObject => PacketServer::UpdateObject,
//             OpcodeServer::UpdatePrimarySpec => PacketServer::UpdatePrimarySpec,
//             OpcodeServer::UpdateTalentData => PacketServer::UpdateTalentData,
//             OpcodeServer::UpdateTaskProgress => PacketServer::UpdateTaskProgress,
//             OpcodeServer::UpdateWeeklySpellUsage => PacketServer::UpdateWeeklySpellUsage,
//             OpcodeServer::UpdateWorldState => PacketServer::UpdateWorldState,
//             OpcodeServer::UserlistAdd => PacketServer::UserlistAdd,
//             OpcodeServer::UserlistRemove => PacketServer::UserlistRemove,
//             OpcodeServer::UserlistUpdate => PacketServer::UserlistUpdate,
//             OpcodeServer::UseEquipmentSetResult => PacketServer::UseEquipmentSetResult,
//             OpcodeServer::VasCheckTransferOkResponse => PacketServer::VasCheckTransferOkResponse,
//             OpcodeServer::VasGetQueueMinutesResponse => PacketServer::VasGetQueueMinutesResponse,
//             OpcodeServer::VasGetServiceStatusResponse => PacketServer::VasGetServiceStatusResponse,
//             OpcodeServer::VasPurchaseComplete => PacketServer::VasPurchaseComplete,
//             OpcodeServer::VasPurchaseStateUpdate => PacketServer::VasPurchaseStateUpdate,
//             OpcodeServer::VendorInventory => PacketServer::VendorInventory,
//             OpcodeServer::VignetteUpdate => PacketServer::VignetteUpdate,
//             OpcodeServer::VoiceChannelInfoResponse => PacketServer::VoiceChannelInfoResponse,
//             OpcodeServer::VoiceChannelSttTokenResponse => {
//                 PacketServer::VoiceChannelSttTokenResponse
//             }
//             OpcodeServer::VoiceLoginResponse => PacketServer::VoiceLoginResponse,
//             OpcodeServer::VoidItemSwapResponse => PacketServer::VoidItemSwapResponse,
//             OpcodeServer::VoidStorageContents => PacketServer::VoidStorageContents,
//             OpcodeServer::VoidStorageFailed => PacketServer::VoidStorageFailed,
//             OpcodeServer::VoidStorageTransferChanges => PacketServer::VoidStorageTransferChanges,
//             OpcodeServer::VoidTransferResult => PacketServer::VoidTransferResult,
//             OpcodeServer::WaitQueueFinish => PacketServer::WaitQueueFinish,
//             OpcodeServer::WaitQueueUpdate => PacketServer::WaitQueueUpdate,
//             OpcodeServer::Warden3Data => PacketServer::Warden3Data,
//             OpcodeServer::Warden3Disabled => PacketServer::Warden3Disabled,
//             OpcodeServer::Warden3Enabled => PacketServer::Warden3Enabled,
//             OpcodeServer::WarfrontComplete => PacketServer::WarfrontComplete,
//             OpcodeServer::WargameRequestSuccessfullySentToOpponent => {
//                 PacketServer::WargameRequestSuccessfullySentToOpponent
//             }
//             OpcodeServer::Weather => PacketServer::Weather,
//             OpcodeServer::WeeklyRewardsProgressResult => PacketServer::WeeklyRewardsProgressResult,
//             OpcodeServer::WeeklyRewardsResult => PacketServer::WeeklyRewardsResult,
//             OpcodeServer::WeeklyRewardClaimResult => PacketServer::WeeklyRewardClaimResult,
//             OpcodeServer::WeeklySpellUsage => PacketServer::WeeklySpellUsage,
//             OpcodeServer::Who => PacketServer::Who,
//             OpcodeServer::WhoIs => PacketServer::WhoIs,
//             OpcodeServer::WillBeKickedForAddedSubscriptionTime => {
//                 PacketServer::WillBeKickedForAddedSubscriptionTime
//             }
//             OpcodeServer::WorldMapOpenNpc => PacketServer::WorldMapOpenNpc,
//             OpcodeServer::WorldQuestUpdateResponse => PacketServer::WorldQuestUpdateResponse,
//             OpcodeServer::WorldServerInfo => PacketServer::WorldServerInfo,
//             OpcodeServer::WowEntitlementNotification => PacketServer::WowEntitlementNotification,
//             OpcodeServer::XpGainAborted => PacketServer::XpGainAborted,
//             OpcodeServer::XpGainEnabled => PacketServer::XpGainEnabled,
//             OpcodeServer::ZoneUnderAttack => PacketServer::ZoneUnderAttack,
//             OpcodeServer::AccountHeirloomUpdate => PacketServer::AccountHeirloomUpdate,
//             OpcodeServer::CompressedPacket => PacketServer::CompressedPacket,
//             OpcodeServer::MultiplePackets => PacketServer::MultiplePackets,
//         }
//     }
// }
